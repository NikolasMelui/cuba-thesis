#
# Copyright (c) 2008-2014 Haulmont. All rights reserved.
# Use is subject to license terms, see http://www.cuba-platform.com/license for details.
#

caption=Edit filter
captionShortForm=Define query
filterName=Filter name
availableForAll=Available for all users
default=Default
applyDefault=Apply default
addCondition=Add
removeCondition=Remove
addAndGroup=Add AND
addOrGroup=Add OR
moveUp=
moveDown=
hidden=Hidden
required=Required
width=Width
defaultValue=Default value
filterCaption=Caption
property=Attribute
conditionProperties=Condition properties
showComponentName=Show component name
showComponentName.title=Component name
conditionIsNotSelected=Please select an attribute or custom condition
fillFilterName=Fill "Filter name" field

CustomConditionFrame.name=Name
CustomConditionFrame.join=Join
CustomConditionFrame.where=Where
CustomConditionFrame.type=Param type
CustomConditionFrame.entity=Entity/Enum
CustomConditionFrame.inExpr=List
CustomConditionFrame.entityParamWhere=Param Where
CustomConditionFrame.entityParamView=Param View
CustomConditionFrame.fillName=Fill "Name" field
CustomConditionFrame.fillType=Fill "Param type" field
CustomConditionFrame.fillEntity=Fill "Entity" field

CustomConditionFrame.joinClauseHelp=A JPQL expression which will be added to the data source query "from" section. \
  This can be required to create a complex condition based on an attribute of a related collection. \
  The expression should be started with "join" or "left join" statements.<br/>\
  The <b>{E}</b> placeholder should be used in the expression instead of the alias of the entity being selected.<br/>\
  <br/>\
  Example of joining the Repair collection when selecting Car entities:<br/>\
  <code>join {E}.repairs r</code>


CustomConditionFrame.whereClauseHelp=A JPQL expression which will be added to the data source query "where" section. \
  The <b>{E}</b> placeholder should be used in the expression instead of the alias of the entity being selected.<br/>\
  The condition can only have one parameter denoted by <b>?</b> if used.<br/>\
  <br/>\
  Example of selecting Car entities by an attribute of the joined Repair collection:<br/>\
  <code>r.description like ?</code>

CustomConditionFrame.paramWhereClauseHelp=A JPQL expression which is used to select the list of condition parameter values if the \
  parameter is a related entity. \
  The <b>{E}</b> placeholder should be used in the expression instead of the alias of the parameter entity.<br/>\
  <br/>\
  For example, let us assume that Car has a reference to Model. Then possible condition parameter values list can be \
  limited to "Audi" models only:<br/>\
  <code>{E}.manufacturer = 'Audi'</code><br/>\
  <br/>\
  With the "Param Where" clause, you can introduce dependencies between parameters. For example, let us assume that Manufacturer \
  is a separate entity. That is Car has a reference to Model which in turn has a reference to Manufacturer. Then you \
  may want to create two conditions for the Cars filter: first to select a Manufacturer and second to select a Model. \
  To restrict the list of models by previously selected manufacturer, add a parameter to the "Param Where" expression:<br/>\
  <code>{E}.manufacturer.id = :component$filter.model_manufacturer90062</code><br/>\
  The actual parameter name is unique for the filter and can be found in the Filter editor by choosing the \
  "Show component name" item in the condition row context menu.

CustomConditionEdit.caption=Edit condition

DynamicAttributesConditionFrame.category=Category
DynamicAttributesConditionFrame.attribute=Attribute
DynamicAttributesConditionFrame.operation=Operation
DynamicAttributesConditionFrame.selectCategory=Select category
DynamicAttributesConditionFrame.selectAttribute=Select attribute
DynamicAttributesConditionFrame.selectOperator=Select operator

DynamicAttributesConditionEditor.caption=Edit condition

PropertyConditionFrame.operation=Operation
