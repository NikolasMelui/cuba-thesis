#
# Copyright (c) 2008-2014 Haulmont. All rights reserved.
# Use is subject to license terms, see http://www.cuba-platform.com/license for details.
#

caption=Редактирование фильтра
captionShortForm=Задать запрос
filterName=Имя фильтра
availableForAll=Доступен всем
default=По умолчанию
applyDefault=Применять по умолчанию
addCondition=Добавить
removeCondition=Удалить
addAndGroup=Группа И
addOrGroup=Группа ИЛИ
moveUp=
moveDown=
hidden=Скрытое
required=Обязательное
width=Ширина
filterCaption=Заголовок
property=Атрибут
defaultValue=Значение<br/>по умолчанию
conditionProperties=Редактирование условия
showComponentName=Показать имя компонента
showComponentName.title=Имя компонента
conditionIsNotSelected=Выберите условие по атрибуту или специальное условие
fillFilterName=Заполните поле "Имя фильтра"

CustomConditionFrame.name=Имя
CustomConditionFrame.join=Join
CustomConditionFrame.where=Where
CustomConditionFrame.type=Тип параметра
CustomConditionFrame.entity=Сущность
CustomConditionFrame.inExpr=В списке
CustomConditionFrame.entityParamWhere=Param Where
CustomConditionFrame.entityParamView=Param View
CustomConditionFrame.fillName=Заполните поле "Имя"
CustomConditionFrame.fillType=Заполните поле "Тип параметра"
CustomConditionFrame.fillEntity=Заполните поле "Сущность"
CustomConditionFrame.fillWhere=Заполните поле "Where"

CustomConditionFrame.joinClauseHelp=Выражение JPQL, которое будет добавлено в секцию "from" запроса источника данных. \
  Это может потребоваться для создания условия по атрибуту связанной коллекции. \
  Значение данного атрибута должно включать в себя предложения "join" или "left join". \
  Вместо алиаса отбираемой сущности в выражении нужно использовать метку (placeholder) <b>{E}</b>.<br/>\
  <br/>\
  Пример присоединения коллекции сущности Repair при отборе экземпляров сущности Car:<br/>\
  <code>join {E}.repairs r</code>


CustomConditionFrame.whereClauseHelp=Выражение JPQL, которое будет добавлено в условие "where" запроса источника данных. \
  Вместо алиаса отбираемой сущности в выражении нужно использовать метку (placeholder) <b>{E}</b>.<br/>\
  Параметр условия может быть только один, и если он есть, обозначается символом <b>?</b>.<br/>\
  <br/>\
  Пример отбора экземпляров сущности Car по атрибуту присоединенной коллекции сущности Repair:<br/>\
  <code>r.description like ?</code>

CustomConditionFrame.paramWhereClauseHelp=Выражение JPQL для отбора списка значений параметра условия, если параметр является связанной сущностью. \
  Вместо алиаса сущности параметра в выражении нужно использовать метку (placeholder) <b>{E}</b>.<br/>\
  <br/>\
  Например, предположим, что сущность Car имеет ссылку на сущность Model. Тогда список возможных значений параметра \
  может быть ограничен только моделями "Audi":<br/>\
  <code>{E}.manufacturer = 'Audi'</code><br/>\
  <br/>\
  Используя "Param Where" можно вводить зависимости между параметрами. \
  Например, предположим, что Manufacturer является отдельной сущностью. То есть Car ссылается на Model, которая в свою очередь \
  ссылается на Manufacturer. Тогда для фильтра по Car можно создать два условия: первое для выбора Manufacturer и второе \
  для выбора Model. Чтобы ограничить список моделей выбранным перед этим производителем, добавьте в выражение "Param Where" \
  параметр:<br/>\
  <code>{E}.manufacturer.id = :component$filter.model_manufacturer90062</code><br/>\
  Реальное имя параметра уникально для фильтра и может быть найдено следующим образом: выберите строку соответствующего \
  условия в редакторе фильтра, вызовите контекстное меню правой клавишей мыши и выберите пункт "Показать имя компонента".

CustomConditionEdit.caption=Редактирование условия

RuntimePropConditionFrame.category=Категория
RuntimePropConditionFrame.attribute=Атрибут
RuntimePropConditionFrame.operation=Операция

RuntimePropConditionEditor.caption=Редактирование условия

PropertyConditionFrame.operation=Операция


