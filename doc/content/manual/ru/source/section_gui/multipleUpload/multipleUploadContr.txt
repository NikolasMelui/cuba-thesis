public class UploadSample extends AbstractWindow {

    @Inject
    private FileUploadField uploadField;

    @Inject
    private TimeSource timeSource;

    @Inject
    private TextField textFieldInfo;

    @Inject
    private FileMultiUploadField uploadTemplateAttachment;

    private FileDescriptor fd;

    @Override
    public void init(Map<String, Object> params) {
        super.init(params);
        initAttachmentUpload();
    }

    private void initAttachmentUpload() {
        uploadTemplateAttachment.addListener(new FileMultiUploadField.UploadListener() {
            @Override
            public void queueUploadComplete() {
                FileUploadingAPI fileUploadingAPI = AppBeans.get(FileUploadingAPI.NAME);
                textFieldInfo.setValue("");
                String val = "";
                Map<UUID, String> uploadMap = uploadTemplateAttachment.getUploadsMap();
                for (UUID fileId : uploadMap.keySet()) {
                    long length = fileUploadingAPI.getFile(fileId).length();

                    FileDescriptor fd = new FileDescriptor();
                    fd.setName(uploadMap.get(fileId));
                    fd.setExtension(fd.getFileExt());
                    fd.setSize((int) length);
                    fd.setCreateDate(timeSource.currentTimestamp());

                    try {
                        fileUploadingAPI.putFileIntoStorage(fileId, fd);
                        val = val + fd.getName() + "\n";
                    } catch (FileStorageException e) {
                        new RuntimeException(e);
                    }
                }
                if (val != "") {
                    textFieldInfo.setValue(val);
                }
                showNotification(getMessage("files"), IFrame.NotificationType.HUMANIZED);
                uploadTemplateAttachment.getUploadsMap().clear();
            }

            @Override
            public void errorNotify(String fileName, String message, int errorCode) {
                showNotification(getMessage("template.edit.uploadTemplateAttachmentsUnsuccess"), IFrame.NotificationType.ERROR);
            }
        });
    }
}
