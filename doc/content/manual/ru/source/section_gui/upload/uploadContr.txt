public class UploadSample extends AbstractWindow {

    @Inject
    private FileUploadField uploadField;

    @Inject
    private TimeSource timeSource;

    @Inject
    private Label fileName;

    private FileDescriptor fd;

    @Override
    public void init(Map<String, Object> params) {
        super.init(params);

        uploadField.addListener(new FileUploadField.Listener() {
            public void uploadStarted(Event event) {
				//код обработки начала загрузки
                uploadField.setEnabled(false);
            }

            public void uploadFinished(Event event) {
			//код обработки окончания загрузки
                uploadField.setEnabled(true);
            }

            public void uploadSucceeded(Event event) {
				//код обработки успешной загрузки
                fd = new FileDescriptor();
                fd.setName(uploadField.getFileName());

                FileUploadingAPI fileUploading = AppBeans.get(FileUploadingAPI.NAME);
                File file = fileUploading.getFile(uploadField.getFileId());
                fd.setSize((int) file.length());

                fd.setCreateDate(timeSource.currentTimestamp());
                saveFile();
                showNotification(getMessage("File") + " "+uploadField.getFileName() + " " + getMessage("success"), NotificationType.HUMANIZED);
                fileName.setValue(uploadField.getFileName());
            }

            public void uploadFailed(Event event) {
				//код обработки ошибок загрузки
                showNotification("uploadUnsuccess", NotificationType.HUMANIZED);
            }

            public void updateProgress(long readBytes, long contentLength) {
				//отслеживание процесса загрузки, например тут можно организовать обновление состояния индикатора загрузки
            }
        });
    }

    private void saveFile() {
        FileUploadingAPI fileUploading = AppBeans.get(FileUploadingAPI.NAME);
        try {
            fileUploading.putFileIntoStorage(uploadField.getFileId(), fd);
        } catch (FileStorageException e) {
            throw new RuntimeException(e);
        }
    }
}
