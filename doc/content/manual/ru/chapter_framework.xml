<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="chapter_framework" lang="ru">
  <title>Устройство платформы</title>
  <para>Данная глава содержит подробное описание архитектуры, компонентов и механизмов платформы CUBA.</para>
  <section>
    <title>Архитектура</title>
    <para>В данной главе рассмотрена архитектура CUBA-приложений в различных разрезах: по уровням, по модулям, и по используемым базовым проектам.</para>
    <section id="app_tiers_section">
      <title>Уровни приложения</title>
      <para>Приложение, основанное на платформе, состоит из нескольких <firstterm>уровней</firstterm> (tiers):</para>
      <variablelist>
        <varlistentry>
          <term>Middleware</term>
          <listitem>
            <para>Средний слой, содержащий основную бизнес-логику приложения и выполняющий обращения к базе данных. Представляет собой отдельное веб-приложение под управлением стандартного контейнера <glossterm linkend="javaee_web_profile_glossentry">Java EE Web Profile</glossterm>. См. <xref linkend="middleware_section"/></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Web Client</term>
          <listitem>
            <para>Основной клиентский уровень, содержащий  интерфейс, предназначенный, как правило, для внутренних пользователей организации. Представляет собой отдельное веб-приложение под управлением стандартного контейнера <application>Java EE Web Profile</application>. Реализация <link linkend="gui_framework_section">пользовательского интерфейса</link> основана на фреймворке <application>Vaadin</application>. См. <xref linkend="client_section"/></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Desktop Client</term>
          <listitem>
            <para>Дополнительный клиентский уровень, содержащий  интерфейс, предназначенный, как правило, для внутренних пользователей организации. Представляет собой десктопное Java-приложение, реализация пользовательского интерфейса основана на фреймворке <application>Java Swing</application>. См. <xref linkend="client_section"/></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Web Portal</term>
          <listitem>
            <para>Дополнительный клиентский уровень, содержащий интерфейс для внешних пользователей. Может использоваться для интеграции с мобильными устройствами или сторонними приложениями. Представляет собой отдельное веб-приложение под управлением стандартного контейнера <application>Java EE Web Profile</application>. Реализация пользовательского интерфейса основана на фреймворке <application>Spring MVC</application>. См. <xref linkend="portal_section"/></para>
          </listitem>
        </varlistentry>
      </variablelist>
      <figure>
        <title>Уровни приложения</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/AppTiers.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>CUBA-приложение всегда состоит как минимум из двух частей:</para>
      <itemizedlist>
        <listitem>
          <para>Веб-приложения среднего слоя (<structname>Middleware</structname>)</para>
        </listitem>
        <listitem>
          <para>Веб-приложения веб-клиента (<structname>Web Client</structname>)</para>
        </listitem>
      </itemizedlist>
      <para>Опционально приложение может содержать десктопный клиент и один или несколько порталов.</para>
      <para>Все клиенты взаимодействуют со средним слоем одинаковым образом посредством протокола <application>HTTP</application>, что позволяет размещать средний слой произвольным образом, в том числе за сетевым экраном. Следует отметить, что при развертывании в простейшем случае среднего слоя и веб-клиента на одном сервере между ними организуется локальное взаимодействие в обход сетевого стека для снижения накладных расходов.</para>
    </section>
    <section id="app_modules_section">
      <title>Модули приложения</title>
      <para>Модуль - наименьшая структурная единица CUBA-приложения. Представляет собой один модуль проекта приложения и соответствующий ему JAR файл.</para>
      <para>Стандартные модули: <itemizedlist>
          <listitem>
            <para><structname>global</structname> - включает в себя классы сущностей, интерфейсы сервисов и другие общие для всех уровней классы. Используется на всех <link linkend="app_tiers_section">уровнях приложения</link>.</para>
          </listitem>
          <listitem>
            <para><structname>core</structname> - реализация сервисов и всех остальных компонентов среднего слоя. Используется только на уровне <structname>Middleware</structname>.</para>
          </listitem>
          <listitem>
            <para><structname>gui</structname> - общие компоненты <link linkend="gui_framework_section">универсального пользовательского интерфейса</link>. Используется  на уровнях <structname>Web Client</structname> и <structname>Desktop Client</structname>.</para>
          </listitem>
          <listitem>
            <para><structname>web</structname> - реализация универсального пользовательского интерфейса на <application>Vaadin</application>, а также другие специфичные для веб-клиента классы. Используется на уровне <structname>Web Client</structname>.</para>
          </listitem>
          <listitem>
            <para><structname>desktop</structname> - опциональный модуль - реализация универсального пользовательского интерфейса на <application>Java Swing</application>, а также другие специфичные для десктоп-клиента классы. Используется на уровне <structname>Desktop Client</structname>.</para>
          </listitem>
          <listitem>
            <para><structname>portal</structname> - опциональный модуль - реализация веб-портала на <application>Spring MVC</application>.</para>
          </listitem>
        </itemizedlist>  </para>
      <figure>
        <title>Модули приложения</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/AppModules.png"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>
    <section id="base_projects_section">
      <title>Базовые проекты</title>
      <para id="text_module_id_1">Функциональность платформы разделена на несколько так называемых <firstterm>базовых проектов</firstterm>: <itemizedlist>
          <listitem>
            <para><structname>cuba</structname> - основной базовый проект, содержит всю функциональность, описанную в данном руководстве, плюс подсистему безопасности (управление пользователями и их доступом к данным)</para>
          </listitem>
          <listitem>
            <para><structname>reports</structname> - подсистема генерации отчетов</para>
          </listitem>
          <listitem>
            <para><structname>workflow</structname> - подсистема управления потоками работ со встроенным визуальным редактором бизнес-процессов</para>
          </listitem>
          <listitem>
            <para><structname>fts</structname> - подсистема полнотекстового поиска</para>
          </listitem>
          <listitem>
            <para><structname>charts</structname> - подсистема вывода диаграмм</para>
          </listitem>
          <listitem>
            <para><structname>ccpayments</structname> - подсистема работы с кредитными картами</para>
          </listitem>
          <listitem>
            <para><structname>bpmn</structname> - механизм исполнения бизнес-процессов по стандарту <application>BPMN 2.0</application></para>
          </listitem>
        </itemizedlist></para>
      <para id="text_module_id_2">Создаваемое на основе платформы приложение может включать в себя функциональность базовых проектов путем объявления зависимостей от их <glossterm linkend="artifact_glossentry"> артефактов</glossterm>. Зависимость от артефактов <structname>cuba</structname> является обязательной. Опциональные базовые проекты в свою очередь также зависят от <structname>cuba</structname>, и в принципе могут содержать зависимости между собой.</para>
      <figure>
        <title>Зависимости между проектами</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/BaseProjects.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Сплошными линиями изображены обязательные зависимости, пунктирными − опциональные.</para>
    </section>
    <section>
      <title>Состав приложения</title>
      <para>Вышеописанные архитектурные принципы напрямую отражаются на составе собранного приложения. Рассмотрим его на примере простого приложения  <application>sales</application>, которое имеет 2 уровня - <structname>Middleware</structname> и <structname>Web Client</structname>; и включает в себя функциональность базовых проектов <structname>cuba</structname> и <structname>reports</structname>.</para>
      <figure>
        <title>Состав простого приложения</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/SampleAppArtifacts.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>На рисунке изображено содержимое некоторых каталогов сервера <application>Tomcat</application> с развернутым в нем приложением <application>sales</application>. </para>
      <para><link linkend="app_tiers_section">Уровень</link><structname> Middleware</structname> реализован веб-приложением <filename>app-core</filename>, уровень <structname>Web Client</structname> - веб-приложением <filename>app</filename>. Исполняемый код веб-приложений содержится в каталогах <filename>WEB-INF/lib</filename> в наборе JAR-файлов. Каждый JAR представляет собой результат сборки (<glossterm linkend="artifact_glossentry">артефакт</glossterm>) одного из <link linkend="app_modules_section">модулей</link> приложения или <link linkend="base_projects_section">базового проекта</link>.</para>
      <para>Например, состав JAR-файлов веб-приложения среднего слоя <filename>app-core</filename> определяется тем, что уровень <structname>Middleware</structname> состоит из модулей <structname>global</structname> и <structname>core</structname>, и приложение использует базовые проекты <structname>cuba</structname> и <structname>reports</structname> (в данном случае версии 4.0.0). </para>
    </section>
  </section>
  <section>
    <title>Общие компоненты</title>
    <para>В данной главе рассмотрены компоненты платформы, общие для всех <link linkend="app_tiers_section">уровней</link> приложения.</para>
    <section>
      <title>Модель данных</title>
      <para>Предметная область моделируется в системе с помощью взаимосвязанных классов Java, называемых классами сущностей или просто сущностями. </para>
      <para>Сущности подразделяются на две категории:<itemizedlist>
          <listitem>
            <para>персистентные - экземпляры таких сущностей хранятся в таблицах базы данных</para>
          </listitem>
          <listitem>
            <para>неперсистентные - экземпляры существуют только в оперативной памяти</para>
          </listitem>
        </itemizedlist></para>
      <para>Класс сущности должен удовлетворять следующим требованиям: <itemizedlist>
          <listitem>
            <para>наследоваться от одного из базовых классов, предоставляемых платформой (см. ниже)</para>
          </listitem>
          <listitem>
            <para>иметь набор полей и методов доступа, соответствующих атрибутам сущностей</para>
          </listitem>
          <listitem>
            <para>атрибуты должны быть определенным образом аннотированы для работы <glossterm linkend="jpa_glossentry">JPA</glossterm> (в случае персистентной сущности) и <link linkend="metadata_framework_section">фреймворка метаданных</link> </para>
          </listitem>
        </itemizedlist></para>
      <figure>
        <title>Базовые классы сущностей</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/EntityClasses.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Рассмотрим базовые классы и интерфейсы сущностей более подробно. <itemizedlist>
          <listitem>
            <para><interfacename>Instance</interfacename> - декларирует базовые методы работы с объектами предметной области: <itemizedlist>
                <listitem>
                  <para>получение ссылки на мета-класс объекта</para>
                </listitem>
                <listitem>
                  <para>генерация имени экземпляра</para>
                </listitem>
                <listitem>
                  <para>чтение/установка значений атрибутов по имени</para>
                </listitem>
                <listitem>
                  <para>добавление слушателей, получающих уведомления об изменениях атрибутов</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para><interfacename>Entity</interfacename> - дополняет <interfacename>Instance</interfacename> понятием идентификатора сущности, причем <interfacename>Entity</interfacename> не определяет тип идентификатора, оставляя эту возможность наследникам</para>
          </listitem>
          <listitem>
            <para><classname>AbstractInstance</classname> - реализует логику работы со слушателями изменения атрибутов</para>
          </listitem>
          <listitem>
            <para><classname>AbstractNotPersistentEntity</classname> - базовый класс неперсистентных сущностей с идентификаторами типа <classname>UUID</classname>.</para>
          </listitem>
          <listitem>
            <para><interfacename>BaseEntity</interfacename> - декларирует присущие всем персистентным сущностям методы работы с информацией о том, кто и когда создал экземпляр сущности в базе данных </para>
          </listitem>
          <listitem>
            <para><classname>BaseUuidEntity</classname> - реализует <interfacename>BaseEntity</interfacename> с типом идентификатора <classname>UUID</classname> и поддержкой <glossterm linkend="jpa_glossentry">JPA</glossterm></para>
          </listitem>
          <listitem>
            <para><interfacename>Versioned</interfacename> - интерфейс сущностей, поддерживающих <glossterm linkend="optimistic_locking_glossentry">оптимистичную блокировку</glossterm></para>
          </listitem>
          <listitem>
            <para><interfacename>Updatable</interfacename> - интерфейс сущностей, для которых требуется сохранять информацию о том, кто и когда изменял экземпляр в последний раз</para>
          </listitem>
          <listitem>
            <para><interfacename>SoftDelete</interfacename> - интерфейс сущностей, поддерживающих <link linkend="soft_delete_section">мягкое удаление</link></para>
          </listitem>
          <listitem>
            <para><classname>StandardEntity</classname> - наиболее часто используемый базовый класс персистентных сущностей, реализующий вышеперечисленные интерфейсы</para>
          </listitem>
        </itemizedlist></para>
      <para>При создании классов сущностей рекомендуется придерживаться следующих правил:<itemizedlist>
          <listitem>
            <para>если сущность не хранится в БД - наследуйте ее от <classname>AbstractNotPersistentEntity</classname></para>
          </listitem>
          <listitem>
            <para>если сущность только создается в БД, никогда не изменяется, и мягкое удаление не требуется - наследуйте ее от <classname>BaseUuidEntity</classname></para>
          </listitem>
          <listitem>
            <para>если сущность ведет себя стандартным образом - изменяется в БД, требует оптимистичной блокировки и мягкого удаления - наследуйте ее от <classname>StandardEntity</classname></para>
          </listitem>
          <listitem>
            <para>в противном случае наследуйте сущность от <classname>BaseUuidEntity</classname> и реализуйте в классе тот набор интерфейсов <interfacename>Versioned</interfacename>, <interfacename>Updatable</interfacename>, <interfacename>SoftDelete</interfacename>, который требуется</para>
          </listitem>
        </itemizedlist></para>
      <section id="soft_delete_section">
        <title>Мягкое удаление</title>
        <para>TODO</para>
      </section>
    </section>
    <section id="metadata_framework_section">
      <title>Metadata Framework</title>
      <para>Metadata Framework позволяет создавать описание предметной области в терминах метаданных.</para>
      <figure>
        <title>Структура метаданных</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/Metadata Framework.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <itemizedlist>
        <title>Назначение метаданных</title>
        <listitem>
          <para>Предоставляют удобный интерфейс для получения информации о <glossterm linkend="entity_glossentry">сущностях</glossterm>, атрибутах и отношениях между сущностями; для навигации по ссылкам</para>
        </listitem>
        <listitem>
          <para>Служат более удобной в использовании и более функциональной альтернативой <application>Java Reflection</application></para>
        </listitem>
        <listitem>
          <para>Регламентируют допустимые типы данных и отношений между сущностями</para>
        </listitem>
        <listitem>
          <para>Позволяют создавать универсальные механизмы работы с данными</para>
        </listitem>
      </itemizedlist>
      <para>Основными объектами метаданных являются <classname>MetaClass</classname> и <classname>MetaProperty</classname>.</para>
      <variablelist>
        <varlistentry>
          <term>MetaClass</term>
          <listitem>
            <para><classname>MetaClass</classname> описывает класс сущности. Он имеет уникальное имя и методы для получения списка атрибутов, а также классов предков и наследников.</para>
            <para><classname>MetaClass</classname> всегда ассоциирован с Java-классом, которого он представляет.</para>
            <itemizedlist>
              <listitem>
                <para><property>name</property> – имя, по соглашению первой частью имени до знака <code>$</code> является <code>namespace</code>, например, <classname>sec$User</classname></para>
              </listitem>
              <listitem>
                <para><property>properties</property> – список объектов <classname>MetaProperty</classname>, описывающих атрибуты объекта</para>
              </listitem>
              <listitem>
                <para><property>javaClass</property> – класс сущности, которой соответствует данный <classname>MetaClass</classname></para>
              </listitem>
              <listitem>
                <para><property>annotations</property> – коллекция аннотаций. Аннотация представляет собой произвольный именованный объект, который добавляется в <classname>MetaClass</classname> на этапе развертывания метаданных. Например, с помощью аннотаций в метаданных хранится длина строковых полей.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MetaProperty</term>
          <listitem>
            <para><classname>MetaProperty</classname> описывает атрибут сущности. Атрибут принадлежит мета-классу, который может быть получен методом <methodname>getDomain()</methodname>.</para>
            <para>Атрибут может быть следующих типов (метод <methodname>getType()</methodname>):</para>
            <itemizedlist>
              <listitem>
                <para>простой тип: <type>DATATYPE</type></para>
              </listitem>
              <listitem>
                <para>перечисление: <type>ENUM</type></para>
              </listitem>
              <listitem>
                <para>ссылочный тип двух видов:</para>
                <itemizedlist>
                  <listitem>
                    <para><type>ASSOCIATION</type> − простая ссылка на другой объект. Например, отношение инвойса и контрагента − ассоциация.</para>
                  </listitem>
                  <listitem>
                    <para><type>AGGREGATION</type> − ссылка на объект, который не имеет самостоятельного значения. <type>AGGREGATION</type> можно считать &quot;более тесным&quot; отношением, чем <type>ASSOCIATION</type>. Например, отношение инвойса и строки спецификации этого инвойса − <type>AGGREGATION</type>, т.к. строка спецификации не имеет смысла без самого инвойса.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para>Вид ссылочного атрибута <type>ASSOCIATION</type> или <type>AGGREGATION</type> влияет на режим редактирования сущности: в первом случае коммит связанной сущности происходит независимо, а во втором − связанная сущность коммитится в БД только вместе с основной сущностью.</para>
            <itemizedlist>
              <listitem>
                <para>name – имя свойства, соответствует имени атрибута сущности</para>
              </listitem>
              <listitem>
                <para>domain – MetaClass, которому принадлежит данное свойство</para>
              </listitem>
              <listitem>
                <para>type – тип свойства: DATATYPE, ENUM, ASSOCIATION, AGGREGATION</para>
              </listitem>
              <listitem>
                <para>range – интерфейс к свойствам MetaProperty</para>
              </listitem>
              <listitem>
                <para>mandatory – true если атрибут сущности должен быть не null</para>
              </listitem>
              <listitem>
                <para>readOnly – true если атрибут нельзя изменять</para>
              </listitem>
              <listitem>
                <para>inverse – ссылка на обратную сторону ассоциации между сущностями</para>
              </listitem>
              <listitem>
                <para>annotatedElement – Field или Method, соответствующие данному атрибуту сущности</para>
              </listitem>
              <listitem>
                <para>javaType – java-класс атрибута сущности</para>
              </listitem>
              <listitem>
                <para>declaringClass – java-класс, декларирующий данный атрибут (содержащий данный annotatedElement)</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Range</term>
          <listitem>
            <itemizedlist>
              <listitem>
                <para>isDatatype – true если MetaProperty.type == DATATYPE</para>
              </listitem>
              <listitem>
                <para>isEnum – true если MetaProperty.type == DATATYPE</para>
              </listitem>
              <listitem>
                <para>isClass – true если MetaProperty.type == ASSOCIATION or AGGREGATION</para>
              </listitem>
              <listitem>
                <para>ordered – true если свойство представляет собой упорядоченную коллекцию (List)</para>
              </listitem>
              <listitem>
                <para>cardinality – вид отношения, если свойство isClass: ONE_TO_ONE, MANY_TO_ONE, ONE_TO_MANY, MANY_TO_MANY</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="views_section">
      <title>Представления</title>
      <para>Механизм представлений обеспечивает извлечение из БД и передачу клиенту графов сущностей, ограниченных в глубину и/или по атрибутам.</para>
      <para>Представление всегда должно быть задано при запросе данных у <glossterm linkend="middleware_glossentry">middleware</glossterm>. Получив выборку данных по представлению, клиентский код может быть уверен, что все запрошенные атрибуты и связанные сущности получены, и их можно использовать без опаски получить <errorname role="italic">NullPointerException</errorname> или исключение типа <errorname role="italic">LazyInitializationException</errorname>. Представление решает и обратную задачу − ненужные атрибуты не извлекаются из БД, что снижает нагрузку в случае &quot;широких&quot; сущностей (содержащих большое число атрибутов).</para>
      <para>Для каждой сущности по умолчанию доступны два типа представления с именами <filename>_local</filename> и <filename>_minimal</filename></para>
      <itemizedlist>
        <listitem>
          <para><filename>_local</filename> определяет все локальные атрибуты сущности (т.е. все, кроме ссылок на другие сущности);</para>
        </listitem>
        <listitem>
          <para><filename>_minimal</filename> определяет атрибуты, входящие в <varname>InstanceName</varname>. Если <varname>InstanceName</varname> не задано, данное представление определяет только системные атрибуты (<varname>id</varname>, <varname>createTs</varname> и пр.).</para>
        </listitem>
      </itemizedlist>
      <para>Представления нужно определять в файле <filename>ext-views.xml</filename> модуля <structname>core</structname>.</para>
      <warning>
        <title>Внимание</title>
        <para>Имя представления должно быть уникально в пределах сущности. При этом рекомендуется давать более  &quot;описательные&quot; имена. Например, не &quot;browse&quot;, а &quot;nameOfEntityBrowse&quot;. Это упрощает поиск XML-описателей представлений по имени. </para>
      </warning>
      <para>Пример представления для сущности <classname>User</classname>, которое должно выбирать все простые поля и ссылку на группу:</para>
      <programlisting>&lt;view entity=&quot;sec$User&quot; name=&quot;user.browse&quot; extends=&quot;_local&quot;&gt;
     &lt;property name=&quot;group&quot; view=&quot;_local&quot;/&gt;
&lt;/view&gt;</programlisting>
    </section>
    <section id="infrastructure_interfaces_section">
      <title>Интерфейсы инфраструктуры</title>
      <para>Интерфейсы инфраструктуры обеспечивают доступ к часто используемой функциональности платформы. Некоторые из этих интерфейсов расположены в модуле <structname>global</structname> и могут быть использованы как из среднего слоя (Middleware), так и из любого клиентского кода, другие доступны только коду среднего слоя.</para>
      <para>Интерфейсы инфраструктуры реализуются управляемыми компонентами Spring Framework, поэтому зависимости от интерфейсов могут быть <glossterm linkend="dependency_injection_glossentry">внедрены</glossterm> в любые другие управляемые компоненты (<link linkend="managed_beans_section">управляемые бины (Managed Beans)</link>, <link linkend="services_section">сервисы среднего слоя (MiddlewareServices)</link>, <glossterm linkend="screen_controller_glossentry">контроллеры</glossterm> экранов (Screen Controllers)).</para>
      <para>Все интерфейсы инфраструктуры имеют соответствующие &quot;статические фасады&quot;, которые называются <firstterm>провайдерами</firstterm>, и могут быть использованы в неуправляемых компонентах (<glossterm linkend="pojo_glossentry">POJO</glossterm>, вспомогательных классах и так далее).</para>
      <para><emphasis role="bold">Глобальные интерфейсы инфраструктуры</emphasis></para>
      <simpara><emphasis role="bold">TimeSource</emphasis>. Обеспечивает получение текущего времени. Применение <classname>new Date()</classname> и т.п. запрещено. Статический фасад − <classname>TimeProvider</classname>.</simpara>
      <simpara><emphasis role="bold">UuidSource</emphasis>. Обеспечивает получение значений <classname>UUID</classname>, в том числе для идентификаторов сущностей. Статический фасад − <classname>UuidProvider</classname>.</simpara>
      <simpara><emphasis role="bold">UserSessionSource</emphasis>. Обеспечивает получение объекта сессии текущего пользователя. Статический фасад − <classname>UserSessionProvider</classname>.</simpara>
      <simpara><emphasis role="bold">Security</emphasis>. Содержит методы проверки прав текущего пользователя. Не имеет соответствующего статического фасада. При необходимости в статическом контексте можно получить через <classname>UserSessionProvider</classname> объект пользовательской сессии и вызвать соответствующие методы у него.</simpara>
      <simpara><emphasis role="bold">Metadata</emphasis>. Обеспечивает доступ к сессии <link linkend="metadata_framework_section">метаданных</link> и ViewRepository. Статический фасад − <classname>MetadataProvider</classname>.</simpara>
      <simpara><emphasis role="bold">Messages</emphasis>. Интерфейс <interface>Messages</interface> обеспечивает получение локализованных строк сообщений. Статический фасад − <classname>MessageProvider</classname>.</simpara>
      <simpara><emphasis role="bold">Configuration</emphasis>. Является фасадом к фреймворку работы с конфигурационными параметрами. Статический фасад − <classname>ConfigProvider</classname>.</simpara>
      <simpara><emphasis role="bold">Resources</emphasis>. Обеспечивает загрузку ресурсов из конфигурационного каталога приложения или из <code>classpath</code>, а также по явно указанному URL.</simpara>
      <simpara><emphasis role="bold">Scripting</emphasis>. Интерфейс <interface>Scripting</interface> обеспечивает возможность динамической компиляции и выполнения прикладного кода на Groovy и Java. Статический фасад − <interface>ScriptingProvider</interface>.</simpara>
      <para><emphasis role="bold">Интерфейсы инфраструктуры среднего слоя</emphasis></para>
      <simpara><emphasis role="bold">Persistence</emphasis>. Обеспечивает доступ к интерфейсам <interface>Transaction</interface>, <interface>EntityManager</interface>, и некоторые сервисные функции, относящиеся к хранению данных. Статический фасад − <classname>PersistenceProvider</classname>.</simpara>
      <section id="scripting_section">
        <title>Scripting</title>
        <para><interfacename>Scripting</interfacename> − глобальный интерфейс инфраструктуры, решающий следующие задачи:</para>
        <itemizedlist>
          <listitem>
            <para>Выполнение выражений и скриптов Groovy</para>
          </listitem>
          <listitem>
            <para>Компиляция и загрузка классов Groovy</para>
          </listitem>
          <listitem>
            <para>Компиляция и загрузка классов Java, поставляемых в исходниках в каталоге конфигурации приложения conf</para>
          </listitem>
          <listitem>
            <para>Загрузка ресурсов из каталога конфигурации приложения conf или из classpath.</para>
          </listitem>
        </itemizedlist>
        <para>Общий принцип действия таков: если запрашиваемый класс или ресурс имеется в каталоге conf, будет использован он, в противном случае будет произведен поиск по данному пути в classpath. Это дает возможность в production или в процессе разработки динамически подменять и дополнять приложение нужными классами и ресурсами.</para>
        <para><emphasis role="bold">Выполнение выражений (evaluate)</emphasis></para>
        <para><emphasis role="bold">Выполнение скриптов</emphasis><itemizedlist>
            <listitem>
              <para>При инициализации приложения могут быть заданы классы для импорта, автоматически добавляемые всем выражениям.</para>
            </listitem>
            <listitem>
              <para>Скомпилированные выражения сохраняются в кэше, что значительно ускоряет повторное выполнение.</para>
            </listitem>
          </itemizedlist></para>
        <para>Запуск скриптов выполняется методом runGroovyScript(). Имя скрипта должно содержать путь с корнем в conf (каталог конфигурации приложения).</para>
      </section>
    </section>
    <section>
      <title>Свойства приложения</title>
      <para wordsize="20"><emphasis role="bold">Основные понятия</emphasis></para>
      <para>Свойства приложения − именованные данные различных типов, определяющие всевозможные аспекты конфигурации и функционирования приложения.</para>
      <para>По назначению свойства приложения можно классифицировать следующим образом:</para>
      <itemizedlist>
        <listitem>
          <para>Конфигурационные параметры: определяют наборы конфигурационных файлов и некоторые параметры пользовательского интерфейса. Например: <parameter>cuba.springContextConfig</parameter>, <parameter>cuba.web.useLightHeader</parameter>.</para>
        </listitem>
        <listitem>
          <para>Параметры развертывания: различные URL для соединения <glossterm linkend="app_tiers_glossentry">уровней</glossterm> приложения, тип используемой БД, настройки подсистемы безопасности и т.д. Например: <parameter>cuba.connectionUrl</parameter>, <parameter>cuba.dbmsType,</parameter> <parameter>cuba.userSessionExpirationTimeoutSec</parameter>.</para>
        </listitem>
        <listitem>
          <para>Параметры времени выполнения: активность аудита, параметры отсылки email и т.д. Например, <parameter>cuba.security.EntityLog.enabled</parameter>, <parameter>cuba.email.smtpHost</parameter>.</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Работа со свойствами приложения</emphasis></para>
      <formalpara>
        <title>Программный доступ к свойствам</title>
        <para>Основной способ доступа к свойствам приложения из программного кода − использование Java-интерфейсов механизма Configuration Parameters. Кроме того, все свойства конфигурации и развертывания доступны через методы класса <classname>com.haulmont.cuba.core.sys.AppContext</classname>.</para>
      </formalpara>
      <formalpara>
        <title>Принадлежность уровням</title>
        <para>Как правило, некоторое свойство принадлежит только одному или нескольким <glossterm linkend="app_tiers_glossentry">уровням приложения</glossterm>. Например, <parameter>cuba.persistenceConfig</parameter> имеет смысл только для <glossterm linkend="text_middleware_id">Middleware</glossterm>,  <parameter>cuba.web.useLightHeader</parameter> − только для <glossterm linkend="app_tiers_glossentry">Web Client</glossterm>, а <parameter>cuba.springContextConfig </parameter>− для всех уровней. </para>
        <para>Принадлежность к уровню означает, что если Вы хотите задать значение некоторому свойству, это необходимо сделать на всех уровнях, которым данное свойство принадлежит (смотрите <link linkend="properties_storage_para">Хранение значений свойств</link>). </para>
        <para>Принадлежность можно выяснить следующими способами:<itemizedlist>
            <listitem>
              <para>Из документации</para>
            </listitem>
            <listitem>
              <para>Проследив использование свойства в коде приложения</para>
            </listitem>
            <listitem>
              <para>Если к свойству есть доступ через Java-интерфейс, то по принадлежности интерфейса модулю проекта. Ниже приведено соответствие модуля объявления интерфейса и принадлежности свойства <glossterm linkend="app_tiers_glossentry">уровням приложения</glossterm>:</para>
              <itemizedlist>
                <listitem>
                  <para><structname>global</structname> − свойство принадлежит всем <glossterm linkend="app_tiers_glossentry">уровням</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>core</structname> − <glossterm>Middleware</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>client</structname> − <glossterm linkend="text_webclient_id">Web Client</glossterm>, <glossterm linkend="text_portal_id">Web Portal</glossterm>, <glossterm linkend="text_desktop_id">Desktop Client</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>web</structname> − <glossterm linkend="text_webclient_id">Web Client</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>web-portal</structname> − <glossterm linkend="text_portal_id">Web Portal</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>desktop</structname> − <glossterm linkend="text_desktop_id">Desktop Client</glossterm></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist></para>
      </formalpara>
      <formalpara>
        <title>JMX-интерфейс</title>
        <para>Некоторые <glossterm linkend="app_tiers_glossentry">уровни приложения</glossterm> определяют JMX-интерфейсы для доступа к свойствам приложения. В частности, на уровне <glossterm linkend="text_middleware_id">Middleware</glossterm> имеется JMX-интерфейс <classname>ConfigStorageMBean</classname> с именем <classname>app-core.cuba:service=ConfigStorage</classname>, а на уровне <glossterm linkend="text_webclient_id">Web Client</glossterm> − <classname>ConfigurationMBean</classname> с именем <classname>app.cuba:service=Configuration</classname>. Методы этих интерфейсов работают по отдельности со свойствами конфигурации и развертывания (<parameter>*AppProperties</parameter>) и со свойствами времени выполнения (<parameter>*DbProperties</parameter>). Это обусловлено различием механизмов <link linkend="properties_storage_para">хранения</link> этих категорий свойств.</para>
      </formalpara>
      <para id="properties_storage_para"><emphasis role="bold">Хранение значений свойств</emphasis></para>
      <formalpara id="text_properties_files_1">
        <title>Файлы свойств</title>
        <para>Свойства, определяющие конфигурацию и параметры развертывания, задаются в специальных файлах свойств, имеющих имя вида <filename>*-app.properties</filename>. Каждый <glossterm linkend="app_tiers_glossentry">уровень приложения</glossterm> имеет набор таких файлов, включающий в себя файлы из базовых проектов платформы и файл текущего приложения. Набор файлов свойств различен для разных уровней приложения и определяется следующим образом:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>Для уровней, являющихся веб-приложениями (<glossterm linkend="text_middleware_id">Middleware</glossterm>, <glossterm linkend="text_webclient_id">Web Client</glossterm>, <glossterm linkend="text_portal_id">Web Portal</glossterm>) набор файлов свойств задается в <filename>web.xml</filename> в параметре <parameter>appPropertiesConfig</parameter>.</para>
        </listitem>
        <listitem>
          <para>Для уровня <glossterm linkend="text_desktop_id">Desktop Client</glossterm> основной способ задания набора файлов свойств − переопределение в приложении метода <methodname>getDefaultAppPropertiesConfig</methodname> в классе-наследнике <classname>com.haulmont.cuba.desktop.App</classname>.</para>
        </listitem>
      </itemizedlist>
      <para>Например, набор файлов свойств уровня <glossterm linkend="text_middleware_id">Middleware</glossterm> проекта <application>shop</application> − <filename>web.xml</filename> − выглядит следующим образом:</para>
      <programlisting>classpath:cuba-app.properties
classpath:shop-app.properties
file:${catalina.home}/conf/app-core/local.app.properties</programlisting>
      <para>Здесь префикс <classname>classpath:</classname> означает, что данный файл нужно искать в Java classpath, префикс <classname>file:</classname> − в файловой системе. Возможно использование системных свойств Java, в данном случае это <classname>catalina.home</classname> − путь к корню <application>Tomcat</application>.</para>
      <para>Порядок перечисления файлов важен, так как значения, указанные в каждом последующем файле заменяют значения одноименных свойств, заданные в предыдущих файлах. Этим достигается переопределение свойств платформы в конкретном приложении.</para>
      <para>Последний файл в приведенном наборе − <filename>local.app.properties</filename>.</para>
      <para><emphasis role="bold">Синтаксис</emphasis></para>
      <para><warning>
          <para>Обратите внимание на синтаксис ключей и значений в *.properties файлах.</para>
          <itemizedlist>
            <listitem>
              <para>Ключ состоит из латинских букв и цифр, разделенных точкой</para>
            </listitem>
            <listitem>
              <para>Значение пишется после знака равно (=)</para>
            </listitem>
            <listitem>
              <para>Значение <emphasis role="bold">никогда</emphasis> не берется в кавычки &quot;&quot; или &apos;&apos;</para>
            </listitem>
            <listitem>
              <para>Файловые пути записываются либо в UNIX виде (/opt/haulmont/), либо в Windows виде (c:\\haulmont\\)</para>
            </listitem>
            <listitem>
              <para>Для различных спецсимволов используются коды (\n \t \r). \  является зарезервированным символом, для вставки в значение экранируется сам собой (\\).
Подробнее: <ulink url="http://docs.oracle.com/javase/tutorial/java/data/characters.html">http://docs.oracle.com/javase/tutorial/java/data/characters.html</ulink></para>
            </listitem>
            <listitem>
              <para>В значениях могут присутствовать спецсимволы (пробелы, табуляции).     Внимательно проверяйте значения, скопированные в файл из других программ</para>
            </listitem>
          </itemizedlist>
        </warning></para>
      <formalpara>
        <title>Таблица базы данных</title>
        <para>Параметры времени выполнения хранятся в БД в таблице <database>SYS_CONFIG</database>. Хранящиеся в БД свойства кэшируются на уровне <glossterm linkend="text_middleware_id">Middleware</glossterm>. Очистить кэш можно через JMX-интерфейсы <classname>app-core.cuba:service=ConfigStorage</classname> методом <methodname>clearCache</methodname> или <classname>app-core.cuba:service=CachingFacade</classname> методом <methodname>clearConfigStorageCache</methodname>.</para>
      </formalpara>
      <para><emphasis role="bold">Значения по умолчанию</emphasis></para>
      <para>Если обращение к свойству производится через Java-интерфейс механизма Configuration Parameters и если значение свойства не задано в месте его хранения (файлы <filename>*-app.properties</filename> или БД), то будет возвращено значение по умолчанию, если оно задано в аннотации соответствующего метода Java-интерфейса.</para>
      <para>Подробное описание свойств подсистемы безопасности содержится в <link linkend="appendix_security_properties">Приложении А</link>.</para>
    </section>
    <section id="localization_section">
      <title>Локализация сообщений</title>
      <para>Содержит файлы локализованных сообщений  для задания названий сущностей, атрибутов сущностей, папок, заголовков закладок и так далее. Правила создания файлов локализованных сообщений:</para>
      <itemizedlist>
        <listitem>
          <para>Файл по умолчанию имеет имя <filename>messages.properties</filename>, для конкретного языка − <filename>messages_ru.properties</filename> и т.д. При отсутствии файла конкретного языка или при отсутствии искомого ключа в файле конкретного языка будет использовано сообщение из файла по умолчанию.</para>
        </listitem>
        <listitem>
          <para>Кодировка <code>UTF-8</code>.</para>
        </listitem>
        <listitem>
          <para>Можно включать другие файлы сообщений с помощью ключа <literal>@include</literal>. При этом если некоторый ключ встречается и во включаемом файле, и в текущем, будет использовано сообщение из текущего (переопределение). Пример включения файла:<programlisting>@include=com.haulmont.cuba.web

actions.Create=Create
actions.Edit=Edit
...</programlisting></para>
        </listitem>
        <listitem>
          <para>Полным именем пакета сообщений считается имя Java-пакета, содержащего языковые файлы. Например, именем пакета сообщений, расположенного в <filename>/com/haulmont/cuba/web/app/ui/security/user/messages.properties</filename> является строка <package>com.haulmont.cuba.web.app.ui.security.user</package></para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section id="middleware_section">
    <title>Компоненты среднего слоя</title>
    <para>На следующем рисунке приведены основные компоненты среднего слоя CUBA-приложения.</para>
    <figure>
      <title>Архитектура среднего слоя</title>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/Middleware.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Компоненты сгруппированы по двум <link linkend="text_modules">модулям</link>: <structname>core</structname> и <structname>global</structname>. В <structname>global</structname> расположены компоненты, доступные как коду Middleware, так и клиентскому коду. В <structname>core</structname> расположены компоненты ядра Middleware.</para>
    <para>Рассмотрим элементы диаграммы более подробно.</para>
    <para><link linkend="services_section">Services</link> – управляемые <glossterm linkend="container_glossentry">контейнером</glossterm> компоненты, формирующие границу приложения и предоставляющие интерфейс клиентам Middleware. Сервисы могут содержать бизнес-логику сами, либо делегировать выполнение <link linkend="managed_beans_section">Managed Beans</link>.</para>
    <para><link linkend="managed_beans_section">Managed Beans</link> – управляемые <glossterm linkend="container_glossentry">контейнером</glossterm> компоненты, содержащие бизнес-логику приложения. Вызываются <link linkend="services_section">сервисами</link>, другими бинами или через опциональный <glossterm linkend="jmx_glossentry">JMX</glossterm> интерфейс.</para>
    <para>Entity Classes – классы, моделирующие предметную область приложения.  Представляют собой аннотированные <glossterm linkend="pojo_glossentry">POJO</glossterm>. Аннотации используются для задания соответствий между столбцами таблицы базы данных и полями объектов с помощью <link linkend="text_additionally_JPA">OpenJPA</link>, а также для формирования метаданных в <link linkend="metadata_framework_section">Metadata Framework</link>.</para>
    <para><emphasis role="bold">Persistence</emphasis> −  центральный интерфейс для доступа к функциональности хранения данных. Позволяет получать ссылки на интерфейсы <classname>EntityManager</classname> и <classname>Transaction</classname>.</para>
    <para><emphasis role="bold">Transaction</emphasis> − интерфейс управления <link linkend="transactions_section">транзакциями</link> Middleware.</para>
    <para><emphasis role="bold">Entity Manager</emphasis> − интерфейс для работы с данными на уровне Middleware. Позволяет извлекать <glossterm linkend="entity_glossentry">сущности</glossterm> из базы данных по идентификатору и по запросу, а также сохранять и удалять их.</para>
    <para><link linkend="metadata_framework_section">Metadata Framework</link> позволяет создавать описание предметной области в терминах классов, атрибутов и отношений между классами. Метаданные (модель данных) существенно упрощают создание универсальных механизмов работы с данными. Исходной информацией для построения модели являются аннотированные классы сущностей.</para>
    <para><link linkend="infrastructure_interfaces_section">Global Infrastructure Interfaces</link> (интерфейсы инфраструктуры) предоставляют доступ к общей часто используемой функциональности. Реализованы в платформе аналогично <link linkend="managed_beans_section">Managed Beans</link>.

Все интерфейсы инфраструктуры имеют соответствующие <firstterm>статические фасады</firstterm> − классы со статическими методами, позволяющие иметь доступ к нужной функциональности из статического контекста (при невозможности использовать <link linkend="middleware_section">dependency injection</link>). Статические фасады имеют имена, заканчивающиеся на <classname>*Provider</classname>.</para>
    <para><link linkend="text_additionally_spring">Spring Framework</link> − основа среднего слоя. Используются следующие возможности <link linkend="text_additionally_spring">Spring</link> Framework: </para>
    <itemizedlist>
      <listitem>
        <para>Инверсия управления (IoC container)</para>
      </listitem>
      <listitem>
        <para>Аспектно-ориентированное программирование (AOP)</para>
      </listitem>
      <listitem>
        <para>Управление транзакциями</para>
      </listitem>
      <listitem>
        <para>Remoting − доступ к сервисам среднего слоя по протоколу HTTP</para>
      </listitem>
      <listitem>
        <para>Реализация веб-сервисов и <link linkend="rest_api_section">REST API</link></para>
      </listitem>
    </itemizedlist>
    <para><link linkend="text_additionally_JPA">OpenJPA Framework</link> − реализация <link linkend="text_additionally_ORM">ORM</link> по стандарту JPA. Позволяет работать с таблицами базы данных как с объектами Java и создавать запросы на языке <link linkend="middleware_section">JPQL</link>.</para>
    <section id="services_section">
      <title>Services</title>
      <para>Сервисы представляют собой слой  компонентов, формирующих границу приложения. Сервисы определяют множество операций, предоставляемых ими для интерфейсных клиентских слоев кода. Сервисы инкапсулируют бизнес-логику приложения, управляют транзакциями и координируют реакции на действия.</para>
      <para>Основные задачи сервисов:</para>
      <itemizedlist>
        <listitem>
          <para>Обеспечить выполнение каждого метода в отдельной <link linkend="transactions_section">транзакции</link>. </para>
        </listitem>
        <listitem>
          <para>Обеспечивать запись исключений в журнал.</para>
        </listitem>
        <listitem>
          <para>Обеспечивать отказоустойчивость (failover) в кластере для удаленных клиентов.</para>
        </listitem>
        <listitem>
          <para>В бизнес-методах сервисов могут проверяться права пользователя на доступ к данным</para>
        </listitem>
      </itemizedlist>
      <para>Диаграмма классов, входящих в состав сервиса:</para>
      <figure>
        <title>Диаграмма классов, входящих в состав сервиса</title>
        <mediaobject>
          <imageobject>
            <imagedata contentwidth="80%" align="center" fileref="img/MiddlewareServices.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Каждый вызов сервиса перехватывается с помощью <link linkend="text_additionally_spring">Spring AOP</link>  и обрамляется вызовом <classname>ServiceInterceptor.aroundInvoke()</classname>.</para>
    </section>
    <section id="managed_beans_section">
      <title>Managed Beans</title>
      <para><firstterm>Управляемые бины (Managed Beans)</firstterm> − это программные компоненты, реализующие бизнес-логику приложения и создаваемые в соответствии с принципами <link linkend="text_injection_IoC">Inversion of Control</link>. <glossterm linkend="container_glossentry">Контейнером</glossterm> для бинов служит Spring Framework.</para>
      <para>Managed Bean представляет собой <firstterm>singleton</firstterm>, то есть всегда используется один экземпляр данного класса. Соответственно, если создаваемый Вами бин содержит изменяемые данные в полях (имеет состояние), то необходимо синхронизировать обращение к таким данным.</para>
      <para>В простейшем случае Managed Bean может быть просто Java-классом, аннотированным как <literal>@ManagedBean</literal>.</para>
    </section>
    <section id="mbeans_section">
      <title>JMX Beans</title>
      <para><firstterm>МБин</firstterm> − программный компонент, реализующий бизнес-логику, и имеющий <glossterm linkend="jmx_glossentry">JMX</glossterm>-интерфейс. Как правило, имеет внутреннее состояние (например, кэш, конфигурационные данные или статистику), к которому нужно обеспечить доступ через JMX.</para>
      <para>МБин является расширенным вариантом <link linkend="managed_beans_section">управляемого бина</link>.</para>
      <figure>
        <title/>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/MBeans.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Как видно из диаграммы, МБин имеет два набора методов, разделенных по интерфейсам <interfacename>...MBean</interfacename> и <interfacename>...API</interfacename>. Первый из них служит для управления через JMX, а второй − для вызова из программного кода.</para>
      <para>Вызовы JMX-интерфейса МБина перехватываются специальным классом − <glossterm linkend="interceptor_glossentry">интерцептором</glossterm> <methodname>MBeanInterceptor.aroundInvoke()</methodname> (с помощью <link linkend="text_springAOP">Spring AOP</link>), который обеспечивает журналирование неперехваченных исключений и установку правильного контекстного <classname>ClassLoader</classname>.</para>
    </section>
    <section id="orm_section">
      <title>ORM</title>
      <para>ORM (англ. <firstterm>Object-relational mapping</firstterm>, рус. <firstterm>Объектно-реляционное отображение</firstterm>) − технология программирования, которая связывает базы данных с концепциями объектно-ориентированных языков программирования, создавая «виртуальную объектную базу данных» (<ulink url="http://ru.wikipedia.org/wiki/ORM">http://ru.wikipedia.org/wiki/ORM</ulink>). </para>
      <variablelist>
        <varlistentry>
          <term>Преимущества</term>
          <listitem>
            <itemizedlist>
              <listitem>
                <para>Позволяет работать с  данными реляционной СУБД, манипулируя простыми объектами Java (<glossterm linkend="pojo_glossentry">POJO</glossterm>)</para>
              </listitem>
              <listitem>
                <para>Упрощает программирование, избавляя от рутины написания тривиальных SQL-запросов</para>
              </listitem>
              <listitem>
                <para>Упрощает программирование, позволяя извлекать и сохранять целые графы объектов одной командой</para>
              </listitem>
              <listitem>
                <para>Обеспечивает легкое портирование приложения на различные СУБД</para>
              </listitem>
              <listitem>
                <para>Использует лаконичный язык запросов <glossterm linkend="jpql_glossentry">JPQL</glossterm></para>
              </listitem>
              <listitem>
                <para>Оптимизирует количество выполняемых SQL-запросов на команды insert и update</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Недостатки</term>
          <listitem>
            <itemizedlist>
              <listitem>
                <para>Требует понимания особенностей работы с ORM</para>
              </listitem>
              <listitem>
                <para>Не позволяет напрямую оптимизировать SQL или использовать особенности СУБД, что приводит к снижению производительности</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Реализация</term>
          <listitem>
            <itemizedlist>
              <listitem>
                <para>JPA – Java Persistence API</para>
              </listitem>
              <listitem>
                <para><link linkend="text_openJPA">OpenJPA</link> – фреймворк, реализующий JPA.  На данный момент в платформе используется версия 2.x.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <title>ORM – основные понятия</title>
        <varlistentry>
          <term>Entity</term>
          <listitem>
            <para>Аннотированный <glossterm linkend="pojo_glossentry">POJO</glossterm>. Обычно соответствует таблице СУБД.</para>
          </listitem>
        </varlistentry>
        <varlistentry id="text_entityManager">
          <term>EntityManager</term>
          <listitem>
            <para>Интерфейс для управления <glossterm linkend="entity_glossentry">сущностями</glossterm>.
Его можно получить с помощью   вызова метода  <classname>PersistenceProvider.getEntityManager()</classname>.
Экземпляр <classname>EntityManager</classname> всегда привязан к одной <link linkend="transactions_section">транзакции</link>. Более того, все вызовы <classname>PersistenceProvider.getEntityManager()</classname> в рамках одной транзакции возвращают один и тот же экземпляр <classname>EntityManager</classname>. После завершения транзакции обращения к данному экземпляру невозможны.
Экземпляр <classname>EntityManager</classname> содержит в себе &quot;персистентный контекст&quot; – набор экземпляров сущностей, загруженных из БД или только что созданных. Персистентный контекст является кэшем данных в рамках данной транзакции.
<classname>EntityManager</classname> автоматически сбрасывает в БД все изменения, сделанные в своем персистентном контексте, в момент коммита транзакции, либо явным вызовом метода  <classname>flush()</classname>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Enhancing</term>
          <listitem>
            <para>Модификация байт-кода классов сущностей для обеспечения возможности работы ORM.
Производится в момент сборки проекта.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <variablelist>
        <title>ORM – жизненный цикл сущности</title>
        <varlistentry>
          <term>New</term>
          <listitem>
            <para>Только что созданный экземпляр, например: <classname>Car car = new Car()</classname>;
может быть передан в <methodname>EntityManager.persist()</methodname> для сохранения в БД. При этом переходит в состояние <firstterm>Managed</firstterm></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Managed</term>
          <listitem>
            <para>Загруженный из БД или новый, переданный в <methodname>EntityManager.persist()</methodname>, экземпляр;
принадлежит некоторому экземпляру <classname>EntityManager</classname>, другими словами, находится в его персистентном контексте;
любые изменения  экземпляра в состоянии <firstterm>Managed</firstterm> будут сохранены в БД в случае коммита транзакции, к которой принадлежит данный <classname>EntityManager</classname></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Detached</term>
          <listitem>
            <para>Экземпляр, загруженный из БД и отсоединенный от своего персистентного контекста (вследствие закрытия транзакции или сериализации);
изменения, вносимые в <firstterm>Detached</firstterm> экземпляр, запоминаются в самом этом экземпляре (с помощью полей, добавленных с помощью Enhancing);
изменения в <firstterm>Detached</firstterm> экземпляре будут сохранены в БД, только если он будет снова переведен в состояние <firstterm>Managed</firstterm> путем передачи в метод <methodname>EntityManager.merge()</methodname>; <methodname>EntityManager.merge()</methodname> выполняет следующее – загружает из БД экземпляр с тем же идентификатором, переносит в него состояние переданного <firstterm>Detached</firstterm> экземпляра и возвращает загруженный <firstterm>Managed</firstterm> экземпляр. Далее надо работать именно с возвращенным <firstterm>Managed</firstterm> экземпляром!</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <itemizedlist>
        <title>ORM – загрузка по требованию</title>
        <listitem>
          <para>Позволяет загружать связанные сущности по требованию, т.е. только в момент первого обращения к их свойствам</para>
        </listitem>
        <listitem>
          <para>Работает только для экземпляра в состоянии <firstterm>Managed</firstterm>, то есть внутри транзакции, загрузившей данный экземпляр</para>
        </listitem>
        <listitem>
          <para>Загрузка по требованию (lazy loading)  в сумме порождает больше запросов к БД, чем <glossterm linkend="eager_fetching_glossentry">энергичная загрузка (Eager Fetching)</glossterm>, однако нагрузка при этом растянута во времени</para>
          <itemizedlist>
            <listitem>
              <para>Например, при извлечении списка N экземпляров сущности A, содержащих ссылку на экземпляр сущности B, в случае загрузки по требованию будет выполнено N+1 запросов к БД.</para>
            </listitem>
            <listitem>
              <para>Для минимизации времени отклика и снижения нагрузки необходимо стремиться к меньшему количеству обращений к БД. Для этого  в платформе  используется механизм <glossterm linkend="view_glossentry">представлений</glossterm>, с помощью которого в вышеописанном случае ORM сформирует один  запрос к БД с объединением таблиц.</para>
            </listitem>
            <listitem>
              <para>Если A содержит коллекцию B, в случае энергичной загрузки  ORM сформирует SQL запрос, возвращающий произведение строк A и B. </para>
            </listitem>
            <listitem>
              <para>Иногда загрузка по требованию с точки зрения производительности предпочтительнее, чем энергичная загрузка. Например, когда работает асинхронный процесс, выполняющий некоторую бизнес-логику, общее время выполнения некритично и желательно распределить во времени  нагрузку на БД.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <section>
        <title>Макросы в JPQL</title>
        <para>TODO</para>
      </section>
      <section>
        <title>Запросы с distinct</title>
        <para>TODO</para>
      </section>
    </section>
    <section id="transactions_section">
      <title>Управление транзакциями</title>
      <para>Транзакция Middleware напрямую отображается на транзакцию БД.</para>
      <para>Управление транзакциями производится только  на уровне сервисов или ниже.
</para>
      <para>Любой клиент, вызывая методы сервиса, должен понимать, что каждый метод будет выполняться в отдельной транзакции.
Используется только ручное (не декларативное) управление транзакциями.</para>
      <para>Управление транзакциями является частью бизнес-логики.
При использовании ORM изменения в БД производятся при коммите транзакции, который в случае декларативного управления происходит за рамками прикладного кода (в интерцепторах контейнера), что крайне неудобно при отладке приложения.</para>
      <para>При использовании ORM доменные объекты ведут себя принципиально по-разному внутри и вне транзакции</para>
    </section>
    <section id="dbms_types_section">
      <title>Поддерживаемые СУБД</title>
      <para>Тип используемой СУБД определяется <glossterm linkend="app_properties_glossentry">параметром</glossterm> среднего слоя <parameter>cuba.dbmsType</parameter> и настройкой источника данных в <application>Tomcat</application>.</para>
      <variablelist>
        <varlistentry>
          <term>PostgreSQL</term>
          <listitem>
            <para>Поддерживается всеми проектами платформы: CUBA, Workflow, FTS, Charts, CCPayments, RefApp.</para>
            <para><emphasis role="bold">Настройка</emphasis></para>
            <para>Параметр среднего слоя:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/cuba_dbmstype_postgres.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Источник данных в <link linkend="text_context_xml">context.xml</link>:</para>
            <programlisting language="xml"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/context_postgres.xml" encoding="UTF-8" parse="text"/></programlisting>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Microsoft SQL Server</term>
          <listitem>
            <para>Поддерживается проектами: CUBA, Workflow, FTS, RefApp.</para>
            <para><emphasis role="bold">Настройка</emphasis></para>
            <para>Параметр среднего слоя:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/cuba_dbmstype_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Источник данных в <link linkend="text_context_xml">context.xml</link>:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/context_mssql.xml" encoding="UTF-8" parse="text"/></programlisting>
            <para>В настройках MS SQL надо включить возможность логина для пользователя sa и задать для него пароль из context.xml. Это можно сделать из MS SQL Management Studio, в окне Object Explorer.

Instance − ваш SQL Server.</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/instance_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Включить сетевую аутентификацию:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/instance1_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Разрешить доступ по TCP/IP можно из Sql Server Configuration Manager</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/instance2_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>
  <section id="client_section">
    <title>Компоненты клиента</title>
    <figure>
      <title/>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/ClientStructure.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>TODO</para>
  </section>
  <section id="portal_section">
    <title>Компоненты портала</title>
    <para>TODO</para>
  </section>
  <section id="gui_framework_section">
    <title>Универсальный пользовательский интерфейс</title>
    <section>
      <title>Экраны</title>
      <section id="controller_section">
        <title>Контроллер экрана</title>
        <para><classname>Java</classname> или <classname>Groovy</classname> класс,  в котором можно реализовывать бизнес-логику и управлять поведением компонентов, описанных в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>, с помощью различных событий. Контроллер должен быть унаследован от одного из следующих базовых классов:</para>
        <itemizedlist>
          <listitem>
            <para><classname>AbstractFrame</classname> − реализует интерфейс <interfacename>IFrame</interfacename> и предназначен для реализации фреймов − многократно используемых компонентов экранов.</para>
          </listitem>
          <listitem>
            <para><classname>AbstractWindow</classname> − реализует интерфейc <interfacename>Window</interfacename> и предназначен для реализации любых экранов.</para>
          </listitem>
          <listitem>
            <para><classname>AbstractLookup</classname> − реализует интерфейс <interfacename>Lookup</interfacename> и предназначен для реализации <glossterm linkend="browser_glossentry">браузеров</glossterm> с возможностью выбора элемента списка для использования его в вызывающем экране.</para>
          </listitem>
          <listitem>
            <para><classname>AbstractEditor</classname> − реализует интерфейс <interfacename>Editor</interfacename> и предназначен для реализации экранов редактирования экземпляра сущности.</para>
          </listitem>
        </itemizedlist>
        <para>Основной метод контроллера − <methodname>init()</methodname>. Этот метод вызывается после создания класса окна и всего дерева компонентов, описанного XML-дескриптором. Контроллер может в этом методе произвести инициализацию экрана перед его открытием (например, создать обработчики нажатий на кнопки и пр.).</para>
        <para>В метод <methodname>init()</methodname> из вызывающего кода передается коллекция параметров, состоящая из пар «ключ − значение». Вызывающим кодом может быть как контроллер другого экрана, так и пункт главного меню, либо прямая ссылка на экран извне приложения. Каждый параметр передается в коллекции в двух экземплярах − с простым именем и с тем же именем с префиксом param$.</para>
        <para>Класс контроллера должен быть зарегистрирован в XML-дескрипторе экрана в атрибуте <parameter>class</parameter> корневого элемента.</para>
        <section id="AbstractEditor_section">
          <title>AbstractEditor</title>
          <para><classname>AbstractEditor</classname> − базовый класс контроллеров экранов редактирования экземпляра сущности.</para>
          <para>При создании конкретного класса контроллера рекомендуется параметризовать <classname>AbstractEditor</classname> типом редактируемой сущности. При этом методы <methodname>getItem</methodname> и <methodname>initItem</methodname> будут работать с конкретным типом сущности и прикладному коду не потребуется дополнительных приведений типов. Например:</para>
          <programlisting>public class UserEditor extends AbstractEditor&lt;User&gt; {
...
    @Override
    protected void initItem(User item) {
    ...</programlisting>
          <para>Помимо общего для всех <glossterm linkend="screen_controller_glossentry">контроллеров</glossterm> метода <methodname>init</methodname> в контроллере экрана редактирования можно переопределить следующие:</para>
          <itemizedlist>
            <listitem>
              <para>Методы инициализации:</para>
              <itemizedlist>
                <listitem>
                  <para><methodname>initItem</methodname></para>
                </listitem>
                <listitem>
                  <para><methodname>postInit</methodname></para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>Методы завершения:</para>
              <itemizedlist>
                <listitem>
                  <para><methodname>postValidate</methodname></para>
                </listitem>
                <listitem>
                  <para><methodname>preCommit</methodname></para>
                </listitem>
                <listitem>
                  <para><methodname>postCommit</methodname></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
          <para><emphasis role="bold">Диаграммы последовательностей</emphasis></para>
          <figure>
            <title>Инициализация экрана</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/EditorInit.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure>
            <title>Коммит и закрытие экрана с фреймом editWindowActions</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/EditorCommit.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure>
            <title>Коммит экрана с фреймом extendedEditWindowActions</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/ExtendedEditorCommit.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure>
            <title>Коммит и закрытие экрана с фреймом extendedEditWindowActions</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/ExtendedEditorCommitAndClose.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>
      <section>
        <title>XML-дескриптор</title>
        <para>Описывает <glossterm linkend="datasource_glossentry">источники данных</glossterm> и расположение визуальных компонентов экрана.</para>
        <para>XML-дескриптор содержит следующие элементы:</para>
        <itemizedlist>
          <listitem>
            <para><parameter>window</parameter> − корневой элемент. Атрибуты:</para>
            <orderedlist>
              <listitem>
                <para><property>xmlns</property>=&quot;http://www.haulmont.com/schema/cuba/gui/window.xsd&quot; − схема XML</para>
              </listitem>
              <listitem>
                <para><property>class</property> − имя класса <glossterm linkend="screen_controller_glossentry">контроллера</glossterm></para>
              </listitem>
              <listitem>
                <para><property>messagesPack</property> − имя <glossterm linkend="message_pack_glossentry">пакета сообщений</glossterm>. Фактически это имя Java-пакета, содержащего файл  <filename>messages.properties</filename></para>
              </listitem>
              <listitem>
                <para><property>caption</property> − заголовок экрана, должен содержать ссылку на сообщение из вышеуказанного пакета, например, <programlisting>caption=&quot;msg://caption&quot;</programlisting></para>
              </listitem>
              <listitem>
                <para><property>focusComponent</property> − идентификатор компонента, который получит фокус ввода при отображениее экрана (необязательно).</para>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <para><parameter>metadataContext</parameter> − опциональный элемент для инициализации <glossterm linkend="view_glossentry">представлений</glossterm> (views). Предпочтительным является определение всех представлений в одном общем файле <filename>ext-views.xml</filename>  модуля <structname>core</structname>. </para>
          </listitem>
          <listitem>
            <para><parameter>dsContext</parameter> − элемент, определяющий <glossterm linkend="datasource_glossentry">источники данных</glossterm> данного экрана. Источники данных предназначены для реализации связанных с данными  компонентов.</para>
          </listitem>
          <listitem>
            <para><parameter>layout</parameter> − элемент, определяющий компоновку экрана.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section id="screen_registration_section">
        <title>Регистрация экранов</title>
        <para>Все экраны, доступные в приложении, регистрируются в  файлах <filename>*-screens.xml</filename>.</para>
        <para>Набор файлов <filename>*-screens.xml</filename> конкретного проекта указывается в <glossterm linkend="app_properties_glossentry">свойстве приложения</glossterm> <parameter>cuba.windowConfig</parameter>.</para>
        <itemizedlist>
          <title>Элементы XML</title>
          <listitem>
            <para><emphasis role="bold">screen-config</emphasis> − корневой элемент</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">include</emphasis> − включение другого <filename>*-screens.xml</filename>. Вместо включения рекомендуется использовать комбинацию файлов в <glossterm linkend="app_properties_glossentry">свойстве приложения</glossterm> <parameter>cuba.windowConfig</parameter>. Атрибуты:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">file</emphasis> − путь к файлу, начиная от каталога конфигурации приложения <filename>WEB-INF/conf</filename></para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para><emphasis role="bold">screen</emphasis> − регистрация экрана. Атрибуты:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">id</emphasis> − идентификатор  экрана, по которому   производится обращение</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">template</emphasis> − путь к <glossterm linkend="screen_xml_descriptor_glossentry">дескриптору</glossterm> экрана. Сначала будет произведена попытка найти дескриптор в каталоге конфигурации приложения <filename>WEB-INF/conf</filename>. Если его там нет, то будет произведен поиск в <filename>classpath</filename>.</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">class</emphasis> − имя класса. Элемент может быть использован вместо <emphasis role="bold">template</emphasis>. Класс должен реализовывать либо интерфейс <interface>Callable</interface>, либо интерфейс <interface>Runnable</interface>. В случае реализации интерфейса <interface>Callable</interface> метод <methodname>call()</methodname> должен возвращать экземпляр созданного <classname>Window</classname>, который будет возвращен как результат вызова <methodname>WindowManager.openWindow()</methodname>. Класс может содержать конструктор с параметрами для передачи ему строковых значений, заданных атрибутом <emphasis role="bold">param</emphasis>.</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para><emphasis role="bold">params</emphasis> − задает параметры вызова экрана. Элемент используется внутри элемента <emphasis role="bold">screen</emphasis>. Параметры вызова позволяют задать несколько идентификаторов одному дескриптору экрана. Параметры будут переданы <glossterm linkend="screen_controller_glossentry">контроллеру</glossterm> экрана в мапе на входе <methodname>init()</methodname>, либо в конструктор класса, если задан <emphasis role="bold">class</emphasis>.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">param</emphasis> − задает параметр внутри элемента <emphasis role="bold">params</emphasis>. Атрибуты:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">name</emphasis> − имя параметра</para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">value</emphasis> − значение параметра. Если значение содержит строку &quot;true&quot; или &quot;false&quot;, в параметры экрана будет передано соответствующее значение типа <classname>Boolean</classname>.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Главное меню</title>
        <para>TODO</para>
      </section>
    </section>
    <section id="gui_vcl_section">
      <title>Библиотека визуальных компонентов</title>
      <para><link linkend="gui_components_section">Компоненты</link></para>
      <para><link linkend="gui_layouts_section">Контейнеры</link></para>
      <section id="gui_components_section">
        <title>Компоненты</title>
        <figure>
          <title>Диаграмма компонентов</title>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/Components_new.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para><classname>Component</classname> − предок всех визуальных компонентов. Он содержит базовые атрибуты, позволяющие идентифицировать компонент и располагать его на экране.</para>
        <informaltable frame="none" pgwide="0">
          <tgroup cols="2" colsep="1">
            <colspec colnum="1" colname="c0" colwidth="1*"/>
            <colspec colnum="2" colname="c1" colwidth="3*"/>
            <tbody valign="middle">
              <row>
                <entry>
                  <link linkend="Button_section">Button</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/Button.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row valign="middle">
                <entry align="justify">
                  <link linkend="PopupButton_section">PopupButton</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/PopupButton.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="LinkButton_section">LinkButton</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/LinkButton.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="Label_section">Label</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_label.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="TextField_section">TextField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_textField.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="TextArea_section">TextArea</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_textArea.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="DateField_section">DateField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_dateField.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="TimeField_section">TimeField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_timeField1.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="CheckBox_section">CheckBox</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/CheckBox.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="PickerField_section">PickerField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/PickerField.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="OptionsGroup_section">OptionsGroup</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_optionsGroup.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="LookupField_section">LookupField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/LookupField.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="LookupPickerField_section">LookupPickerField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/LookupPickerField.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="TwinColumn_section">TwinColumn</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/TwinColumn.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="FileUploadField_section">FileUploadField</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/Upload.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="Table_section">Table</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_table.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="TreeTable_section">TreeTable</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_treeTable.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="GroupTable_section">GroupTable</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/GroupTable.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="Tree_section">Tree</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/Tree.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="FieldGroup_section">FieldGroup</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_fieldGroup.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
              <row>
                <entry>
                  <link linkend="TokenList_section">TokenList</link>
                </entry>
                <entry>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="img/gui_tokenList.png"/>
                    </imageobject>
                  </mediaobject>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <section id="Label_section">
          <title>Label</title>
          <para>Надпись (<classname>Label</classname>) − текстовый компонент, отображающий  статический текст либо значение атрибута <glossterm linkend="entity_glossentry">сущности</glossterm>.</para>
          <para>XML-имя компонента: <classname>label</classname></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_label_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса компонента <classname>Label</classname>: для веб-приложений  и для десктоп-приложений. </para>
          <figure>
            <title>Типы надписей</title>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="40%" align="center" fileref="img/gui_labelTypes.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для того чтобы создать компонент надписи, создайте в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующий код:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/label/label.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <property id="attr_value">value</property> предназначен для отображения текста надписи. Обычно значение атрибута задается с помощью ключа <glossterm linkend="message_pack_glossentry">пакета сообщений</glossterm>.</para>
          <para>Текст, содержащийся в атрибуте <property>value</property>, будет перенесен на следующую строку, если по длине он превысит значение атрибута <link linkend="attr_width">width</link>. Поэтому если Вам нужно использовать многострочную надпись, укажите требуемое значение атрибута <link linkend="attr_width">width</link> (применимо только для веб-приложений). Если текст надписи слишком длинный, и значение атрибута <link linkend="attr_width">width</link> не определено, то текст будет урезан.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="30%" align="center" fileref="img/gui_label_truncated.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>В компоненте надписи есть возможность отображать значение атрибута сущности. Для этого используются атрибуты <link linkend="attr_datasource">datasource</link> и <link linkend="attr_property">property</link>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/label/labelWithDatasource.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибуты <classname>label</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row>
                  <entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_value">value</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>label</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_formatter">formatter</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="Button_section">
          <title>Button</title>
          <para>Кнопка (<classname>Button</classname>) −  компонент,  обеспечивающий  выполнение некоторых действий при нажатии на нее пользователем.</para>
          <para>XML-имя компонента: <classname>button</classname></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_Button_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Классы кнопок существуют как для веб-приложений, так и для десктоп-приложений.</para>
          <para>Кнопка может содержать  текст или пиктограмму (или и то и другое). На рисунке ниже отражены разные виды кнопок.</para>
          <figure>
            <title>Типы кнопок</title>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="50%" align="center" fileref="img/gui_buttonTypes.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для создания кнопки с текстом достаточно написать в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующий код: </para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/textButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Для создания кнопки с пиктограммой:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/iconButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <link linkend="attr_icon">icon</link> указывает на местоположение пиктограммы. Подробную информацию о том, где следует располагать файлы пиктограмм, Вы можете прочитать в <xref linkend="gui_themes_section"/></para>
          <para>Для создания кнопки с пользовательским стилем необходимо указать атрибут <property>stylename</property>, а также задать стиль компонента в файле CSS.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/userButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Определение стиля:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/cssButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Подробную информацию о том, как создавать пользовательский стиль, Вы можете прочитать в <xref linkend="gui_themes_section"/></para>
          <para>Основная функция кнопки −  выполнить некоторое действие при нажатии на нее. Определить метод <glossterm linkend="screen_controller_glossentry">контроллера</glossterm>, который будет вызываться при нажатии на кнопку, можно с помощью атрибута <property id="attr_invoke">invoke</property>. Значением атрибута должно быть    имя  метода контроллера, вызываемого в ответ на событие нажатия кнопки. Метод должен:</para>
          <itemizedlist>
            <listitem>
              <para>Быть <classname>public</classname></para>
            </listitem>
            <listitem>
              <para>Возвращать <classname>void</classname></para>
            </listitem>
            <listitem>
              <para>Не иметь аргументов или иметь один аргумент типа <classname>Component</classname>. Если метод имеет аргумент <classname>Component</classname>, то при вызове в него будет передан экземпляр вызвавшей кнопки.</para>
            </listitem>
          </itemizedlist>
          <para>В качестве примера показано описание кнопки, вызывающей метод <methodname>lockButton:</methodname></para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/invokeButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>В <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана необходимо определить метод <methodname>lockButton</methodname>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/methodButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <property>invoke</property> игнорируется, если для кнопки задан атрибут <property>action</property>. Атрибут <property id="attr_action">action</property> содержит имя <link linkend="Action_section">Action</link>, соответствующего данной кнопке.</para>
          <para>Пример кнопки с атрибутом <property>action</property>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/actionButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para><link linkend="Action_section">Action</link> для кнопки можно создавать программно, в <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана.</para>
          <para>В качестве примера создадим кнопку, имеющую в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> только атрибут <link linkend="attr_id">id</link>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/withoutActionButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>В контроллере  в методе <methodname>init()</methodname> экрана определим действие и название для кнопки.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/withoutActionButtonContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибуты <classname>button</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row>
                  <entry align="left">
                    <link linkend="attr_action">action</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_align">align</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_icon">icon</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_invoke">invoke</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="PopupButton_section">
          <title>PopupButton</title>
          <para>Кнопка с выпадающим списком действий.</para>
          <para>XML-имя компонента: <classname>popupButton</classname>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_popupButton_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса кнопок: для веб-приложений  и для десктоп-приложений.</para>
          <para>Кнопка с выпадающим списком действий может содержать  текст или пиктограмму (или и то и другое). На рисунке ниже отражены разные виды кнопок.</para>
          <figure>
            <title>Типы кнопок</title>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="50%" align="center" fileref="img/gui_popupButtonTypes.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для создания кнопки с текстом достаточно написать в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующий код: </para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/popupButton/textPopupButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Для создания кнопки с пиктограммой:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/popupButton/iconPopupButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Кнопка <classname>popupButton</classname> содержит выпадающий список действий,  которые задаются в элементе <link linkend="Action_section">actions</link>.</para>
          <figure>
            <title>Кнопка с выпадающим списком действий</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/PopupButton.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <classname>popupButton</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row>
                  <entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_icon">icon</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_caption">caption</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>popupButton</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="Action_section">actions</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="LinkButton_section">
          <title>LinkButton</title>
          <para>Кнопка-ссылка (<classname>LinkButton</classname>) − кнопка, выглядящая как гиперссылка.</para>
          <para>XML-имя компонента: <classname>linkButton</classname></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="70%" align="center" fileref="img/gui_linkButton_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса кнопок-ссылок: для веб-приложений  и для десктоп-приложений.</para>
          <para>Кнопка-ссылка  может содержать  текст или пиктограмму (или и то и другое). На рисунке ниже отражены разные виды кнопок.</para>
          <figure>
            <title>Типы кнопок-ссылок</title>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="40%" align="center" fileref="img/gui_linkButtonTypes.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для создания кнопки с текстом достаточно написать в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующий код: </para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/linkButton/textLinkButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Для создания кнопки с пиктограммой:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/linkButton/iconLinkButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Для кнопки-ссылки, также как и для обычной кнопки (<link linkend="Button_section">Button</link>), можно в атрибуте <link linkend="attr_invoke">invoke</link> задать метод <glossterm linkend="screen_controller_glossentry">контроллера</glossterm>, который будет вызываться при нажатии на нее.</para>
          <para>В качестве примера показано описание кнопки, вызывающей метод <methodname>saveActionTest:</methodname></para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/linkButton/invokeLinkButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>В <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана необходимо определить метод <methodname>saveActionTest</methodname>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/linkButton/methodLinkButton.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибуты <classname>linkButton</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row>
                  <entry align="left">
                    <link linkend="attr_action">action</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_align">align</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_icon">icon</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_invoke">invoke</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="TextField_section">
          <title>TextField</title>
          <para>Поле для редактирования текста.</para>
          <para>XML-имя компонента: <sgmltag>textField</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Классы текстовых полей существуют как для веб-приложений, так  и для десктоп-приложений.</para>
          <para>Текстовое поле служит для обеспечения возможности получить текстовую информацию от пользователя, а также для отображения атрибутов <glossterm linkend="entity_glossentry">сущности</glossterm>.</para>
          <para>Для создания простого текстового поля достаточно в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> написать следующий код:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textField.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>На рисунке ниже показан вид простого текстового поля.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textField.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для создания текстового поля, связанного с данными, необходимо использовать атрибуты <link linkend="attr_datasource">datasource</link> и <link linkend="attr_property">property</link>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldDatasource.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textField_data.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Если поле не связано с источником данных (то есть не указан источник данных и название атрибута), можно связать текстовое поле  с типом данных с помощью атрибута <property id="attr_datatype_1">datatype</property>. Атрибут используется  для форматирования значения поля. Значением атрибута <property>datatype</property> является имя типа данных из списка:</para>
          <itemizedlist>
            <listitem>
              <para><property>boolean</property></para>
            </listitem>
            <listitem>
              <para><property>byte array</property></para>
            </listitem>
            <listitem>
              <para><property>date</property></para>
            </listitem>
            <listitem>
              <para><property>decimal</property></para>
            </listitem>
            <listitem>
              <para><property>double</property></para>
            </listitem>
            <listitem>
              <para><property>int</property></para>
            </listitem>
            <listitem>
              <para><property>long</property></para>
            </listitem>
            <listitem>
              <para><property>string</property></para>
            </listitem>
            <listitem>
              <para><property>uuid</property></para>
            </listitem>
          </itemizedlist>
          <para>В качестве примера рассмотрим текстовое поле, связанное с типом данных <type>Integer</type>. </para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldInt.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>При переходе из  текстового поля, в котором введено  значение, не  являющееся типом данных <type>Integer</type>, приложение выдаст сообщение об ошибке и очистит текстовое поле.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textField_int.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Текстовому полю можно задавать количество строк и столбцов текста с помощью атрибутов <property id="attr_cols">cols</property> и <property id="attr_rows">rows</property>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldColsRows.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textFieldColsRows.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Вы можете связать текстовое поле с типом данных с помощью атрибута <property id="attr_datatype">datatype</property>. Атрибут используется  для форматирования значения поля в том случае, если поле не связано с данными (то есть не указан источник данных и название атрибута). Значением атрибута <property>datatype</property> является имя типа данных из списка:</para>
          <para>Для текстового компонента можно ограничить максимальную длину вводимого текста с помощью атрибута <property id="attr_maxLength">maxLength</property>. Значение атрибута устанавливается по умолчанию на основании длины строкового атрибута <glossterm linkend="entity_glossentry">сущности</glossterm>, если этот параметр указан в аннотации сущности. Значение &quot;-1&quot; означает отсутствие ограничения.</para>
          <para>Ниже показан пример, ограничивающий длину вводимого текста в 10 символов.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldMaxLength.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Для компонента <classname>TextField</classname> существует атрибут <property id="attr_resizable">resizable</property>. При задании атрибуту значения <property>true</property> и установке количества строк, больших одной, у пользователя появляется возможность  изменять размеры компонента.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldResizable.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textField_resizable.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для отсечения лишних пробелов в начале и конце значения используется атрибут <property id="attr_trim">trim</property>. По умолчанию значение атрибута равно <property>true</property>. Пробелы отсекаются в момент получения значения поля с помощью метода доступа.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldTrim.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>В <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана определяем метод, который будет вызываться при нажатии на <link linkend="Button_section">кнопку</link>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldTrimContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <property id="attr_secret">secret</property> позволяет преобразовать текстовое поле в  поле, которое не показывает символы, введенные пользователем. Вместо этого поле отображает эхо-символы, отличные от введенных. </para>
          <para>Текстовое поле с атрибутом <property>secret=&quot;true&quot;</property>  скрывает введенные данные только в визуальном представлении. При получении значения поля с помощью метода доступа это значение представляется в текстовой форме.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldSecret.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>В <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана определяем метод, который будет вызываться при нажатии на <link linkend="Button_section">кнопку</link>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/textField/textFieldSecretContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textField_secret.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <classname>textField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry><entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_secret">secret</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_cols">cols</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_resizable">resizable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry>
                    <link linkend="attr_trim">trim</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datatype">datatype</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry>
                    <link linkend="attr_maxLength">maxLength</link>
                  </entry>
                  <entry>
                    <link linkend="attr_rows">rows</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>textField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_formatter">formatter</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="TextArea_section">
          <title>TextArea</title>
          <para>Текстовая область (<classname>TextArea</classname>) − многострочное текстовое поле для редактирования текста. Содержит элементы управления для форматирования текста.</para>
          <para>XML-имя компонента: <sgmltag>textArea</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata contentwidth="60%" align="center" fileref="img/gui_textArea_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Класс текстовой области существует только для веб-приложений.</para>
          <para>К тексту, вводимому в компоненте <classname>TextArea</classname>, можно применять средства для форматирования: изменять начертание шрифта, его размер, гарнитуру − с помощью элементов управления, расположенных в верхней части компонента.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_textAreaInfo.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <classname>textArea</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry><entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_cols">cols</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_rows">rows</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>textArea</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_formatter">formatter</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="DateField_section">
          <title>DateField</title>
          <para>Поле для отображения или ввода даты и времени. В самом простом варианте представляет собой поле для отображения даты, справа от него находится кнопка с выпадающим календарем, правее находится поле для ввода времени.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_dateFieldSimple.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Дата и время по умолчанию отображаются в формате, соответствующем выбранной локали.</para>
          <para>XML-имя компонента: <sgmltag>dateField</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_dateField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса полей для ввода даты и времени: для веб-приложений  и для десктоп-приложений.</para>
          <para>Для создания  поля даты, связанного с <glossterm linkend="datasource_glossentry">источником данных</glossterm>, необходимо определить его описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующим образом:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/dateField/dateField.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Возможно изменить формат представления даты и времени с помощью атрибута  <property id="attr_dateFormat">dateFormat</property> по правилам  SimpleDateFormat (<ulink url="http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html">http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html</ulink>). Значением атрибута может быть либо строка формата, либо ключ в пакете сообщений (если строка начинается с msg://)</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/dateField/dateFieldFormat.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_dateField_format.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>В большинстве бизнес-приложений нет необходимости отображать милисекунды или даже время.  Точность представления даты или времени контролируется атрибутом <property id="attr_resolution">resolution</property>.  Значение атрибута должно соответствовать перечислению <classname>DateField.Resolution</classname> − <type>MSEC</type>, <type>SEC</type>, <type>MIN</type>, <type>HOUR</type>, <type>DAY</type>, <type>MONTH</type>, <type>YEAR</type>. По умолчанию точность определяется по аннотации <classname>javax.persistence.Temporal</classname> соответствующего атрибута <glossterm linkend="entity_glossentry">сущности</glossterm>.</para>
          <para>Если <property>resolution=&quot;DAY&quot;</property> и не указан атрибут <property>dateFormat</property>, то в качестве формата будет взят формат, указанный в <glossterm linkend="main_message_pack_glossentry">главном пакете сообщений</glossterm> с ключом <property>dateFormat</property>.</para>
          <para>Если <property>resolution=&quot;MIN&quot;</property> и не указан атрибут <property>dateFormat</property>, то в качестве формата будет взят формат, указанный в <glossterm linkend="main_message_pack_glossentry">главном пакете сообщений</glossterm> с ключом <property>dateTimeFormat</property>.</para>
          <para>Ниже показано определения поля для ввода даты с точностью до месяца.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/dateField/dateFieldResolution.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_dateField_resolution.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <classname>dateField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry><entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_dateFormat">dateFormat</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_resolution">resolution</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>dateField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry>
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="TimeField_section">
          <title>TimeField</title>
          <para>Поле для отображения или ввода времени. В самом простом варианте представляет собой поле для отображения или ввода времени в часах и минутах.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_timeField.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <classname>timeField</classname>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_timeField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса полей для ввода времени: для веб-приложений и для десктоп-приложений.</para>
          <para>Для создания поля времени, связанного с <glossterm linkend="datasource_glossentry">источником данных</glossterm>, необходимо указать атрибуты <link linkend="attr_datasource">datasource</link> и <link linkend="attr_property">property</link> в определении поля:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/timeField/timeFieldDs.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Для создания простого  поля для ввода времени необходимо определить его в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующим образом:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/timeField/timeField.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>С помощью установки атрибута <property id="attr_showSeconds">showSeconds</property> в значение <classname>true</classname> можно настроить отображение секунд.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/timeField/timeFieldSec.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_timeFieldSec.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <classname>timeField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry><entry align="left">
                    <link linkend="attr_required">required</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_showSeconds">showSeconds</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>timeField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry>
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="FieldGroup_section">
          <title>FieldGroup</title>
          <para>Группа полей (<classname>FieldGroup</classname>) генерализует представление атрибутов одного или более <glossterm linkend="datasource_glossentry">источника данных</glossterm>. Представление поля зависит от типа соответствующего атрибута. Для отображения <glossterm linkend="entity_glossentry">сущностей</glossterm> может использоваться как <link linkend="LookupField_section">LookupField</link>, так и <link linkend="PickerField_section">PickerField</link>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_fieldGroup.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <classname>fieldGroup</classname></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_FieldGroup_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса групп полей: для веб-приложений  и для десктоп-приложений.</para>
          <para>Ниже представлено описание группы полей в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> экрана:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/fieldGroup/fieldGroup.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para><glossterm linkend="datasource_glossentry">Источник данных</glossterm> (атрибут <link linkend="attr_datasource" id="attr_fG_datasource">datasource</link>) можно задать как для всего компонента целиком, так и для каждого поля в отдельности. Если для компонента <classname>fieldGroup</classname> атрибут не задан, то атрибут <property>datasource</property> должен быть задан для каждого <link linkend="attr_field">поля</link> в отдельности, либо представление полей должно задаваться разработчиком.</para>
          <para>При установке  атрибута <property id="attr_collapsable">collapsable</property>   в значение <classname>true</classname> компонент может сворачивать свое содержимое.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_fieldGroup_collapsable.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para id="attr_captionAlignment"><property>captionAlignment</property> − необязательный атрибут, задает позицию отображения заголовков полей. Может принимать два значения: <classname>LEFT</classname>, <classname>TOP</classname>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_FieldGroup_captionAlignment.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Компонент <classname>fieldGroup</classname> состоит из списков <link linkend="attr_field">полей</link>, сгруппированных в элементе <property id="attr_fG_column">column</property>. </para>
          <itemizedlist>
            <listitem>
              <para>С помощью атрибута <property id="attr_fG_width">width</property> задается ширину всех полей (без учета заголовка) в колонке. Это значение может быть перекрыто в каждом отдельном поле.</para>
            </listitem>
            <listitem>
              <para>Атрибут <property id="attr_fG_flex">flex</property> определяет  соотношение ширин колонок.</para>
            </listitem>
          </itemizedlist>
          <para>Элементами <link linkend="attr_fG_column">column</link> служат поля (<property>field</property>).</para>
          <para id="attr_field"><property>field</property> − элемент, содержащий описание выводимого поля. Может содержать описание формата выводимого значения (<link linkend="element_formatter">formatter</link>) и описание валидаторов, применяемых к соответствующему полю (<link linkend="element_validator">validator</link>). Рассмотрим более подробно некоторые атрибуты элемента <property>field</property>. </para>
          <itemizedlist>
            <listitem>
              <para><link linkend="attr_id" id="attr_field_id">id</link> − обязательный атрибут, идентификатор поля. Имеет физический смысл: в случае, если задан <glossterm linkend="datasource_glossentry">источник данных</glossterm>, то идентификатором поля должно быть имя атрибута, иначе − просто идентификатор поля.</para>
            </listitem>
            <listitem>
              <para><link linkend="attr_caption" id="attr_field_caption">caption</link> − необязательный атрибут, содержащий заголовок поля.</para>
            </listitem>
            <listitem>
              <para><link linkend="attr_visible" id="attr_field_visible">visible</link> − необязательный атрибут, отвечает за сокрытие поля.</para>
            </listitem>
            <listitem>
              <para><link linkend="attr_optionsDatasource" id="attr_field_optionsDatasource">optionsDatasource</link> − необязательный атрибут, определяющий список возможных значений поля.</para>
            </listitem>
            <listitem>
              <para><link linkend="attr_datasource" id="attr_field_datasource">datasource</link> − необязательный атрибут, содержит имя <glossterm linkend="datasource_glossentry">источника данных</glossterm> для конкретного поля.</para>
            </listitem>
            <listitem>
              <para>Есть возможность самостоятельно задать представление поля с помощью атрибута <property id="attr_custom">custom</property>. Значение атрибута в этом случае должно быть равно  <classname>true</classname>. Представление пользовательского поля необходимо определить в контроллере экрана. Компонент представления должен реализовывать интерфейс <interfacename>Field</interfacename>. Ниже представлен пример представления пользовательского поля:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/fieldGroup/fieldGroupCustom.txt" encoding="UTF-8" parse="text"/></programlisting>
            </listitem>
            <listitem>
              <para><link linkend="attr_width" id="attr_field_width">width</link> − необязательный атрибут, содержит ширину поля (без учета заголовка)</para>
            </listitem>
            <listitem>
              <para>Если значение атрибута <property id="attr_field_rows">rows</property> больше 1, то в ячейке будет компонент <link linkend="TextArea_section">TextArea</link>.</para>
            </listitem>
          </itemizedlist>
          <para>Атрибуты <classname>fieldGroup</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">border</entry>editable<entry align="left">
                    <link linkend="attr_fG_datasource">datasource</link>
                  </entry><entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry><entry/></row>
                <row>
                  <entry>
                    <link linkend="attr_caption">caption</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_captionAlignment">captionAlignment</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_collapsable">collapsable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>fieldGroup</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry>
                    <link linkend="element_fG_field">field</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="element_fG_column">column</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <para>Атрибуты <link linkend="attr_field" id="element_fG_field">field</link>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_field_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_dateFormat">dateFormat</link>
                  </entry><entry align="left">
                    <link linkend="attr_field_id">id</link>
                  </entry><entry>
                    <link linkend="attr_field_rows">rows</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry>
                    <link linkend="attr_maxLength">maxLength</link>
                  </entry>
                  <entry>
                    <link linkend="attr_showSeconds">showSeconds</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_clickAction">clickAction</link>
                  </entry>
                  <entry align="left">descriptionProperty</entry>
                  <entry>
                    <link linkend="attr_field_optionsDatasource">optionsDatasource</link>
                  </entry>
                  <entry>
                    <link linkend="attr_field_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_cols">cols</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry>
                    <link linkend="attr_field_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_custom">custom</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_field_datasource">datasource</link>
                  </entry>
                  <entry align="left">field</entry>
                  <entry>
                    <link linkend="attr_resolution">resolution</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты <link linkend="attr_fG_column" id="element_fG_column">column</link>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_fG_flex">flex</link>
                  </entry>editable</row>
                <row>
                  <entry>
                    <link linkend="attr_fG_width">width</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="CheckBox_section">
          <title>CheckBox</title>
          <para>Флажок (<classname>CheckBox</classname>) − компонент, имеющий два состояния: выбран, не выбран. Флажки используются
там, где нужно предоставить пользователю возможность что-то включить или
выключить.</para>
          <para>XML-имя компонента: <classname>checkBox</classname>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_checkBox_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Классы флажков существуют как для веб-приложений, так  и для десктоп-приложений.</para>
          <para>Для создания флажка достаточно в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> написать следующий код:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/checkBox/checkBox.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Сброс или установка флажка изменяет его состояние. Состояние − это свойство типа <type>Boolean</type>, может быть получено с помощью метода  <methodname>getValue()</methodname> и установлено с помощью метода <methodname>setValue()</methodname>. </para>
          <para>При каждом изменении состояния флажка генерируется событие элемента, которое может быть обработано с помощью <classname>ValueListener</classname>.</para>
          <para>Ниже приведен код <glossterm linkend="screen_controller_glossentry">контроллера</glossterm>, демонстрирующий работу с флажком. При установке флажка на экране возникает сообщение <quote>Разрешить создание нового документа</quote>, при сбросе флажка − <quote>Не разрешать создание нового документа</quote>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/checkBox/checkBoxContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибуты <classname>checkBox</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry><entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry><entry/></row>
                <row>
                  <entry>
                    <link linkend="attr_caption">caption</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>checkBox</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry>
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="PickerField_section">
          <title>PickerField</title>
          <para>Поле ввода с дополнительными кнопками действий (<classname>PickerField</classname>) позволяет отображать экземпляр <glossterm linkend="entity_glossentry">сущности</glossterm> в текстовом поле и выполнять действия нажатием на кнопки справа.</para>
          <para>XML-имя компонента: <sgmltag>pickerField</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_pickerField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса полей ввода с дополнительными кнопками действий: для веб-приложений  и для десктоп-приложений.</para>
          <para>Для того чтобы создать компонент <classname>PickerField</classname>, создайте в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующий код:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/pickerField/pickerFieldMetaClass.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <sgmltag id="attr_metaclass">metaClass</sgmltag> задает тип <glossterm linkend="entity_glossentry">сущности</glossterm>, экземпляр которой будет выбираться с помощью действия поиска (<literal>lookup</literal>). Для заданной сущности должен быть определен экран <literal>Название_сущности.lookup</literal> либо в атрибуте <sgmltag id="attr_lookupScreen">lookupScreen</sgmltag> указан идентификатор экрана, который нужно открыть для выбора экземпляра сущности.</para>
          <para>Определить компонент можно также следующим образом:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/pickerField/pickerFieldProperty.txt" encoding="UTF-8" parse="text"/></programlisting>
          <warning>
            <para>Для правильной работы компонента <classname>PickerField</classname> необходима установка атрибута <link linkend="attr_metaclass">metaClass</link> либо одновременная установка атрибутов <link linkend="attr_datasource">datasource</link> и <link linkend="attr_property">property</link>.</para>
          </warning>
          <caution>
            <title>Подсказка</title>
            <para>Если при объявлении компонента никаких <link linkend="Action_section">действий</link> не задано, загрузчик XML определит для него действия <literal>lookup</literal> и <literal>clear</literal>. </para>
          </caution>
          <para>Поэтому если требуются все стандартные действия, их нужно определить с помощью элемента <sgmltag id="attr_actions_picker">actions</sgmltag>. <sgmltag>actions</sgmltag> − необязательный элемент, определяющий набор действий (<link linkend="Action_section">action</link>) (кнопок справа). В элементе <link linkend="Action_section">action</link> можно описывать как стандартные действия, так и произвольные.</para>
          <para>Стандартные действия определяются перечислением <code>PickerField.ActionType</code>: <code>lookup</code>, <code>clear</code>, <code>open</code>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/pickerField/pickerFieldStandartActions.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_pickerFieldActionsSt.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Ниже показано описание <classname>PickerField</classname>, имеющего произвольные действия.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/pickerField/pickerFieldUserActions.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Действия необходимо определить в <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/pickerField/pickerFieldUserActionsContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_pickerField_custom.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Для компонента определены горячие клавиши. Для стандартных действий:</para>
          <itemizedlist>
            <listitem>
              <para><code>Lookup</code> − <keycombo>
                  <keycap>CTRL</keycap>
                  <keycap>ALT</keycap>
                  <keycap>L</keycap>
                </keycombo></para>
            </listitem>
            <listitem>
              <para><code>Open</code> − <keycombo>
                  <keycap>CTRL</keycap>
                  <keycap>ALT</keycap>
                  <keycap>O</keycap>
                </keycombo></para>
            </listitem>
            <listitem>
              <para><code>Clear</code> − <keycombo>
                  <keycap>CTRL</keycap>
                  <keycap>ALT</keycap>
                  <keycap>C</keycap>
                </keycombo></para>
            </listitem>
          </itemizedlist>
          <para>Чтобы добавить пользовательскую горячую клавишу, необходимо чтобы класс <link linkend="Action_section">действия</link> реализовывал интерфейс <interfacename>com.haulmont.cuba.gui.components.ShortcutAction</interfacename></para>
          <para>Также поддерживается вызов действий сочетанием <keycombo>
              <keycap>CTRL</keycap>
              <keycap>ALT</keycap>
              <keycap>1</keycap>
            </keycombo>, <keycombo>
              <keycap>CTRL</keycap>
              <keycap>ALT</keycap>
              <keycap>2</keycap>
            </keycombo> и так далее.</para>
          <para>Сочетания клавиш можно переназначить в ClientConfig</para>
          <itemizedlist>
            <listitem>
              <para><property>cuba.gui.pickerShortcut.modifiers</property> − модификаторы для вызова <link linkend="Action_section">действий</link> по порядковому номеру</para>
            </listitem>
            <listitem>
              <para><property>cuba.gui.pickerShortcut.lookup</property> − Lookup Action</para>
            </listitem>
            <listitem>
              <para><property>cuba.gui.pickerShortcut.open</property> − Open Action</para>
            </listitem>
            <listitem>
              <para><property>cuba.gui.pickerShortcut.clear</property> − Clear Action</para>
            </listitem>
          </itemizedlist>
          <para>Атрибуты <classname>PickerField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry><entry align="left">
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_width">width</link>
                  </entry></row>
                <row><entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry><entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>required<entry>
                    <link linkend="attr_required">required</link>
                  </entry><entry/></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_lookupScreen">lookupScreen</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_metaclass">metaClass</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="OptionsGroup_section">
          <title>OptionsGroup</title>
          <para>Компонент, который обеспечивает выбор из альтернатив, используя группу переключателей для выбора единственного значения из списка или используя группу флажков для выбора нескольких значений из списка.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_optionsGroup.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>optionsGroup</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_OptionsGroup_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса групп опций: для веб-приложений  и для десктоп-приложений.</para>
          <para>Если в качестве значений списка используются экземпляры <glossterm linkend="entity_glossentry">сущностей</glossterm>, нужно использовать атрибут <link linkend="attr_optionsDatasource">optionsDatasource</link> при описании компонента.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/optionsGroup/optionsGroupOptDs.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Если в качестве значений списка используются, например, значения перечисления (enum), то следует использовать атрибуты <link linkend="attr_datasource">datasource</link> и <link linkend="attr_property">property</link>. </para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/optionsGroup/optionsGroupDatasource.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Значения списка можно создать программно, в <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/optionsGroup/optionsGroup.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <sgmltag id="attr_orientation">orientation</sgmltag> задает расположение элементов группы. По умолчанию элементы располагаются по вертикали. Значение <literal>&quot;horizontal&quot;</literal> служит для горизонтального расположения.</para>
          <para>Для задания режима выбора значений служит атрибут <sgmltag id="attr_multiselect">multiselect</sgmltag>. Если <literal>&quot;multiselect=false&quot;</literal>, то компонент будет представлен как группа переключателей, иначе − как группа флажков. По умолчанию значение атрибута равно <literal>false</literal>.</para>
          <para>Атрибуты <classname>optionsGroup</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry><entry align="left">
                    <link linkend="attr_orientation">orientation</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row><entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry><entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>required<entry>
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_width">width</link>
                  </entry></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_multiselect">multiselect</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_optionsDatasource">optionsDatasource</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>optionsGroup</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="LookupField_section">
          <title>LookupField</title>
          <para>Компонент, реализующий раскрывающийся список. Раскрывающийся список  служит для выбора одного из множества
доступных вариантов. В составе такого списка присутствует активизирующая его кнопка и поле редактирования. Раскрывающийся список реализует фильтрацию значений в реальном времени (по мере ввода значения пользователем) и постраничный вывод доступных значений.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_lookupField.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>lookupField</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_LookupField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса раскрывающегося списка: для веб-приложений и для десктоп-приложений.</para>
          <para>Если в качестве значений списка используются экземпляры <glossterm linkend="entity_glossentry">сущностей</glossterm>, нужно использовать атрибут <link linkend="attr_optionsDatasource">optionsDatasource</link> при описании компонента.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/lookupField/lookupFieldOptDs.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Ниже представлено описание раскрывающегося списка, значения которого заданы с помощью установки <glossterm linkend="datasource_glossentry">источника данных</glossterm> и имени атрибута <glossterm linkend="entity_glossentry">сущности</glossterm>. Атрибут сущности является перечислением (enum).</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/lookupField/lookupField.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>С помощью атрибута <sgmltag id="attr_filterMode">filterMode</sgmltag> можно задать тип фильтрации значений:</para>
          <itemizedlist>
            <listitem>
              <para><literal>NO</literal> − нет фильтрации</para>
            </listitem>
            <listitem>
              <para><literal>STARTS_WITH</literal> − по началу фразы</para>
            </listitem>
            <listitem>
              <para><literal>CONTAINS</literal> − по любому вхождению</para>
            </listitem>
          </itemizedlist>
          <para>Атрибуты <sgmltag>lookupField</sgmltag>: </para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry><entry align="left">
                    <link linkend="attr_optionsDatasource">optionsDatasource</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row><entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry><entry align="left">
                    <link linkend="attr_filterMode">filterMode</link>
                  </entry>required<entry>
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_width">width</link>
                  </entry></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry>nullName</entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>lookupField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="LookupPickerField_section">
          <title>LookupPickerField</title>
          <para>Раскрывающийся список с расширенной функциональностью (<classname>LookupPickerField</classname>) позволяет отображать экземпляр сущности в текстовом поле, выбирать экземпляр в раскрывающемся списке и выполнять действия нажатием на кнопки справа.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_lookupPickerField.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>lookupPickerField</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_LookupPickerField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса раскрывающегося списка c расширенной  функциональностью: для веб-приложений  и для десктоп-приложений. </para>
          <para>Ниже представлено описание раскрывающегося списка с расширенной функциональностью.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/lookupPickerField/lookupPickerField.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибуты <sgmltag>lookupPickerField</sgmltag>: </para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry><entry align="left">nullName</entry><entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry></row>
                <row><entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry><entry align="left">
                    <link linkend="attr_filterMode">filterMode</link>
                  </entry>required<entry>
                    <link linkend="attr_optionsDatasource">optionsDatasource</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_property">property</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_metaclass">metaClass</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>lookupField</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_action">actions</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
        <section id="TwinColumn_section">
          <title>TwinColumn</title>
          <para>Сдвоенный список (<classname>TwinColumn</classname>)  представляет собой компонент множественного выбора, имеющий  два находящихся рядом списка: доступных и выбранных опций. В левом списке содержатся доступные невыбранные значения, в правом списке содержатся выбранные значения. Пользователь может выбрать значения из левого списка и нажать на кнопку <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_teinColumnRight.png"/>
              </imageobject>
            </inlinemediaobject>, переместив их таким образом в правый список. Значения могут быть отменены для выбора путем выделения их в правом списке и нажатия на кнопку <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_teinColumnLeft.png"/>
              </imageobject>
            </inlinemediaobject>. Для каждого значения можно задать уникальный стиль отображения и пиктограмму.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/TwinColumn.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>twinColumn</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_TwinColumn_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Класс сдвоенного списка существует только для веб-приложений.</para>
          <para>Ниже представлено описание сдвоенного списка в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/twinColumn/twinColumnOptDs.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>В данном примере используется атрибут <sgmltag id="attr_columns_twin">columns</sgmltag> для задания количества колонок текста в списке и атрибут <sgmltag id="attr_rows_twin">rows</sgmltag> для задания количества строк текста в списке.</para>
          <para>Атрибуты <sgmltag>twinColumn</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry><entry align="left">
                    <link linkend="attr_optionsDatasource">optionsDatasource</link>
                  </entry><entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry></row>
                <row><entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry><entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>required<entry>
                    <link linkend="attr_property">property</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_columns_twin">columns</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry>nullName</entry>
                  <entry>
                    <link linkend="attr_rows">rows</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>twinColumn</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_validator">validator</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <para>Для задания внешнего вида опций нужно реализовать интерфейс <interfacename>com.haulmont.cuba.gui.components.StyleProvider</interfacename> как показано в следующем примере:</para>
          <programlisting>TwinColumn twinColumn = getComponent(&quot;groups&quot;);
        twinColumn.setStyleProvider(new TwinColumn.StyleProvider() {
            public String getStyleName(Entity item, Object property, boolean selected) {
                if (((Group) item).getName().equals(&quot;Company&quot;)) {
                    return &quot;companyStyle&quot;;
                } else {
                    return null;
                }
            }

            public String getItemIcon(Entity item, boolean selected) {
                if (((Group) item).getName().equals(&quot;Company&quot;)) {
                    return &quot;theme:icons/company.png&quot;;
                } else {
                    return null;
                }
            }
        });</programlisting>
        </section>
        <section id="TokenList_section">
          <title>TokenList</title>
          <para>Список маркеров (<classname>TokenList</classname>) представляет собой компонент, имеющий упрощенный вариант отображения и формирования списка <glossterm linkend="entity_glossentry">сущностей</glossterm>.</para>
          <para>Для выбора значений используется компонент, подобный <link linkend="LookupPickerField_section">LookupPickerField</link> </para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tokenList.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>tokenList</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_TokenList_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса списка маркеров: для веб-приложений  и для десктоп-приложений. </para>
          <para>Для создания списка маркеров необходимо задать описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/tokenList/tokenList.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>С помощью атрибута <property id="attr_position">position</property> можно задавать позиционирование раскрывающегося списка. Атрибут может принимать два  значения:</para>
          <itemizedlist>
            <listitem>
              <para><classname>TOP</classname></para>
            </listitem>
            <listitem>
              <para><classname>BOTTOM</classname></para>
            </listitem>
          </itemizedlist>
          <figure>
            <title>Список маркеров со значением атрибута position=&quot;BOTTOM&quot;</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tokenListBottom.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибут <property id="attr_inline">inline</property> задает отображение списка выбранных значений: вертикально или горизонтально. Значение <classname>true</classname> соответствует горизонтальному расположению, значение <classname>false</classname> − вертикальному.</para>
          <figure>
            <title>Список маркеров с горизонтальным расположением выбранных значений</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tokenListInline.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Установка атрибута <property id="attr_simple">simple</property> в значение <classname>true</classname> позволяет сворачивать компонент, оставляя только кнопку добавления. При нажатии на кнопку добавления сразу показывается экран списка экземпляров <glossterm linkend="entity_glossentry">сущности</glossterm>, для которой задан <glossterm linkend="datasource_glossentry">источник данных</glossterm>.</para>
          <figure>
            <title>Список маркеров со значением атрибута simple=&quot;true&quot;</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tokenListSimple.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Элемент <classname>tokenList</classname> должен содержать следующие элементы:</para>
          <itemizedlist>
            <listitem>
              <para id="element_lookup"><property>lookup</property> − описатель компонента выбора значений.</para>
              <para>Атрибут <property id="attr_lookup">lookup</property> задает вид списка.</para>
              <figure>
                <title/>
                <mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_tokenListLookup.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <para>Атрибут <property id="attr_lookupScreen">lookupScreen</property>  задает идентификатор экрана для выбора значений в режиме <link linkend="attr_lookup">lookup</link>.</para>
              <para>С помощью атрибута <property id="attr_openType">openType</property> можно задать способ открытия окна списка экземпляров сущности:</para>
              <itemizedlist>
                <listitem>
                  <para><classname>NEW_TAB</classname> − открытие экрана в новой вкладке</para>
                </listitem>
                <listitem>
                  <para><classname>DIALOG</classname> − открытие экрана в диалоговом окне</para>
                </listitem>
                <listitem>
                  <para><classname>NEW_WINDOW</classname> − открытие экрана в новом окне</para>
                </listitem>
                <listitem>
                  <para><classname>THIS_TAB</classname> − открытие экрана в текущей вкладке</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para id="element_button"><property>button</property> − описатель кнопки добавления значений</para>
            </listitem>
          </itemizedlist>
          <para>Ниже расположен пример <glossterm linkend="screen_controller_glossentry">контроллера</glossterm>, в котором задаются обработчики добавления нового значения и удаления значения:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/tokenList/tokenListContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибуты <classname>tokenList</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_editable">editable</link>
                  </entry><entry align="left">
                    <link linkend="attr_inline">inline</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row><entry>
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry><entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>required<entry>
                    <link linkend="attr_position">position</link>
                  </entry><entry>
                    <link linkend="attr_width">width</link>
                  </entry></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_simple">simple</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>tokenList</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry align="left">
                    <link linkend="element_tL_lookup">lookup</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="element_tL_button">button</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <para>Атрибуты <link linkend="element_lookup" id="element_tL_lookup">lookup</link>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_lookupScreen">lookupScreen</link>
                  </entry><entry align="left">
                    <link linkend="attr_optionsDatasource">optionsDatasource</link>
                  </entry><entry/></row>
                <row><entry>
                    <link linkend="attr_filterMode">filterMode</link>
                  </entry><entry align="left">multiselect</entry>required<entry/><entry/></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_lookup">lookup</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_openType">openType</link>
                  </entry>
                  <entry/>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты <link linkend="element_button" id="element_tL_button">button</link>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable</row>
                <row><entry>
                    <link linkend="attr_icon">icon</link>
                  </entry>required</row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="Table_section">
          <title>Table</title>
          <para>Таблица (<classname>Table</classname>)  дает возможность выводить двухмерную информацию, расположенную в виде строк и столбцов, настраивать и сортировать данные, управлять заголовками таблицы и ее выделенными элементами.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_table.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>table</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_Table_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Классы простых таблиц существуют как для веб-приложений, так  и для десктоп-приложений.  Интерфейс <interfacename>Table</interfacename>,  наследуется от интерфейса  <interfacename>ListComponent</interfacename> − базового интерфейса компонентов, предназначенных для работы с коллекциями <glossterm linkend="entity_glossentry">сущностей</glossterm>.</para>
          <para>Для того чтобы создать простую таблицу, необходимо в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> задать <glossterm linkend="datasource_glossentry">источник данных</glossterm> и определить описание таблицы:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/table/table.txt" encoding="UTF-8" parse="text"/></programlisting>
          <warning>
            <para>Обязательными для таблицы являются элементы <link linkend="element_table_columns">columns</link> и  <link linkend="element_table_rows">rows</link>.</para>
          </warning>
          <para>Атрибут <sgmltag id="attr_presentations">presentations</sgmltag> управляет механизмом <link linkend="table_presentations_section">представлений</link>. Значение по умолчанию равно <literal>false</literal>. Когда значение атрибута равно <literal>true</literal>, то в верхнем правом углу таблицы появляется значок <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_presentation.png"/>
              </imageobject>
            </inlinemediaobject>.</para>
          <para>Атрибут <sgmltag id="attr_sortable">sortable</sgmltag> разрешает или запрещает сортировку в таблице. По умолчанию имеет значение <literal>true</literal>. Если сортировка разрешена, то при нажатии на название колонки справа от названия появляется значок <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_sortable_down.png"/>
              </imageobject>
            </inlinemediaobject>/<inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_sortable_up.png"/>
              </imageobject>
            </inlinemediaobject>.</para>
          <para>Существует возможность использования для колонок функций <link linkend="table_aggregation_section">агрегирования</link> без модификации <glossterm linkend="datasource_glossentry">источника данных</glossterm> с помощью атрибута <sgmltag id="attr_aggregatable">aggregatable</sgmltag>. По умолчанию атрибут  имеет значение <literal>false</literal>.</para>
          <para>Атрибут <sgmltag id="attr_showTotalAggregation">showTotalAggregation</sgmltag> разрешает или запрещает отображение строки итоговой агрегации в таблице. По умолчанию имеет значение <literal>true</literal>.</para>
          <para>Можно задать множественное выделение строк в таблице с помощью присваивания атрибуту <sgmltag id="attr_table_multiselect">multiselect</sgmltag>  значения <literal>true</literal>. По умолчанию значение атрибута равно <literal>false</literal>.</para>
          <para>С помощью элемента <sgmltag id="element_table_actions">actions</sgmltag> возможно определять набор действий (<link linkend="Action_section">action</link>). Кроме описания произвольного действия возможно использование стандартных действий, определяемых перечислением <code>ListActionType</code>: <code>create</code>, <code>edit</code>, <code>remove</code>, <code>refresh</code>, <code>add</code>, <code>exclude</code>, <code>excel</code>.</para>
          <para><sgmltag id="attr_rowsCount">rowsCount</sgmltag> − необязательный элемент, создающий для таблицы компонент <classname>RowsCount</classname>, который позволяет загружать в таблицу данные постранично.</para>
          <para>Элемент <sgmltag id="element_table_rows">rows</sgmltag> является обязательным. В этом элементе необходимо объявить используемый <glossterm linkend="datasource_glossentry">источник данных</glossterm>.</para>
          <para>Атрибут <sgmltag id="attr_headerMode">headerMode</sgmltag> элемента <sgmltag>rows</sgmltag> задает вариант отображения заголовков рядов:</para>
          <itemizedlist>
            <listitem>
              <para><literal>NONE</literal> − нет заголовков</para>
            </listitem>
            <listitem>
              <para><literal>ICON</literal> − пиктограмма</para>
            </listitem>
          </itemizedlist>
          <para>Следующим обязательным элементом для таблицы является элемент <sgmltag id="element_table_columns">columns</sgmltag>. Он определяет набор колонок (<sgmltag>column</sgmltag>) таблицы.</para>
          <para><sgmltag id="element_table_columns_column_1">column</sgmltag>  − элемент, задающий опции для колонки таблицы. Может содержать следующие атрибуты:</para>
          <itemizedlist>
            <listitem>
              <para><sgmltag id="attr_table_column_id">id</sgmltag> − обязательный атрибут, содержит название атрибута <glossterm linkend="entity_glossentry">сущности</glossterm>, выводимого в колонке.</para>
            </listitem>
            <listitem>
              <para><sgmltag id="attr_table_column_collapsed">collapsed</sgmltag> − необязательный атрибут, скрывает/показывает колонку. По умолчанию имеет значение <literal>false</literal>.</para>
            </listitem>
            <listitem>
              <para><sgmltag id="attr_table_column_caption">caption</sgmltag> − необязательный атрибут, содержит заголовок колонки.</para>
            </listitem>
            <listitem>
              <para><sgmltag id="attr_table_column_width">width</sgmltag> − необязательный атрибут, отвечает за изначальную ширину колонки.</para>
            </listitem>
            <listitem>
              <para><sgmltag id="attr_table_column_calculatable">calculatable</sgmltag> − необязательный атрибут, используется только в редактируемой таблице. Буквально означает, что значения в данной колонке являются вычислимыми и зависят от значений других колонок.</para>
            </listitem>
            <listitem>
              <para><link linkend="attr_editable" id="attr_table_column_editable">editable</link> − необязательный атрибут, разрешает/запрещает редактирование данного атрибута в редактируемой таблице.</para>
            </listitem>
          </itemizedlist>
          <para>Для таблицы можно задать стиль отображения ячеек таблицы. Для этого в <glossterm linkend="screen_controller_glossentry">контроллере</glossterm> экрана нужно задать для таблицы <classname>StyleProvider</classname> реализовав интерфейс <interfacename>com.haulmont.cuba.gui.components.StyleProvider.</interfacename></para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/table/tableStyle.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Далее нужно определить в теме приложения стили для строк и столбцов (подробную информацию о том, как создать тему приложения, смотрите <xref linkend="gui_themes_section"/>):</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/table/tableStylecss.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_table_Style.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>В таблице существует возможность задавать собственное представление данных в колонке. Для этого необходимо использовать метод <code>Table.addGeneratedColumn</code>. В методе нужно создать CUBA-компонент с использованием класса <classname>ComponentsFactory</classname>. Пример:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/table/tableGeneratedColumn.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tableGenerated.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <sgmltag>table</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_aggregatable">aggregatable</link>
                  </entry>editable<entry align="left">margin</entry><entry align="left">
                    <link linkend="attr_sortable">sortable</link>
                  </entry><entry/></row>
                <row>
                  <entry>
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_table_multiselect">multiselect</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">styleName</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_presentations">presentations</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_showTotalAggregation">showTotalAggregation</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>table</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left">
              <colspec colname="c1"/>
              <tbody>
                <row>
                  <entry>
                    <link linkend="element_table_actions">actions</link>
                  </entry>
                </row>
                <row>buttonsPanel<entry>
                    <link linkend="ButtonsPanel_section">buttonsPanel</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_rowsCount">rowsCount</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="element_t_columns">columns</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="element_t_rows">rows</link>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <para>Атрибуты элемента <link linkend="element_table_columns" id="element_t_columns">columns</link> <link linkend="element_table_columns_column_1">column</link>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="table_aggregation_section">aggregation</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_clickAction">clickAction</link>
                  </entry><entry align="left">
                    <link linkend="attr_table_column_id">id</link>
                  </entry><entry>
                    <link linkend="attr_resolution">resolution</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_table_column_calculatable">calculatable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_table_column_collapsed">collapsed</link>
                  </entry>
                  <entry>
                    <link linkend="attr_optionsDatasource">optionsDatasource</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_table_column_caption">caption</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_dateFormat">dateFormat</link>
                  </entry>
                  <entry>
                    <link linkend="attr_required">required</link>
                  </entry>
                  <entry>
                    <link linkend="attr_table_column_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_table_column_editable">editable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_requiredMessage">requiredMessage</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты <link linkend="element_table_rows" id="element_t_rows">rows</link>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_datasource">datasource</link>
                  </entry>editable</row>
                <row>
                  <entry>
                    <link linkend="attr_headerMode">headerMode</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="TreeTable_section">
          <title>TreeTable</title>
          <para>Таблица с иерархией  (<classname>TreeTable</classname>)   − таблица, отображающая иерархию <glossterm linkend="entity_glossentry">сущностей</glossterm>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_treeTable.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>treeTable</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_TreeTable_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса иерархичных таблиц: для веб-приложений  и для десктоп-приложений.</para>
          <para>Для того чтобы создать иерархическую таблицу, необходимо в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> задать иерархический <glossterm linkend="datasource_glossentry">источник данных</glossterm> и определить описание таблицы:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/treeTable/treeTable.txt" encoding="UTF-8" parse="text"/></programlisting>
          <warning>
            <para>Обязательными для иерархической таблицы являются элементы <link linkend="element_table_columns">columns</link> и  <link linkend="element_table_rows">rows</link>.</para>
          </warning>
        </section>
        <section id="GroupTable_section">
          <title>GroupTable</title>
          <para><link linkend="Table_section">Таблица</link> с возможностью динамической группировки по любому полю. Для того чтобы сгруппировать таблицу по какому-либо столбцу, нужно в шапке таблицы перетащить этот столбец перед знаком <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_groupTableIcon.png"/>
              </imageobject>
            </inlinemediaobject>. Сгруппированные значения можно разворачивать и сворачивать с помощью знаков <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_groupBox_plus.png"/>
              </imageobject>
            </inlinemediaobject>/<inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_groupBox_minus.png"/>
              </imageobject>
            </inlinemediaobject>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_groupTableDragColumn.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>groupTable</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_GroupTable_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса таблиц с группировкой: для веб-приложений  и для десктоп-приложений.</para>
          <para>Для правильного функционирования <classname>GroupTable</classname> должна быть соединена с <link linkend="datasource_glossentry">GroupDatasource</link>.</para>
          <para>Пример использования:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/groupTable/groupTable.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Элемент <sgmltag>group</sgmltag> − необязательный элемент, может в единственном экземпляре находиться внутри <link linkend="element_table_columns">columns</link>. Содержит набор элементов <link linkend="element_table_columns_column_1">column</link>, по которым будет выполняться первоначальная группировка.</para>
        </section>
        <section id="Tree_section">
          <title>Tree</title>
          <para>Компонент <classname>Tree</classname> представляет иерархическую структуру данных, отображая ее в виде дерева.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/Tree.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>tree</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tree_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса деревьев: для веб-приложений  и для десктоп-приложений.</para>
          <para>Для того чтобы создать компонент дерева, создайте в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> следующий код:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/tree/tree.txt" encoding="UTF-8" parse="text"/></programlisting>
          <warning>
            <para>Обязательными для дерева являются элемент <sgmltag>treechildren</sgmltag>.</para>
          </warning>
          <para>Элемент <sgmltag id="element_treechildren">treechildren</sgmltag>  декларирует используемый <glossterm linkend="datasource_glossentry">источник данных</glossterm>. </para>
          <para>Атрибуты <sgmltag>tree</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>editable</row>
                <row><entry>
                    <link linkend="attr_id">id</link>
                  </entry>required<entry/></row>
                <row>
                  <entry align="left">
                    <link linkend="attr_table_multiselect">multiselect</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <classname>tree</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="1" colsep="1" rowsep="1" align="left"><colspec colname="c1"/>c <tbody>
                <row><entry align="left">
                    <link linkend="element_treechildren">treechildren</link>
                  </entry>editable</row>
                <row><entry>
                    <link linkend="element_table_actions">actions</link>
                  </entry>required</row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты <classname>treechildren</classname>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_captionProperty">captionProperty</link>
                  </entry>editable</row>
                <row><entry>
                    <link linkend="attr_datasource">datasource</link>
                  </entry>required</row>
                <row>
                  <entry align="left">hierarchyProperty</entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="ProgressBar_section">
          <title>ProgressBar</title>
          <para>Индикатор прогресса (<classname>ProgressBar</classname>) наглядно демонстрирует пользователю, на каком этапе выполнения находится некий процесс, так что пользователь сможет понять, как долго остается ждать его завершения. Индикатор выводится на
экран в виде непрерывно меняющейся полосы. Может отображать конкретное значение прогресса, например, 30%, а может отображать неопределенное состояние.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_progressBar.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>progressBar</sgmltag></para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_progressBar_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса индикатора прогресса: для веб-приложений и для десктоп-приложений.</para>
          <para>Для создания индикатора необходимо в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> определить его описание:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/progressBar/progressBar.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>С помощью атрибута <sgmltag id="attr_indeterminate">indeterminate</sgmltag> можно задать отображение неопределенного состояния индикатора. Если значение атрибута равно <literal>true</literal>, то индикатор отображает неопределенное состояние. Значение атрибута по умолчанию равно <literal>true</literal>.</para>
          <para>Значения прогресса задачи для индикатора прогресса следует передавать в  значениях типа <code>Float</code> в диапазоне от 0.0 до 1.0.</para>
          <para>Атрибуты <sgmltag>progressBar</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry><entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry><entry/></row>
                <row>
                  <entry>
                    <link linkend="attr_editable">editable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_indeterminate">indeterminate</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="FileUploadField_section">
          <title>FileUploadField</title>
          <para>Компонент загрузки файлов (<classname>FileUploadField</classname>) позволяет пользователю загружать файлы на сервер. Компонент представляет собой кнопку, при нажатии на которую на экране отображается окно загрузки файла, содержащее список файлов некоторой директории. В списке можно выбрать только один файл для загрузки.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_upload.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>upload</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_FileUploadField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса компонентов загрузки файлов: для веб-приложений  и для десктоп-приложений.</para>
          <para>Ниже расположен пример, содержащий обработчик загрузки файла. В этом обработчике написан программный код, обеспечивающий вывод на экран сообщения об успешной или не успешной загрузке файла, а также вывод названия файла в компоненте  <link linkend="Label_section">надписи</link>.</para>
          <para>Для начала определим описание компонента в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/upload/upload.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Программный код <glossterm linkend="screen_controller_glossentry">контроллера</glossterm> выглядит следующим образом:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/upload/uploadContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_uploadRez.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <sgmltag>upload</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry><entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry><entry/></row>
                <row>
                  <entry>
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="FileMultiUploadField_section">
          <title>FileMultiUploadField</title>
          <para>Компонент для множественной загрузки файлов позволяет пользователю загружать файлы на сервер. Компонент представляет собой кнопку, при нажатии на которую на экране отображается окно загрузки файлов, содержащее список файлов некоторой директории. В списке можно выбрать сразу несколько файлов для загрузки.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_multipleUpload.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>multiupload</sgmltag>.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_FileMultiUploadField_dia.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Существует два класса компонентов множественной загрузки файлов: для веб-приложений  и для десктоп-приложений.</para>
          <para>Ниже расположен пример, содержащий обработчик загрузки файлов. В этом обработчике написан программный код, обеспечивающий вывод на экран сообщения об успешной или не успешной загрузке файлов, а также вывод названий файлов в <link linkend="TextField_section">текстовое поле</link>.</para>
          <para>Для начала определим описание компонента в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/multipleUpload/multipleUpload.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Программный код <glossterm linkend="screen_controller_glossentry">контроллера</glossterm> выглядит следующим образом:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/multipleUpload/multipleUploadContr.txt" encoding="UTF-8" parse="text"/></programlisting>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_multipleUploadRez.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <sgmltag>multiupload</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry><entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry><entry/></row>
                <row>
                  <entry>
                    <link linkend="attr_description">description</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                  <entry/>
                  <entry/>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                  <entry/>
                  <entry/>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
      </section>
      <section id="gui_layouts_section">
        <title>Контейнеры</title>
        <para><link linkend="BoxLayout_section">BoxLayout</link></para>
        <para><link linkend="ButtonsPanel_section">ButtonsPanel</link></para>
        <para><link linkend="GridLayout_section">GridLayout</link></para>
        <para><link linkend="ScrollBoxLayout_section">ScrollBoxLayout</link></para>
        <para><link linkend="SplitPanel_section">SplitPanel</link></para>
        <para><link linkend="GroupBoxLayout_section">GroupBoxLayout</link></para>
        <para><link linkend="Tabsheet_section">Tabsheet</link></para>
        <para><link linkend="IFrame_section">IFrame</link></para>
        <section id="BoxLayout_section">
          <title>BoxLayout</title>
          <para><classname>BoxLayout</classname> представляет собой контейнер с последовательным размещением компонентов.</para>
          <para>Существует 3 типа <classname>BoxLayout</classname>, определяемых именем XML-элемента:</para>
          <itemizedlist>
            <listitem>
              <para><sgmltag>hbox</sgmltag> − горизонтальное расположение компонентов</para>
              <figure>
                <title/>
                <mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_hbox.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/box/hbox.txt" encoding="UTF-8" parse="text"/></programlisting>
            </listitem>
            <listitem>
              <para><sgmltag>vbox</sgmltag> − вертикальное расположение компонентов. <sgmltag>vbox</sgmltag> имеет 100% ширину по умолчанию</para>
              <figure>
                <title/>
                <mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_vbox.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/box/vbox.txt" encoding="UTF-8" parse="text"/></programlisting>
            </listitem>
            <listitem>
              <para><sgmltag>flowbox</sgmltag> − горизонтальное расположение компонентов с переносом вниз. При недостатке места по горизонтали непомещающиеся компоненты будут перенесены &quot;на следующую строку&quot; (поведение аналогично <application>Swing</application> <classname>FlowLayout</classname>)</para>
              <figure>
                <title/>
                <mediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="img/gui_flowbox.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/box/flowbox.txt" encoding="UTF-8" parse="text"/></programlisting>
            </listitem>
          </itemizedlist>
          <para>Могут быть использованы следующие XML-атрибуты:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry><entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_expand">expand</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_margin">margin</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_spacing">spacing</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="ButtonsPanel_section">
          <title>ButtonsPanel</title>
          <para>Компонент, унифицирующий использование и размещение кнопок для управления данными в таблице.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_buttonsPanel.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>buttonsPanel</sgmltag>.</para>
          <para>Для создания панели с кнопками нужно определить ее описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/buttonsPanel/buttonsPanel.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <sgmltag id="attr_alwaysVisible">alwaysVisible</sgmltag> служит для управления видимостью панели с кнопками при открытии окна списка в режиме поиска (например, при открытии окна списка из компонента <link linkend="PickerField_section">PickerField</link>). Если значение атрибута равно <literal>true</literal>, то панель с кнопками не скрывается. По умолчанию значение атрибута равно <literal>false</literal>.</para>
          <para>Элементами панели с кнопками являются элементы <link linkend="Button_section">button</link>.</para>
          <para>Атрибуты <sgmltag>buttonsPanel</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row>
                  <entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_alwaysVisible">alwaysVisible</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">styleName</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_expand">expand</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="GridLayout_section">
          <title>GridLayout</title>
          <para>Контейнер, располагающий компоненты по сетке.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_gridlayout.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>grid</sgmltag>.</para>
          <para>Для создания контейнера с табличным расположением нужно определить его описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/grid/grid.txt" encoding="UTF-8" parse="text"/></programlisting>
          <warning>
            <para>Обязательными вложенными элементами являются элементы <sgmltag>columns</sgmltag> и <sgmltag>rows</sgmltag>. </para>
          </warning>
          <para><sgmltag id="attr_layout_rows">rows</sgmltag> − обязательный элемент, содержит последовательность строк (<sgmltag>row</sgmltag>). Хотя бы один элемент строки является обязательным.</para>
          <para><sgmltag id="attr_layout_row">row</sgmltag> − элемент строки, контейнер для содержимого ряда. Состоит из контейнеров или  компонентов.</para>
          <para><sgmltag id="attr_grid_flex_row">flex</sgmltag> − необязательный атрибут для элемента <sgmltag>row</sgmltag>, задает соотношение высот рядов сетки.</para>
          <para><sgmltag id="attr_grid_columns">columns</sgmltag> − обязательный элемент, содержит последовательность <sgmltag>column</sgmltag>.</para>
          <para>Атрибут <sgmltag id="attr_grid_count">count</sgmltag> − необязательный атрибут, задает количество колонок, если не заданы элементы <sgmltag>column</sgmltag>.</para>
          <para><sgmltag id="attr_grid_column">column</sgmltag> − необязательный элемент для элемента <link linkend="attr_grid_columns">columns</link>, декларирует атрибуты колонок сетки.</para>
          <para>Атрибут <sgmltag id="attr_grid_flex_column">flex</sgmltag> − необязательный атрибут, задает соотношение ширин колонок.</para>
          <para>Атрибуты <sgmltag>grid</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_spacing">spacing</link>
                  </entry><entry>
                    <link linkend="attr_width">width</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_stylename">styleName</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_margin">margin</link>
                  </entry>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Элементы <sgmltag>grid</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_grid_columns">columns</link>
                  </entry>editable</row>
                <row>
                  <entry>
                    <link linkend="attr_layout_rows">rows</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты <sgmltag>columns</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_grid_count">count</link>
                  </entry>editable</row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты <sgmltag>row</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>editable</row>
                <row>
                  <entry>
                    <link linkend="attr_grid_flex_row">flex</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_spacing">spacing</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_visible">visible</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="ScrollBoxLayout_section">
          <title>ScrollBoxLayout</title>
          <para><classname>ScrollBoxLayout</classname> − контейнер, который позволяет прокручивать свое содержимое.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_scrollBox.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>scrollBox</sgmltag></para>
          <para>Для создания контейнера с табличным расположением нужно определить его описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/scrollBox/scrollBox.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>С помощью атрибута <sgmltag id="attr_scroll_orientation">orientation</sgmltag> можно задавать направление расположения вложенных компонентов − <literal>horizontal</literal> или <literal>vertical</literal>. По умолчанию значением атрибута является <literal>vertical</literal>.</para>
          <warning>
            <para>Вложенные в <sgmltag>scrollBox</sgmltag> компоненты должны иметь фиксированные размеры или размеры по умолчанию. Нельзя устанавливать <code>height=&quot;100%&quot;</code> или <code>width=&quot;100%&quot;</code>.</para>
          </warning>
          <para>Атрибуты <sgmltag>scrollBox</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry><entry>
                    <link linkend="attr_scroll_orientation">orientation</link>
                  </entry>editable</row>
                <row>
                  <entry>
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_spacing">spacing</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
                <row>
                  <entry>
                    <link linkend="attr_margin">margin</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="SplitPanel_section">
          <title>SplitPanel</title>
          <para>Панель с разделителем (<classname>SplitPanel</classname>) − контейнер, разбитый на две области, размер которых по одному из направлений (горизонтали либо вертикали) можно менять путем перемещения разделителя. На рисунке показан пример разбивки области окна на три панели. Во внешней панели формируется горизонтальная граница, которая отделяет нижнюю панель от верхней. Верхняя панель разделяется по вертикали.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_splitPanel.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>split</sgmltag>.</para>
          <para>Для создания панели с разделителем нужно определить ее описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/split/split.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>При создании панели с разделителем нужно указать ориентацию разделителя с помощью атрибута <sgmltag id="attr_layout_orientation">orientation</sgmltag>. По умолчанию значение атрибута равно <literal>vertical</literal>.</para>
          <para id="attr_layout_pos"><sgmltag>pos</sgmltag> − необязательный атрибут, определяет процентное соотношение областей. Например, <code>pos=&quot;30%&quot;</code> означает соотношение областей 30/70. По умолчанию соотношение областей составляет 50/50.</para>
          <warning>
            <para>Обязательными вложенными элементами являются два контейнера или компонента.</para>
          </warning>
          <para>Атрибуты <sgmltag>split</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_layout_pos">pos</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_layout_orientation">orientation</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="GroupBoxLayout_section">
          <title>GroupBox</title>
          <para>Контейнер, позволяющий выделить рамкой группу объектов, задать им общий заголовок и описание. Кроме того, он умеет сворачивать свое содержимое.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_groupBox.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>groupBox</sgmltag>.</para>
          <para>Для создания контейнера с названием и рамкой нужно определить его описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/groupBox/groupBox.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <sgmltag id="attr_group_orientation">orientation</sgmltag>  задает направление расположения вложенных компонентов − <literal>horizontal</literal> или <literal>vertical</literal>. По умолчанию значением атрибута является <literal>vertical</literal>.</para>
          <para><sgmltag id="attr_group_collapsable">collapsable</sgmltag> − необязательный атрибут, в значении <literal>true</literal> компонент может сворачивать свое содержимое. В верхнем нижнем углу контейнера появляется значок <inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_groupBox_minus.png"/>
              </imageobject>
            </inlinemediaobject>/<inlinemediaobject>
              <imageobject>
                <imagedata fileref="img/gui_groupBox_plus.png"/>
              </imageobject>
            </inlinemediaobject>.</para>
          <para><sgmltag id="attr_group_collapsed">collapsed</sgmltag> − необязательный атрибут, в значении <literal>true</literal> компонент будет свернут по умолчанию.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_groupBox_collapsed.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <sgmltag>groupBox</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_description">description</link>
                  </entry><entry>
                    <link linkend="attr_id">id</link>
                  </entry><entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_group_collapsable">collapsable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_expand">expand</link>
                  </entry>
                  <entry>
                    <link linkend="attr_orientation">orientation</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_group_collapsed">collapsed</link>
                  </entry>
                  <entry>
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry>
                    <link linkend="attr_spacing">spacing</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="Tabsheet_section">
          <title>Tabsheet</title>
          <para>Панель с вкладками (<interfacename>Tabsheet</interfacename>) позволяет выводить на экран вкладки (<sgmltag>tabs</sgmltag>) − панели, имеющие название. При нажатии пользователем на названии вкладки <interfacename>Tabsheet</interfacename> выводит на экран соответствующие выбранной вкладке элементы пользовательского интерфейса.</para>
          <figure>
            <title/>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tabsheet.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>XML-имя компонента: <sgmltag>tabsheet</sgmltag>.</para>
          <para>Для создания панели с вкладками нужно определить ее описание в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm>.</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/tabsheet/tabsheet.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Как видно, компонент <sgmltag>tabsheet</sgmltag> состоит из элементов <sgmltag>tab</sgmltag>.</para>
          <para>Элемент <sgmltag>tab</sgmltag> может содержать как другой <link linkend="gui_layouts_section">контейнер</link>, так и <link linkend="gui_components_section">компонент</link>.</para>
          <para>Атрибут <link linkend="attr_id" id="attr_tabsheet_id">id</link> является идентификатором вкладки. Следует отметить, что вкладка не является компонентом, и данный идентификатор используется только в рамках <interfacename>Tabsheet</interfacename>.</para>
          <para>Атрибут <sgmltag id="attr_tabsheet_lazy">lazy</sgmltag> задает отложенную загрузку содержимого вкладки. При открытии экрана <sgmltag>lazy</sgmltag>-вкладки не загружают свое содержимое, что приводит к созданию меньшего количества компонентов в памяти и, как следствие, к меньшему количеству запросов к БД. Компоненты вкладки загружаются только в тот момент, когда пользователь выбирает данную вкладку. Значение по умолчанию равно <literal>false</literal>. Если компоненты <sgmltag>lazy</sgmltag>-вкладки требуют инициализации, проводить ее нужно не напрямую в методе <code>init()</code> <glossterm linkend="screen_controller_glossentry">контроллера</glossterm>, а в слушателе на переключение вкладок <classname>Tabsheet.TabChangeListener.</classname></para>
          <para>В десктоп-приложении есть возможность открывать вкладки в новом окне. Для этого нужно атрибуту <sgmltag id="attr_detachable">detachable</sgmltag> присвоить значение <literal>true</literal>.</para>
          <figure>
            <title>Вид отделяемой вкладки</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/gui_tabsheetDetachable.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Атрибуты <sgmltag>tabsheet</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_height">height</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
          <para>Атрибуты элемента  <sgmltag>tab</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_caption">caption</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_expand">expand</link>
                  </entry><entry>
                    <link>margin</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_detachable">detachable</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_tabsheet_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_spacing">spacing</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_enable">enable</link>
                  </entry>
                  <entry>
                    <link linkend="attr_tabsheet_lazy">lazy</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
        <section id="IFrame_section">
          <title>IFrame</title>
          <para>Фреймы предназначены для декомпозиции и многократного использования частей экранов.</para>
          <para>Фрейм включается в экран с помощью элемента <sgmltag>iframe</sgmltag>.</para>
          <para>Для включения фрейма в экран необходимо в <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескрипторе</glossterm> определить его описание:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/iframe/iframe.txt" encoding="UTF-8" parse="text"/></programlisting>
          <para>Атрибут <sgmltag id="attr_frame_src">src</sgmltag> − путь к <glossterm linkend="screen_xml_descriptor_glossentry">XML-дескриптору</glossterm> фрейма. </para>
          <para>Если фрейм зарегистрирован в файле <filename>screens.xml</filename>, то можно указать идентификатор фрейма в атрибуте <sgmltag id="attr_frame_screen">screen</sgmltag>.</para>
          <warning>
            <para>Обязательно должен быть указан один из атрибутов: <link linkend="attr_frame_src">src</link> или <link linkend="attr_frame_screen">screen</link>.</para>
          </warning>
          <para>Дескриптор фрейма идентичен <glossterm linkend="screen_xml_descriptor_glossentry">xml-дескриптору</glossterm> экрана и может содержать собственный <sgmltag>metadataContext</sgmltag>, <sgmltag>dsContext</sgmltag>, <sgmltag>messagesPack</sgmltag>. Кроме того, фрейм может иметь собственный <glossterm linkend="screen_controller_glossentry">контроллер</glossterm>.</para>
          <para>Правила взаимодействия экрана и вложенного в него фрейма:</para>
          <itemizedlist>
            <listitem>
              <para>Из экрана обращаться к компонентам фрейма можно через точку: <code>frame_id.component_id</code></para>
            </listitem>
            <listitem>
              <para>Из контроллера фрейма получить компонент экрана  можно обычным вызовом <code>getComponent(component_id)</code>, но только в том случае, если компонент с таким именем не объявлен в самом фрейме. То есть компоненты фрейма маскируют компоненты экрана.</para>
            </listitem>
            <listitem>
              <para>Из фрейма получить <glossterm linkend="datasource_glossentry">источник данных</glossterm> экрана можно простым вызовом <code>getDsContext().get(ds_id)</code> либо в запросе <code>ds$ds_id</code>, но только в том случае, если источник данных с таким именем не объявлен в самом фрейме (аналогично компонентам).</para>
            </listitem>
            <listitem>
              <para>Из экрана получить источник данных фрейма можно только через итерацию по <code>getDsContext().getChildren()</code></para>
            </listitem>
          </itemizedlist>
          <para>При коммите экрана вызывается также коммит измененных источников  данных фрейма.</para>
          <para>Атрибуты <sgmltag>iframe</sgmltag>:</para>
          <informaltable frame="none" pgwide="0" align="left">
            <tgroup cols="4" colsep="1" rowsep="1" align="left"><colspec colname="c1"/><colspec colname="c2"/><colspec colname="c3"/><colspec colname="c4"/>c <tbody>
                <row><entry align="left">
                    <link linkend="attr_align">align</link>
                  </entry>editable<entry align="left">
                    <link linkend="attr_frame_screen">screen</link>
                  </entry><entry>
                    <link linkend="attr_visible">visible</link>
                  </entry></row>
                <row>
                  <entry>
                    <link linkend="attr_height">height</link>
                  </entry>
                  <entry align="left">
                    <link linkend="attr_frame_src">src</link>
                  </entry>
                  <entry>
                    <link linkend="attr_width">width</link>
                  </entry>
                </row>
                <row>
                  <entry align="left">
                    <link linkend="attr_id">id</link>
                  </entry>
                  <entry>
                    <link linkend="attr_stylename">stylename</link>
                  </entry>
                </row>
              </tbody></tgroup>
          </informaltable>
        </section>
      </section>
      <section>
        <title>Разное</title>
        <section>
          <title>AccessControl</title>
          <para>Компонент <classname>accessControl</classname> предназначен для декларативного управления доступом к частям экрана. Он представляет собой контейнер, который никак не отображает себя на экране, а только управляет атрибутами <parameter>visible</parameter> и <parameter>editable</parameter> входящих в него компонентов.</para>
          <para>Состояние управляемых компонентов определяется на основе двух элементов, вложенных в <classname>accessControl</classname>: <parameter>visible</parameter> и <parameter>editable</parameter>.</para>
          <para>Соответствующее значение принимается либо из скрипта, возвращающего <type>boolean</type>, либо из свойства объекта <classname>AccessData</classname>, связанного с компонентом (см. ниже).
Скрипт задается либо атрибутом <parameter>script</parameter>, либо in-place в тексте элемента. 
Свойство объекта <classname>AccessData</classname> задается атрибутом <parameter>property</parameter> и имеет больший приоритет, чем скрипт.</para>
          <warning>
            <para>В случае <parameter>visible=false</parameter> вложенные компоненты вообще не создаются, поэтому будьте осторожны при обращении к ним из контроллера.</para>
          </warning>
          <para>
                <programlisting>&lt;tab id=&quot;mainTab&quot; caption=&quot;msg://mainTab&quot;&gt;
            &lt;accessControl data=&quot;workflow.client.web.ui.card.CardAccessData&quot; param=&quot;accessData&quot;&gt;
            &lt;editable property=&quot;notStarted&quot;/&gt;

            &lt;vbox margin=&quot;true&quot; expand=&quot;attachmentsPane&quot;&gt;
                ...</programlisting>
            </para>
          <section>
            <title>Объект AccessData</title>
            <para>В связи с тем, что одни и те же параметры доступа могут многократно потребоваться в разных частях экрана и в коде контроллера, компонент <classname>accessControl</classname> может быть связан с объектом Java|Groovy, вычисляющим и хранящим эти параметры. Т.о. дорогостоящая инициализация параметра доступа производится только один раз, и затем доступна на протяжении жизни экрана.</para>
            <para>Для связи компонента с данными доступа создайте класс, унаследованный от <classname>AbstractAccessData</classname>, и задайте следующие атрибуты компонента <classname>accessControl</classname>:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">data</emphasis> − имя класса <classname>AccessData</classname></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">param</emphasis> − имя параметра экрана, в котором будет сохранен объект <classname>AccessData</classname></para>
              </listitem>
            </itemizedlist>
            <para>В момент создания экрана загрузчик компонента <classname>accessControl</classname> проверяет наличие экземпляра <classname>AccessData</classname> в указанном параметре, и если его там нет, создает новый экземпляр.</para>
            <para>В дальнейшем в коде контроллера можно получить экземпляр <classname>AccessData</classname> из параметров экрана, например:</para>
            <programlisting>AbstractWfAccessData accessData = getContext().getParamValue(&quot;accessData&quot;);</programlisting>
            <para>При создании класса <classname>AccessData</classname> следует иметь в виду, что в параметры экрана-редактора всегда передается параметр <parameter>param$item</parameter>, содержащий текущий редактируемый экземпляр сущности. Однако этот экземпляр загружен по view вызывающего экрана, а не по view редактора.</para>
            <para>Свойства <classname>AccessData</classname>, на которые можно ссылаться из компонента <classname>accessControl</classname>, должны быть реализованы по стандарту JavaBeans: методами с сигнатурой boolean <methodname>getXxx()</methodname></para>
            <para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/CardAccessData.java" encoding="UTF-8" parse="text"/></programlisting>
            </para>
          </section>
        </section>
        <section id="Action_section">
          <title>Action</title>
          <para><interfacename>Action</interfacename> − интерфейс, абстрагирующий действие от визуального компонента.</para>
          <para>Визуальный компонент, содержащий одно действие, реализует интерфейс <interface>Component.ActionOwner</interface>. Это, например, <classname>Button</classname>.</para>
          <para>Визуальный компонент, содержащий несколько действий, реализует интерфейс <interface>Component.ActionsHolder</interface>. Это <classname>Window</classname>, <classname>IFrame</classname>, <classname>Table</classname> и ее наследники, <classname>Tree</classname>, <classname>PopupButton</classname>, <classname>PickerField</classname>, <classname>LookupPickerField</classname>.</para>
          <section>
            <title>Декларативное создание действий</title>
            <para>В дескрипторе экрана может быть задан набор действий для некоторого <classname>ActionsHolder</classname>.</para>
            <itemizedlist>
              <title>Доступные атрибуты действия</title>
              <listitem>
                <para><parameter>id</parameter> − идентификатор, должен быть уникален в рамках данного <classname>ActionsHolder</classname></para>
              </listitem>
              <listitem>
                <para>caption</para>
              </listitem>
              <listitem>
                <para>icon</para>
              </listitem>
              <listitem>
                <para>enable</para>
              </listitem>
              <listitem>
                <para>visible − в отличие от компонентов Groovy-выражения не поддерживаются</para>
              </listitem>
              <listitem>
                <para><parameter>invoke</parameter> − имя вызываемого метода контроллера. Метод должен быть <classname>public</classname>, не возвращать результата, и либо не иметь аргументов, либо иметь один аргумент типа <classname>Component</classname>. Если метод имеет аргумент <classname>Component</classname>, то при вызове в него будет передан экземпляр визуального компонента, запустившего данное действие.</para>
              </listitem>
              <listitem>
                <para><parameter>shortcut</parameter> − доступен только для действий, задаваемых в окне или фрейме. Задает комбинацию клавиш для вызова.</para>
              </listitem>
            </itemizedlist>
            <para>Примеры:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example2.txt" encoding="UTF-8" parse="text"/></programlisting>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example3.txt" encoding="UTF-8" parse="text"/></programlisting>
          </section>
          <section>
            <title>Использование в кнопках</title>
            <para>Действия, заданные для некоторого <classname>ActionsHolder</classname>, могут быть использованы в компонентах <classname>ActionOwner</classname>, например в <classname>Button</classname>. Для этого достаточно указать полное имя действия в соотв. атрибуте. Например:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example4.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>При этом Button возьмет значения атрибутов caption, icon, enable, visible из назначенного действия.</para>
          </section>
          <section>
            <title>Стандартные действия</title>
            <para>Для наследников ListComponent (это Table и Tree) существует набор стандартных действий, определяемых перечислением ListActionType. Для таких действий не нужно определять никаких атрибутов, кроме идентификатора. Например:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example5.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Для компонентов PickerField и LookupPickerField существует набор стандартных действий, определяемых перечислением PickerField.ActionType. Для таких действий не нужно определять никаких атрибутов, кроме идентификатора. Например:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example6.txt" encoding="UTF-8" parse="text"/></programlisting>
          </section>
          <section>
            <title>Программное создание и управление действиями</title>
            <para>Базовым классом реализации действий является <classname>AbstractAction</classname>. Пример использования:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example7.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>При выполнении метода <methodname>addAction()</methodname> реализация <classname>ActionsHolder</classname> проверяет, нет ли уже в нем действия с таким же идентификатором. Если есть, то имеющееся действие будет заменено на новое переданное. Поэтому можно безопасно, например, декларировать стандартное действие в дескрипторе экрана, а затем в контроллере создать новое с переопределенными методами, и добавить в <classname>ActionsHolder</classname>.</para>
            <para>Кроме создания наследников <classname>AbstractAction</classname> или стандартных действий, возможно конфигурирование декларативно созданных действий путем получения их в контроллере и установки атрибутов. Например:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example8.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>При этом во всех визуальных компонентах, связанных с данным действием, значение соответствующего атрибута также изменится.</para>
          </section>
        </section>
        <section id="table_aggregation_section">
          <title>Aggregation</title>
          <para>Механизм задания агрегаций для колонок в Table.</para>
          <itemizedlist>
            <title>Атрибуты aggregation</title>
            <listitem>
              <para>type −  функция агрегирования:</para>
              <itemizedlist>
                <listitem>
                  <para>SUM − сумма</para>
                </listitem>
                <listitem>
                  <para>AVG − среднее значение</para>
                </listitem>
                <listitem>
                  <para>COUNT − количество</para>
                </listitem>
                <listitem>
                  <para>MIN − минимальное значение</para>
                </listitem>
                <listitem>
                  <para>MAX − максимальное значение</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>formatter − задает формат вывода агрегированного значения.</para>
            </listitem>
          </itemizedlist>
          <para>Логика применения форматирования к агрегированному значению следующая: если в элементе <classname>aggregation</classname> указан <parameter>formatter</parameter>, то применяется он; иначе применяется <parameter>formatter</parameter> соответствующего агрегированному значению <parameter>datatype</parameter>.</para>
          <para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/aggregation/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
          </para>
        </section>
        <section id="table_presentations_section">
          <title>Presentation </title>
        </section>
        <section id="gui_themes_section">
          <title>Создание темы приложения</title>
        </section>
      </section>
      <section>
        <title>Атрибуты</title>
        <variablelist>
          <varlistentry>
            <term>align</term>
            <listitem>
              <para>Атрибут, задающий расположение компонента относительно вышестоящего контейнера.</para>
              <para>Возможные значения:</para>
              <itemizedlist>
                <listitem>
                  <para>TOP_RIGHT</para>
                </listitem>
                <listitem>
                  <para>TOP_LEFT</para>
                </listitem>
                <listitem>
                  <para>TOP_CENTER</para>
                </listitem>
                <listitem>
                  <para>MIDDLE_RIGHT</para>
                </listitem>
                <listitem>
                  <para>MIDDLE_LEFT</para>
                </listitem>
                <listitem>
                  <para>MIDDLE_CENTER</para>
                </listitem>
                <listitem>
                  <para>BOTTOM_RIGHT</para>
                </listitem>
                <listitem>
                  <para>BOTTOM_LEFT</para>
                </listitem>
                <listitem>
                  <para id="attr_align">BOTTOM_CENTER</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_caption">
            <term>caption</term>
            <listitem>
              <para>XML-атрибут, устанавливающий заголовок для визуального компонента.</para>
              <para>Значением атрибута должна быть либо собственно строка сообщения, либо ключ в пакете сообщений. В случае ключа значение должно начинаться с префикса msg://</para>
              <para>Способы задания ключа:</para>
              <itemizedlist>
                <listitem>
                  <para>Короткий ключ − при этом сообщение ищется в пакете, заданном для данного экрана:</para>
                  <programlisting>caption=&quot;msg://infoFieldCaption&quot;</programlisting>
                </listitem>
                <listitem>
                  <para>Полный ключ, с заданием пакета:</para>
                  <programlisting>caption=&quot;msg://com.haulmont.refapp.gui.app/infoFieldCaption&quot;</programlisting>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_captionProperty">
            <term>captionProperty</term>
            <listitem>
              <para>XML-атрибут визуального компонента, реализующего интерфейс <interfacename>OptionsField</interfacename>.</para>
              <para>Задает имя атрибута сущности, которую содержит <glossterm linkend="datasource_glossentry">источник данных</glossterm>, используемый для формирования списка опций (<link linkend="attr_optionsDatasource">optionsDatasource</link>).</para>
              <para>Если данный атрибут не задан, список опций будет содержать Instance Name экземпляров, содержащихся в списке.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_clickAction">
            <term>clickAction</term>
            <listitem>
              <para>Атрибут содержит описание действия, которое будет выполнено при клике в ячейке или в поле (для компонента <link linkend="FieldGroup_section">FieldGroup</link>). Возможны два типа действий:</para>
              <itemizedlist>
                <listitem>
                  <para><classname>open</classname> − открывает для <glossterm linkend="entity_glossentry">сущности</glossterm>, отображаемой в ячейке, экран редактирования с указанным именем, например: <classname>clickAction=&quot;open:sec$User.edit&quot;</classname>. Имя сущности отображается в виде ссылки:</para>
                  <figure>
                    <title/>
                    <mediaobject>
                      <imageobject>
                        <imagedata align="center" fileref="img/gui_clickAction_open.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para><classname>invoke</classname> − вызывает метод <glossterm linkend="screen_controller_glossentry">контроллера</glossterm> экрана с указанным именем, например: <classname>clickAction=&quot;invoke:onClick&quot;</classname>. Метод должен иметь единственный параметр типа <type>Object</type>, в который будет передан экземпляр сущности, отображаемой в ячейке.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_datasource">
            <term>datasource</term>
            <listitem>
              <para>XML-атрибут компонента, реализующего интерфейс <interfacename>DatasourceComponent</interfacename>.</para>
              <para>Предназначен для задания <link linkend="datasource_glossentry">источника данных</link> и должен содержать имя источника данных, описанного в секции <parameter>dsContext</parameter> <link linkend="screen_xml_descriptor_glossentry">дескриптора</link> экрана.</para>
              <para>Атрибут property является обязательным, иначе возникает ошибка java.lang.IllegalStateException: Can&apos;t set assign datasource &apos;sampleDs&apos; for component &apos;labelInfo&apos; due &apos;property&apos; attribute is not defined. </para>
              <para>Смотрите также атрибут property.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_description">
            <term>description</term>
            <listitem>
              <para>Атрибут, задающий текст подсказки для компонента.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_editable">
            <term>editable</term>
            <listitem>
              <para>XML-атрибут, указывающий на возможность редактирования содержимого (не путать с <link linkend="attr_enable">enable</link>).</para>
              <para>Возможные значения − true, false. По умолчанию true.</para>
            </listitem>
            <listitem>На возможность редактирования содержимого для компонента, связанного с данными (наследника DatasourceComponent или List), влияет также Security. Если по данным security данный компонент должен быть недоступен для редактирования, значение атрибута editable не принимается во внимание.</listitem>
          </varlistentry>
          <varlistentry id="attr_enable">
            <term>enable</term>
            <listitem>
              <para>Атрибут компонента, устанавливающий его состояние &quot;enabled/disabled&quot; − доступен/недоступен.</para>
              <para>Если компонент недоступен, то он не принимает фокус ввода. Недоступность контейнера приводит к тому, что все его компоненты также становятся недоступными.

Возможные значения − true, false.

По умолчанию у всех компонентов enable = true.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_expand">
            <term>expand</term>
            <listitem>
              <para>Атрибут контейнера для управления его внутренней компоновкой.</para>
              <para>Задает компонент внутри контейнера, который необходимо &quot;развернуть&quot;, т.е. установить ему максимально возможную высоту и ширину.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_height">
            <term>height</term>
            <listitem>
              <para>Атрибут, устанавливающий высоту компонента.</para>
              <para>Может быть задана в пикселях либо в процентах от высоты вышестоящего контейнера. Например: 100px, 100%, 50. Если единица измерения не указана, подразумевается высота в пикселях.</para>
              <para>Простановка значения в % означает, что компонент по высоте займет соответствующую часть пространства, предоставляемого контейнером более высокого уровня.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_icon">
            <term>icon</term>
            <listitem>
              <para>XML-атрибут, устанавливающий пиктограмму для визуального компонента.</para>
              <para>Значением атрибута должен быть путь к файлу пиктограммы относительно каталога темы. Например:</para>
              <programlisting>icon=&quot;icons/create.png&quot;</programlisting>
              <para>Если пиктограмма должна быть выбрана в зависимости от языка пользователя, можно указать путь к ней в пакете сообщений, а в атрибуте icon − ключ сообщения, например:</para>
              <programlisting>icon=&quot;msg://addIcon&quot;</programlisting>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_id">
            <term>id</term>
            <listitem>
              <para>Идентификатор компонента.</para>
              <para>Возможное значение − любой допустимый Java-идентификатор. Рекомендуется использовать только camelСase, например, <classname>userGrid</classname>, <classname>filterPanel</classname>.

Может быть указан для любого компонента и должен быть уникальным в пределах экрана.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_margin">
            <term>margin</term>
            <listitem>
              <para>Атрибут margin устанавливает наличие отступа между внешними границами и содержимым контейнера.</para>
              <para>Может иметь 2 вида значений:</para>
              <itemizedlist>
                <listitem>
                  <para>margin=&quot;true&quot; − установить отступ со всех сторон сразу</para>
                </listitem>
                <listitem>
                  <para>margin=&quot;true;false;true;false;&quot; −  установить отступ только сверху и снизу (формат значения &quot;сверху,справа,снизу,слева&quot;)</para>
                </listitem>
              </itemizedlist>
              <para>По умолчанию отступы отсутствуют.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_optionsDatasource">
            <term>optionsDatasource</term>
            <listitem>
              <para>XML-атрибут визуального компонента, реализующего интерфейс <interfacename>OptionsField</interfacename>.</para>
              <para>Задает имя <glossterm linkend="datasource_glossentry">источника данных</glossterm>, используемого для формирования списка опций.</para>
              <para>Совместно с optionsDatasource может использоваться атрибут <link linkend="attr_captionProperty">captionProperty</link>.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_property">
            <term>property</term>
            <listitem>
              <para>XML-атрибут компонента, реализующего интерфейс <interfacename>DatasourceComponent</interfacename>.</para>
              <para>Предназначен для задания имени атрибута сущности, значение которого будет отображаться/редактироваться данным визуальным компонентом.</para>
              <para>Используется всегда совместно с атрибутом <link linkend="attr_datasource">datasource</link>.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_required">
            <term>required</term>
            <listitem>
              <para>XML-атрибут визуального компонента, реализующего интерфейс Field. Указывает, что в данное поле обязательно должно быть введено значение.</para>
              <para>Возможные значения атрибута − true, false. По умолчанию false.</para>
              <para>Совместно с required может использоваться атрибут requiredMessage.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_requiredMessage">
            <term>requiredMessage</term>
            <listitem>
              <para>XML-атрибут, используемый совместно с атрибутом <link linkend="attr_required">required</link>. Позволяет установить сообщение, выводимое пользователю в случае нарушения требования <link linkend="attr_required">required</link>.</para>
              <para>Атрибут должен содержать ключ сообщения в пакете, например: requiredMessage=&quot;msg://infoTextField.requiredMessage&quot;</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_spacing">
            <term>spacing</term>
            <listitem>
              <para>Атрибут spacing устанавливает наличие отступов между компонентами внутри контейнера.</para>
              <para>Возможные значения − true, false.</para>
              <para>По умолчанию отступы отсутствуют.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_stylename">
            <term>stylename</term>
            <listitem>
              <para>Атрибут, задающий имя стиля компонента.</para>
              <para>Для веб-клиента стиль задается в CSS.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_visible">
            <term>visible</term>
            <listitem>
              <para>Атрибут   либо элемент видимости компонента.</para>
              <para>Возможные значения − true, false, либо выражение Groovy с boolean-результатом. Если выражение длинное, имеет смысл использовать не атрибут, а элемент visible внутри текущего компонента − эффект тот же. Если контейнер невидим, не видны и все его компоненты. По умолчанию все компоненты видимы.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="attr_width">
            <term>width</term>
            <listitem>
              <para>Атрибут, устанавливающий ширину компонента.</para>
              <para>Значение может быть задано в пикселях или в процентах от ширины вышестоящего контейнера. Например: 100px, 100%, 50. Если единица измерения не указана, подразумевается ширина в пикселях. Простановка значения в % означает, что компонент по ширине займет соответствующую часть пространства, предоставляемого контейнером более высокого уровня.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section>
        <title>Элементы</title>
        <variablelist>
          <varlistentry id="element_formatter">
            <term>formatter</term>
            <listitem>
              <para>XML-элемент formatter задает класс, который будет применен для преобразования значения в строку.</para>
              <para>Атрибуты:</para>
              <itemizedlist>
                <listitem>
                  <para>class − имя класса, реализующего интерфейс <classname>com.haulmont.cuba.gui.components.Formatter</classname></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry id="element_validator">
            <term>validator</term>
            <listitem>
              <para>XML-элемент для задания механизма валидации значений, введенных в визуальном компоненте.</para>
              <para>Атрибуты:</para>
              <itemizedlist>
                <listitem>
                  <para>script − путь к скрипту Groovy, осуществляющему валидацию</para>
                </listitem>
                <listitem>
                  <para>class − имя класса Java, реализующего интерфейс <interfacename>Field.Validator</interfacename></para>
                </listitem>
                <listitem>
                  <para>message − сообщение, выводимое пользователю в случае ошибки валидации. Атрибут должен содержать ключ сообщения в пакете, например, message=&quot;msg://infoTextField.validationMsg&quot;</para>
                </listitem>
              </itemizedlist>
              <para>Выбор механизма валидации осуществляется следующим образом:</para>
              <itemizedlist>
                <listitem>
                  <para>Если не указано значение атрибута script, и сам элемент validator не содержит текста выражения Groovy, то в качестве валидатора используется класс, указанный в атрибуте class.</para>
                </listitem>
                <listitem>
                  <para>Если элемент validator содержит текст, то он будет использован как выражение Groovy и выполнен с помощью <link linkend="scripting_section">Scripting</link>.</para>
                </listitem>
                <listitem>
                  <para>В противном случае с помощью <link linkend="scripting_section">Scripting</link> будет выполнен скрипт Groovy, указанный в атрибуте script.</para>
                </listitem>
              </itemizedlist>
              <para>В выражение или скрипт Groovy будет передана одна переменная value, содержащая значение, введенное в визуальном компоненте.</para>
              <para>Выражение или скрипт должны вернуть boolean значение: true − valid, false − not valid.</para>
              <para>CUBA уже содержит несколько реализаций наиболее часто используемых валидаторов (см. пакет <package>com.haulmont.cuba.gui.components.validators</package>), которые можно применять в своих проектах:</para>
              <itemizedlist>
                <listitem>
                  <para><classname>DateValidator</classname></para>
                </listitem>
                <listitem>
                  <para><classname>DoubleValidator</classname></para>
                </listitem>
                <listitem>
                  <para><classname>EmailValidator</classname></para>
                </listitem>
                <listitem>
                  <para><classname>IntegerValidator</classname></para>
                </listitem>
                <listitem>
                  <para><classname>LongValidator</classname></para>
                </listitem>
                <listitem>
                  <para><classname>PatternValidator</classname></para>
                </listitem>
                <listitem>
                  <para><classname>ScriptValidator</classname></para>
                </listitem>
              </itemizedlist>
              <para>Примеры использования:</para>
              <programlisting>&lt;field id=&quot;imei&quot;&gt;
    &lt;validator class=&quot;com.haulmont.cuba.gui.components.validators.PatternValidator&quot;
               pattern=&quot;\d{15}&quot;
               message=&quot;msg://general.imeiValidationFailed&quot;/&gt;
&lt;/field&gt;

&lt;field id=&quot;maxCountOfVisits&quot;&gt;
    &lt;validator class=&quot;com.haulmont.cuba.gui.components.validators.IntegerValidator&quot;/&gt;
&lt;/field&gt;</programlisting>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section id="datasources_section">
      <title>Источники данных</title>
      <para>Предназначен для реализации связанных с данными компонентов.</para>
      <para>Существуют следующие интерфейсы источников данных:</para>
      <itemizedlist>
        <listitem>
          <para><interfacename>Datasource</interfacename> − предназначен для работы с одним экземпляром сущности.</para>
          <itemizedlist>
            <listitem>
              <para><interfacename>RuntimePropsDatasource</interfacename> − предназначен для работы с динамическими свойствами сущностей.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para><interfacename>CollectionDatasource</interfacename> − предназначен для работы с коллекцией сущностей</para>
          <itemizedlist>
            <listitem>
              <para><interfacename>HierarchicalDatasource</interfacename> − предназначен для работы с компонентами <classname>Tree</classname>, <classname>TreeTable</classname>.</para>
            </listitem>
            <listitem>
              <para><interfacename>GroupDatasource</interfacename> − предназначен для работы с компонентом <classname>GroupTable</classname>.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para>Как правило, источники данных объявляются декларативно в секции <parameter>dsContext</parameter> <glossterm linkend="screen_xml_descriptor_glossentry">дескриптора экрана</glossterm>.</para>
    </section>
    <section id="background_tasks_section">
      <title>Фоновые задачи</title>
      <para><emphasis role="bold">Предназначение</emphasis></para>
      <para>Фоновые задачи используются на клиентском уровне для выполнения длительных процессов без заморозки пользовательского интерфейса. </para>
      <para>В платформе реализован объект <classname>BackgroundWorker</classname>, который предоставляется окружением и управляет фоновыми задачами</para>
      <programlisting>BackgroundWorker backgroundWorker = AppConfig.getBackgroundWorker();</programlisting>
      <para><emphasis role="bold">Использование</emphasis></para>
      <orderedlist>
        <listitem>
          <para>Задача описывается как наследник абстрактного класса <classname>BackgroundTask</classname>. Для нее необходимо задать окно, которому принадлежит задача, и описать главный метод <methodname>run()</methodname>.</para>
        </listitem>
        <listitem>
          <para>Создается объект управления задачей − <classname>BackgroundTaskHandler</classname>. Для этого задачу необходимо передать классу <classname>BackgroundWorker</classname>.</para>
        </listitem>
        <listitem>
          <para>Выполняется запуск задачи</para>
          <programlisting>// Задача с ограничением 10 секунд и с текущим окном в качестве родителя
final BackgroundTask&lt;Integer, Void&gt; progressIndicator = new BackgroundTask&lt;Integer, Void&gt;(10, this) {
    @Override
    public Void run(TaskLifeCycle&lt;T&gt; taskLifeCycle) {
        // 1 2 3 4 5 :-)
        for (int i = 0; i &lt; 5; i++) {
            Long res;
            try {
                TimeUnit.SECONDS.sleep(1);
            } catch (InterruptedException ignored) {
                return null;
            }
            // Оглашаем прогресс
            taskLifeCycle.publish(i);
        }
        return null;
    }

    @Override
    public void canceled() {
        // отменено
    }

    @Override
    public void done(Void result) {
        // завершено
    }

    @Override
    public void progress(List&lt;Integer&gt; changes) {
        // индикация прогресса
    }

    @Override
    public Map&lt;String, Object&gt; getParams() {
        // передаём параметры
        return Collections.emptyMap();
    }
};

// Получение управляющего объекта и запуск
BackgroundTaskHandler taskHandler = backgroundWorker.handle(progressIndicator);
taskHandler.execute();</programlisting>
        </listitem>
      </orderedlist>
      <para><emphasis role="bold">Объект задачи</emphasis></para>
      <para><classname>BackgroundTask&lt;T, V&gt;</classname> − параметризованный класс:</para>
      <itemizedlist>
        <listitem>
          <para><classname>T</classname> − тип объектов, показывающих прогресс задачи. Они передаются в метод <methodname>progress()</methodname> при вызове <methodname>publish()</methodname> в рабочем потоке</para>
        </listitem>
        <listitem>
          <para><classname>V</classname> − тип результата задачи, его можно получить после выполнения задачи или вызвать синхронно <methodname>getResult()</methodname> для ожидания.</para>
        </listitem>
      </itemizedlist>
      <para>Метод <methodname>canceled()</methodname> вызывается только в случае управляемой отмены задачи (то есть при вызове <methodname>cancel()</methodname> у <classname>TaskHandler</classname>).</para>
      <para>Если у задачи истек таймаут, или было закрыто окно, в котором она исполнялась, то задача будет завершена без уведомлений.</para>
      <warning>
        <para>Следует помнить, что в Java невозможно прервать поток, если он не использует операций, выбрасывающих <errorname>InterrruptedException</errorname>. Никогда не перехватывайте это исключение или все исключения с целью тихо завершить операцию. Хорошим тоном является проверка флага <classname>isInterrupted()</classname> у объекта <classname>TaskLifeCycle</classname> в различных циклических операциях, для того чтобы вовремя отменить выполнение при прерывании задачи.</para>
      </warning>
      <para>Объекты <classname>BackgroundTask</classname> не имеют состояния. Если придерживаться этого подхода и не заводить полей для хранения промежуточных данных, то можно использовать множество параллельно работающих задач, используя всего один объект задачи.</para>
      <para>Объект <classname>BackgroundHandler</classname> можно запускать всего один раз; если требуется частый перезапуск задач, то используйте <classname>BackgroundTaskWrapper</classname></para>
      <para><emphasis role="bold">Отображение фоновых действий для пользователя</emphasis></para>
      <para>Иногда необходимо показывать пользователю окно с прогрессом и кнопкой <guibutton>Отмена</guibutton>. Для этого есть <classname>BackgroundWorkWindow&lt;T,V&gt;</classname> с набором статических методов.
В окне можно отображать статус задачи и разрешать/запрещать отмену фонового процесса.</para>
      <para><emphasis role="bold">Отслеживание исполнения задач</emphasis></para>
      <para>Если Вы хотите использовать параметры из UI компонентов, то необходимо переопределить метод <methodname>Map&lt;String, Object&gt; getParams()</methodname> . Он выполняется один раз при запуске задачи в потоке UI. В методе <methodname>run</methodname> они доступны в объекте <classname>TaskLifeCycle</classname>, аксессор − <methodname>getParams()</methodname>.</para>
      <para>При возникновении исключительных ситуаций вызывается метод <methodname>handleException</methodname>, в котором можно отобразить ошибку на UI.</para>
      <para>Для отмены и удаления зависших задач предусмотрены следующие меры:</para>
      <orderedlist>
        <listitem>
          <para><classname>WatchDog</classname> − поток, постоянно проверяющий задачи на истечение таймаута. Зависшие задачи прерываются и удаляются из обработки</para>
        </listitem>
        <listitem>
          <para>При закрытии родительского окна задачи она прерывается</para>
        </listitem>
        <listitem>
          <para>По истечению сессии пользователя все его задачи прерываются.
Для этого в <filename>web.xml</filename> указать:</para>
          <programlisting>&lt;listener&gt;
    &lt;listener-class&gt;com.haulmont.cuba.web.gui.utils.BackgroundWorkerListener&lt;/listener-class&gt;
&lt;/listener&gt;</programlisting>
        </listitem>
      </orderedlist>
      <para><emphasis role="bold">Объявление WatchDog</emphasis></para>
      <para>В <filename>app-web-spring.xml</filename> и <filename>app-desktop-spring.xml</filename> добавить объявление задачи по расписанию:</para>
      <programlisting>&lt;bean id=&quot;backgroundWorkerScheduler&quot; class=&quot;org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler&quot;&gt;
    &lt;property name=&quot;daemon&quot; value=&quot;true&quot;/&gt;
    &lt;property name=&quot;poolSize&quot; value=&quot;1&quot;/&gt;
&lt;/bean&gt;

&lt;task:scheduled-tasks scheduler=&quot;backgroundWorkerScheduler&quot;&gt;
    &lt;task:scheduled ref=&quot;cuba_BackgroundWorker_WatchDog&quot; method=&quot;cleanupTasks&quot; fixed-delay=&quot;2000&quot;/&gt;
&lt;/task:scheduled-tasks&gt; </programlisting>
      <para><emphasis role="bold">Настройки</emphasis></para>
      <para>Для Web слоя в WebConfig настраивается частота проверки изменений на стороне клиента (браузера): <parameter>cuba.backgroundWorker.uiCheckInterval</parameter> (По умолчанию 2000 мс)</para>
    </section>
    <section>
      <title>Таймеры</title>
      <para>TODO</para>
    </section>
  </section>
  <section>
    <title>Механизмы платформы</title>
    <section id="config_params_section">
      <title>Работа с конфигурационными параметрами</title>
      <para>Подсистема работы с конфигурационными параметрами позволяет сохранять/извлекать пары имя-значение с помощью стандартных Java-интерфейсов. При этом хранилищем параметров может быть база данных, системные свойства Java, и свойства приложения, задаваемые в файлах app.properties.</para>
      <para>Рекомендуется использовать только для хранения системных настроек, доступных администратору системы. Для хранения настроек пользователя лучше создавать отдельную сущность для их хранения и использовать стандартный эдитор для редактирования.</para>
      <para><emphasis role="bold">Использование</emphasis></para>
      <para>Для создания конфигурационного параметра необходимо:</para>
      <itemizedlist>
        <listitem>
          <para>Создать интерфейс, унаследованный от <interface>com.haulmont.cuba.core.config.Config</interface></para>
        </listitem>
        <listitem>
          <para>Создать методы доступа к параметру (getXXX/setXXX). Возможный тип параметра обсуждается ниже.</para>
        </listitem>
        <listitem>
          <para>Добавить интерфейсу аннотацию <literal>@Prefix</literal> для указания префикса имен входящих в интерфейс параметров</para>
        </listitem>
        <listitem>
          <para>Добавить интерфейсу и/или параметру аннотацию <literal>@Source</literal> для указания источника (места хранения) параметров</para>
        </listitem>
      </itemizedlist>
      <para>Например:</para>
      <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
      <para>Реализовывать интерфейс не нужно.</para>
      <para>Для получения доступа к параметрам используется интерфейс инфраструктуры <interface>Configuration</interface> или его статический фасад <interface>ConfigProvider</interface>.</para>
      <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example2.txt" encoding="UTF-8" parse="text"/></programlisting>
      <para>Стандартный UI для доступа к параметрам, хранящимся в базе данных, предоставляет МБин haulmont.cuba:service=ConfigStorage. Он содержит следующие методы:</para>
      <itemizedlist>
        <listitem>
          <para>setProperty(p1, p2) − установить параметр с именем p1 в значение p2</para>
        </listitem>
        <listitem>
          <para>getProperty(p1) − показать параметр с именем p1</para>
        </listitem>
        <listitem>
          <para>removeProperty(p1) − удалить параметр с именем p1</para>
        </listitem>
        <listitem>
          <para>printProperties(p1) − показать все параметры с фильтром на имя p1 по правилам SQL like</para>
        </listitem>
        <listitem>
          <para>printProperties − показать все параметры</para>
        </listitem>
        <listitem>
          <para>loadSystemProperties − загрузить в System.properties параметры из файла conf/system.properties</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Возможности</emphasis></para>
      <para><emphasis role="bold">Имена параметров</emphasis></para>
      <para>Имя параметра в БД или в app.properties формируется по следующему принципу:</para>
      <itemizedlist>
        <listitem>
          <para>Если на параметре есть аннотация <literal>@Property</literal>, то берется ее значение</para>
        </listitem>
        <listitem>
          <para>Иначе:</para>
          <itemizedlist>
            <listitem>
              <para>Если есть аннотация <literal>@Prefix</literal>, берется ее значение</para>
            </listitem>
            <listitem>
              <para>Если нет аннотации <literal>@Prefix</literal>, то</para>
              <itemizedlist>
                <listitem>
                  <para>Если интерфейс является внутренним, то берется полное имя включающего класса и добавляется &quot;.&quot;</para>
                </listitem>
                <listitem>
                  <para>Иначе берется полное имя пакета и добавляется &quot;.&quot;</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>Добавляется декапитализированное имя метода доступа без get/set/is (см. комментарии к методу <methodname>com.haulmont.cuba.core.config.ConfigUtil#extendedUncapitalize</methodname>)</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Источники параметров</emphasis></para>
      <para>В соответствии со значениями <classname>com.haulmont.cuba.core.config.SourceType</classname> на данный момент возможны 3 источника параметров: app.propperties, System.properties или база данных.</para>
      <para>В случае базы данных параметры хранятся в таблице <database>SYS_CONFIG</database>.</para>
      <para>Аннотация <literal>@Source</literal> может быть задана как на весь интерфейс, так и на отдельный параметр. В первом случае она определяет источник всех параметров данного интерфейса. Во втором случае она переопределяет источник для данного параметра, если он отличен от указанного для интерфейса.</para>
      <para><emphasis role="bold">Типы параметров</emphasis></para>
      <para>Без дополнительных усилий параметр может быть любого простого типа либо его объектного аналога (String, int, Integer, etc.) либо сущностью, реализующей интерфейс Entity.</para>
      <para>Для произвольного типа необходимо реализовать классы TypeStringify и TypeFactory для преобразования значения в строку и из нее, и указать эти классы для параметра с помощью аннотаций @Stringify и @Factory.</para>
      <para>Рассмотрим этот процесс на примере типа UUID.</para>
      <itemizedlist>
        <listitem>
          <para>Создаем класс com.haulmont.cuba.core.config.type.UuidTypeFactory унаследованный от com.haulmont.cuba.core.config.type.TypeFactory и реализуем в нем метод:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example3.txt" encoding="UTF-8" parse="text"/></programlisting>
        </listitem>
        <listitem>
          <para>TypeStringify создавать не нужно, т.к. по умолчанию будет использован Object.toString() − в данном случае он нам подходит.</para>
        </listitem>
        <listitem>
          <para>Аннотируем параметр:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example4.txt" encoding="UTF-8" parse="text"/></programlisting>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Значения по умолчанию</emphasis></para>
      <para>Для параметров могут быть заданы значения по умолчанию. Эти значения будут возвращаться, если данный параметр не задан (не существует в БД или в app.properties).</para>
      <para>Дефолтное значение может быть задано в виде строки с помощью аннотации @com.haulmont.cuba.core.config.defaults.Default, либо в виде конкретного типа с помощью других аннотаций пакета com.haulmont.cuba.core.config.defaults.</para>
      <para>Для сущностей дефолтное значение задается в виде имя_сущности-id-имя_представления, например</para>
      <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example5.txt" encoding="UTF-8" parse="text"/></programlisting>
      <para>имя представления необязательно.</para>
    </section>
    <section id="db_update_section">
      <title>Автоматическое обновление базы данных</title>
      <para>TODO</para>
    </section>
    <section id="email_sending_section">
      <title>Отсылка email</title>
      <para>TODO</para>
    </section>
    <section id="scheduled_tasks_section">
      <title>Выполнение задач по расписанию</title>
      <para>TODO</para>
    </section>
    <section id="runtime_properties_section">
      <title>Динамические атрибуты</title>
      <para>TODO</para>
    </section>
    <section>
      <title>Пессимистичная блокировка</title>
      <para>TODO</para>
    </section>
    <section id="audit_section">
      <title>Аудит изменений сущностей</title>
      <para>TODO</para>
    </section>
    <section id="entity_snapshots_section">
      <title>Снимки сущностей</title>
      <para>TODO</para>
    </section>
    <section id="rest_api_section">
      <title>REST API</title>
      <para>TODO</para>
    </section>
    <section>
      <title>Хранилище файлов</title>
      <para>TODO</para>
    </section>
    <section id="objects_cache_section">
      <title>Организация кэшей данных</title>
      <para>TODO</para>
    </section>
    <section>
      <title>Выполнение SQL с помощью QueryRunner</title>
      <para>TODO</para>
    </section>
    <section>
      <title>Интеграция с MyBatis</title>
      <para>TODO</para>
    </section>
    <section id="folders_pane_section">
      <title>Панель папок</title>
      <para>Папки поиска</para>
      <para>Папки данной категории могут быть созданы и настроены пользователем (за
исключением подкатегории &quot;Системные&quot;). Подкатегория &quot;Системные&quot; содержит
предустановленные папки поиска, которые доступны всем
пользователям системы.</para>
      <para>Папки поиска обладают следующими особенностями:</para>
      <itemizedlist>
        <listitem>
          <para>отображают экраны с generic-фильтром;</para>
        </listitem>
        <listitem>
          <para>создаются пользователем из любого отображенного экрана с generic-фильтром;</para>
        </listitem>
        <listitem>
          <para>пользователь может изменить иерархию, название, либо переопределить фильтр поиска. </para>
        </listitem>
      </itemizedlist>
      <para>Папки приложения</para>
      <para>Папки данной категории содержат задачи, по которым требуются
действия пользователя.</para>
      <para>Обладают следующими особенностями:</para>
      <itemizedlist>
        <listitem>
          <para>отображают предопределенные экраны с фильтром или без;</para>
        </listitem>
        <listitem>
          <para>набор папок зависит от ролей пользователя; </para>
        </listitem>
        <listitem>
          <para>пользователь не может изменить настройки папок;</para>
        </listitem>
        <listitem>
          <para>в заголовке папки может отображаться текущее количество входящих в нее записей;</para>
        </listitem>
        <listitem>
          <para>периодически обновляются по таймеру.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Инспектор сущностей</title>
      <para>TODO</para>
    </section>
    <section>
      <title>Информация об используемом ПО</title>
      <para>TODO</para>
    </section>
  </section>
  <section id="extension_section">
    <title>Расширение функциональности </title>
    <para>TODO</para>
  </section>
</chapter>
