<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><book lang="ru" id="platform">
  <bookinfo>
    <copyright>
      <year>2012</year>
      <holder>Haulmont (<ulink url="http://www.haulmont.ru/">www.haulmont.ru</ulink>)</holder>
    </copyright>
    <title>Платформа <trademark>CUBA</trademark>. Руководство программиста</title>
  </bookinfo>
  <preface lang="ru">
    <title>Предисловие</title>
    <para>В предисловии приведено краткое содержание Руководства. В нем также описаны соглашения, используемые в тексте документа, и приведены источники дополнительной информации, касающейся используемых библиотек и технологий. </para>
    <section id="appointment_id">
      <title>Назначение</title>
      <para>Данное руководство содержит информацию, необходимую для разработки <firstterm>бизнес-приложений</firstterm> на  платформе <trademark>CUBA</trademark>. Под бизнес-приложениями здесь понимается широкий спектр информационных систем, предназначенных для поддержки деятельности предприятия, управления и принятия решений. </para>
    </section>
    <section>
      <title>Целевая аудитория</title>
      <para>Данное Руководство предназначено для программистов, которые будут разрабатывать бизнес-приложения с помощью платформы <trademark>CUBA</trademark>. Для успешной работы требуется хорошее знание следующих технологий:

<itemizedlist>
          <listitem>
            <para>Java Standard Edition;</para>
          </listitem>
          <listitem>
            <para>XML/XSD;</para>
          </listitem>
          <listitem>
            <para>RDBMS (SQL, DDL).</para>
          </listitem>
        </itemizedlist></para>
      <para>Кроме того, полезным является знание следующих технологий и фреймворков:</para>
      <itemizedlist>
        <listitem>
          <para>SpringFramework 3.x (<ulink url="http://www.springsource.org">http://www.springsource.org</ulink>)</para>
        </listitem>
        <listitem>
          <para>Vaadin Framework (<ulink url="https://vaadin.com/home">https://vaadin.com/home</ulink>)</para>
        </listitem>
        <listitem>
          <para>Apache OpenJPA 2.x (<ulink url="http://openjpa.apache.org">http://openjpa.apache.org</ulink>)</para>
        </listitem>
        <listitem>
          <para>Servlets (<ulink url="http://www.oracle.com/technetwork/java/javaee/servlet/index.html">http://www.oracle.com/technetwork/java/javaee/servlet/index.html</ulink>)</para>
        </listitem>
        <listitem>
          <para>HTML/CSS/JavaScript</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Структура руководства</title>
      <para>Данное Руководство состоит из следующих глав.</para>
      <para><link linkend="chapter0_introduction">
          <emphasis role="bold">Глава 1. Введение</emphasis>
        </link></para>
      <para>Во вводной главе приводятся  сведения о возможностях платформы <trademark>CUBA</trademark>.</para>
      <para><link linkend="chapter1_setup">
          <emphasis role="bold">Глава 2. Установка и настройка инструментария</emphasis>
        </link></para>
      <para>В данной главе приводится список программного обеспечения, необходимого для создания бизнес-приложений на основе платформы <trademark>CUBA</trademark>. Приведены инструкции по установке и настройке инструментов.</para>
      <para><link linkend="chapter_quickStart">
          <emphasis role="bold">Глава 3. Быстрый старт</emphasis>
        </link></para>
      <para>В данной главе представлены основные сведения по созданию простого приложения на основе платформы. Информация изложена в краткой форме для того, чтобы Вы могли в кратчайшие сроки овладеть основами создания бизнес-приложений с помощью платформы <trademark>CUBA</trademark>.</para>
      <para><link linkend="chapter2_architecture">
          <emphasis role="bold">Глава 4. Устройство платформы</emphasis>
        </link></para>
      <para>Данная глава содержит описание архитектуры платформы, компонентов пользовательского интерфейса, а также средств интеграции со сторонними приложениями.</para>
      <para><link linkend="chapter3_development">
          <emphasis role="bold">Глава 5. Разработка приложений</emphasis>
        </link></para>
      <para>Данная глава дает практические знания, требуемые для создания приложений на основе платформы.</para>
      <para><link linkend="chapter4_deployment">
          <emphasis role="bold">Глава 6. Развертывание приложений на основе платформы</emphasis>
        </link></para>
    </section>
    <section>
      <title>Соглашения, принятые в документе</title>
      <para>Для привлечения внимания к определенной информации в данном Руководстве используется выделение текста различными шрифтами, стилями и размером.</para>
      <section>
        <title>Типографские соглашения</title>
        <para>Далее приводятся примеры выделенных слов и пояснения, в каких случаях используется то или иное оформление.</para>
        <formalpara>
          <title>Переменные среды, команды, имена объектов Java, тексты ошибок, имена файлов, пакетов</title>
          <para>Обозначены в руководстве <classname>специальным моноширинным шрифтом</classname>.</para>
        </formalpara>
        <formalpara>
          <title>Элементы интерфейса</title>
          <para>Пункты меню, названия окон, папок, закладок выделяются в тексте <guimenu>полужирным текстом</guimenu>. Кнопки выглядят следующим образом: <guibutton>Кнопка</guibutton></para>
        </formalpara>
        <formalpara>
          <title>Имена приложений, объекты базы данных, названия внешних документов</title>
          <para>Обозначаются в тексте руководства <emphasis role="bold">полужирным текстом</emphasis>.</para>
        </formalpara>
        <formalpara>
          <title>Параметры и свойства</title>
          <para><parameter>Параметры</parameter> и <property>свойства</property> также выделяются в тексте руководства.</para>
        </formalpara>
        <formalpara>
          <title>Роль пользователя</title>
          <para>Роль пользователя выделяется в тексте следующим образом: <authorinitials>Администратор</authorinitials>.</para>
        </formalpara>
      </section>
      <section>
        <title>Врезки</title>
        <para>Листинг исходного кода, а также содержимое файлов визуально отделяются от окружающего текста следующим образом:</para>
        <programlisting>[appdefaults]
autologin = true
forward = true
forwardable = true
encrypt = true </programlisting>
      </section>
      <section>
        <title>Замечания и предупреждения</title>
        <para>В тексте руководства будут встречаться сообщения,  используемые для привлечения внимания к информации. <tip>
            <title>Совет</title>
            <para>Это сообщение, содержащее информацию о способах упрощения работы.</para>
          </tip><caution>
            <title>Подсказка</title>
            <para>Это дополнительная информация к задаче или проблеме, позволяющая найти правильное решение.</para>
          </caution><warning>
            <title>Внимание</title>
            <para>Данные сообщения  акцентируют внимание на вещах, которые легко упустить из виду.</para>
          </warning></para>
      </section>
    </section>
    <section>
      <title>Дополнительные материалы</title>
      <para>Информация о создании отчетов с помощью платформы находится в <productname>Руководстве по созданию отчетов</productname>. Информацию о подсистеме безопасности платформы Вы можете посмотреть в <productname>Руководстве подсистемы безопасности платформы <trademark>CUBA</trademark></productname>.</para>
      <para>Ниже приведен список источников дополнительной информации по <application>Spring</application>, <application>Vaadin</application>, <application>ORM</application>, <application>OpenJPA</application>. </para>
      <variablelist id="text_springFramework">
        <varlistentry id="text_spring">
          <term>Информация по Spring Framework</term>
          <listitem>
            <para>Большое количество информации Вы можете найти на веб-сайте <ulink url="http://www.springsource.org/">http://www.springsource.org/</ulink></para>
            <para>Информация, на которую стоит обратить особое внимание:</para>
            <itemizedlist>
              <listitem id="text_injection_IoC">
                <para>Dependency Injection and Inversion of Control <itemizedlist>
                    <listitem>
                      <para><ulink url="http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/">http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/ html/</ulink></para>
                    </listitem>
                  </itemizedlist></para>
              </listitem>
              <listitem id="text_springAOP">
                <para>Aspect Oriented Programming <itemizedlist>
                    <listitem>
                      <para><ulink url="http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/">http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/ html/</ulink></para>
                    </listitem>
                  </itemizedlist></para>
              </listitem>
              <listitem>
                <para>Transaction Management <itemizedlist>
                    <listitem>
                      <para><ulink url="http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/">http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/ html/</ulink></para>
                    </listitem>
                  </itemizedlist></para>
              </listitem>
              <listitem>
                <para>Web services<itemizedlist>
                    <listitem>
                      <para><ulink url="http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/">http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/ html/</ulink></para>
                    </listitem>
                    <listitem>
                      <para><ulink url="http://static.springsource.org/spring-ws/sites/2.0/reference/html/index.html">http://static.springsource.org/spring-ws/sites/2.0/reference/html/index.html</ulink></para>
                    </listitem>
                  </itemizedlist></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Информация по Vaadin</term>
          <listitem>
            <para>На веб-сайте <ulink url="https://vaadin.com/home">https://vaadin.com/home</ulink> представлены подробные сведения о фреймворке <application>Vaadin</application>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Информация по ORM</term>
          <listitem>
            <para>Краткие сведения о том, что такое <firstterm>Object-relational mapping</firstterm> (ORM), Вы можете найти по следующей ссылке: <ulink url="http://ru.wikipedia.org/wiki/ORM">http://ru.wikipedia.org/wiki/ORM</ulink></para>
          </listitem>
        </varlistentry>
        <varlistentry id="text_openJPA">
          <term>Информация по OpenJPA</term>
          <listitem>
            <para>Веб-сайт <ulink url="http://openjpa.apache.org/">http://openjpa.apache.org/</ulink> также содержит информацию, которая может быть полезна для Вас.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Онлайн документация</term>
          <listitem>
            <para>Настоящее Руководство, а также другие Руководства, упомянутые далее, доступны по адресу <ulink url="http://docs.haulmont.com/cuba/">http://docs.haulmont.com/cuba/</ulink></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section>
      <title>Обратная связь</title>
      <para>Если Вы нашли ошибку в платформе, или у Вас появились вопросы, ответы на которые отсутствуют в данном Руководстве, пожалуйста, обратитесь в службу поддержки по электронной почте <email>name@haulmont.com</email>. В теме письма укажите</para>
      <para><code>PlatformDocumentation</code></para>
      <para>Если у Вас есть предложения по улучшению данного руководства, постарайтесь сформулировать их как можно точнее. Если Вы обнаружили ошибку, укажите, пожалуйста, номер главы и приведите небольшой участок окружающего текста для облегчения поиска. </para>
    </section>
  </preface>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="chapter0.xml" encoding="UTF-8"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="chapter1.xml" encoding="UTF-8"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="chapter_quick_start.xml" encoding="UTF-8"/>
  <chapter xmlns="" lang="ru" id="chapter2_architecture">
    <title>Устройство платформы</title>
    <para>В данной главе описываются различные аспекты архитектуры платформы <trademark>CUBA</trademark> и приложений на ее основе.</para>
    <section>
      <title>Структура CUBA-приложения</title>
      <para>На диаграмме ниже приведена структура развернутого приложения, созданного на базе платформы. </para>
      <figure>
        <title>Структура CUBA-приложения</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/DeploymentStructure.png" contentwidth="80%"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>В приведенном варианте приложение обеспечивает отсутствие единой точки отказа, балансировку нагрузки и подключение различных типов клиентов. В простейшем случае приложение может быть развернуто на одном сервере, в том числе, содержащем и базу данных. Стрелками изображено направление запросов &quot;от пользователя к данным&quot;.</para>
      <para>Приложение, основанное на платформе, физически состоит из нескольких <firstterm>уровней</firstterm> (tiers):</para>
      <variablelist>
        <varlistentry>
          <term>Middleware</term>
          <listitem>
            <para>Средний слой, содержащий основную бизнес-логику приложения. Представляет собой отдельное веб-приложение под управлением стандартного контейнера <glossterm linkend="glossary_java_web_profile">Java EE Web Profile</glossterm>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Web Client</term>
          <listitem>
            <para>Основной клиентский уровень, как правило, содержащий полнофункциональный интерфейс для Intranet-пользователей. Представляет собой отдельное веб-приложение под управлением стандартного контейнера <glossterm linkend="glossary_java_web_profile">Java EE Web Profile</glossterm>. Реализация пользовательского интерфейса основана на фреймворке <glossterm linkend="glossary_vaadin">Vaadin</glossterm>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Web Portal</term>
          <listitem>
            <para>Дополнительный клиентский уровень, содержащий интерфейс для внешних (Internet) пользователей. Может использоваться для интеграции с мобильными устройствами или сторонними приложениями. Представляет собой отдельное веб-приложение под управлением стандартного контейнера <glossterm linkend="glossary_java_web_profile">Java EE Web Profile</glossterm>. Реализация пользовательского интерфейса основана на фреймворке <link linkend="text_spring">Spring</link> MVC.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Desktop Client</term>
          <listitem>
            <para>Дополнительный клиентский уровень, содержащий интерфейс для Intranet-пользователей. Представляет собой десктопное Java-приложение, реализация пользовательского интерфейса основана на фреймворке <glossterm linkend="glossary_swing">Java Swing</glossterm>.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para><emphasis role="bold">REST API</emphasis> − компонент <link linkend="section_middleware_id">среднего слоя (Middleware)</link>, обеспечивающий интеграцию системы со сторонними приложениями.</para>
      <para>Физически CUBA-приложение всегда состоит как минимум из двух частей:</para>
      <itemizedlist>
        <listitem>
          <para>Веб-приложения <link linkend="section_middleware_id">среднего слоя (Middleware)</link></para>
        </listitem>
        <listitem>
          <para>Веб-приложения веб-клиента (Web Client)</para>
        </listitem>
      </itemizedlist>
      <para>Оба этих веб-приложения  могут быть развернуты на любом веб-сервере <application>Java</application>. По умолчанию используется <application>Apache Tomcat</application>. </para>
      <para>Веб и десктоп клиенты взаимодействуют со средним слоем одинаковым образом посредством протокола <application>HTTP</application>, что позволяет размещать средний слой произвольным образом, в том числе за сетевым экраном. Следует отметить, что при развертывании в простейшем случае среднего слоя и веб-клиента на одном сервере между ними организуется локальное взаимодействие в обход сетевого стека для снижения накладных расходов.</para>
    </section>
    <section>
      <title>Структура проекта</title>
      <para id="text_module_id">Функционально проект приложения содержит зависимости от <firstterm>проектов</firstterm>, входящих в состав платформы. Проект − это структурная единица, содержащая программный код. Каждый проект имеет определенное предназначение. Диаграмма зависимостей проектов платформы изображена на рисунке.</para>
      <figure>
        <title>Диаграмма зависимостей проектов платформы</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/projectStructure.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Сплошными линиями изображены обязательные зависимости, пунктирными − опциональные.</para>
      <para>Рассмотрим проекты платформы более подробно.</para>
      <para><emphasis role="bold">Проект cuba</emphasis></para>
      <para>Это базовый проект, обязательная часть любого приложения.  Содержит функциональность для работы с базой данных, набор <link linkend="section_services_id">сервисов (Services)</link> <link linkend="section_middleware_id">среднего слоя (Middleware)</link>, <link linkend="section_gui_framework">фреймворк графического интерфейса пользователя (Generic User Interface Framework)</link>, функциональность управления пользователями и их доступом к данным <footnote>
          <para>Описание функциональности управления пользователями и их доступом к данным содержится в <productname>Руководстве подсистемы безопасности платформы <trademark>CUBA</trademark></productname></para>
        </footnote>. Данный проект может быть собран как полноценное независимое приложение.</para>
      <para><emphasis role="bold">Проект workflow</emphasis></para>
      <para>Опциональный проект для работы с <glossterm linkend="glossary_process_id">бизнес-процессами</glossterm>.</para>
      <para><emphasis role="bold">Проект fts</emphasis></para>
      <para>Опциональный проект  <link linkend="section_fts">полнотекстового поиска</link>.</para>
      <para><emphasis role="bold">Проект charts</emphasis></para>
      <para>Опциональный проект для <link linkend="section_charts">отображения диаграмм</link> в веб-клиенте.</para>
      <para><emphasis role="bold">Проект ccpayments</emphasis></para>
      <para>Опциональный проект для <link linkend="section_ccpayments">приема платежей по картам</link>.</para>
      <para><emphasis role="bold">Проект reports</emphasis></para>
      <para>Опциональный проект подсистемы генерации отчетов<footnote>
          <para>Информация о создании отчетов с помощью платформы находится в <productname>Руководстве по созданию отчетов</productname></para>
        </footnote>.</para>
    </section>
    <section id="section_structure_folders_files">
      <title>Структура и назначение каталогов и файлов проекта</title>
      <para>Рассмотрим структуру классов и других файлов в проекте.</para>
      <para>В корне проекта расположены скрипты сборки <filename>build.gradle</filename>, <filename>settings.gradle</filename> и проектные файлы <application>IntelliJ IDEA</application>.</para>
      <para id="text_module_id">В каталоге <filename>modules</filename> расположены подкаталоги <firstterm id="text_modules">модулей</firstterm> проекта − <structname>global</structname>, <structname>core</structname>, <structname>gui</structname>, <structname>web</structname>. Модуль – это элемент проекта, в котором хранится программный код.</para>
      <itemizedlist>
        <listitem>
          <para><structname>global</structname></para>
        </listitem>
        <listitem>
          <para><structname>core</structname></para>
        </listitem>
        <listitem>
          <para><structname>gui</structname></para>
        </listitem>
        <listitem>
          <para><structname>client</structname></para>
        </listitem>
        <listitem>
          <para><structname>web</structname></para>
        </listitem>
        <listitem>
          <para><structname>web-portal</structname></para>
        </listitem>
        <listitem>
          <para><structname>desktop</structname></para>
        </listitem>
      </itemizedlist>
      <para>Модуль <structname>global</structname> определяет компоненты, доступные как <link linkend="section_middleware_id">среднему слою (Middleware)</link>, так и <link linkend="section_client_id">клиентскому коду</link>.</para>
      <itemizedlist>
        <listitem>
          <para>В пакете <package>com.haulmont.shop.core.app</package> создаются интерфейсы <link linkend="section_services_id">сервисов</link> <link linkend="section_middleware_id"> среднего слоя (Middleware)</link>. </para>
        </listitem>
        <listitem>
          <para>В пакете <package>com.haulmont.shop.core.entity</package> создаются классы <glossterm linkend="glossary_entity">сущностей</glossterm> и <glossterm linkend="glossary_localized_folders_id">файлы локализованных сообщений</glossterm>  <filename>messages.properties</filename> для задания названий сущностей и их атрибутов.</para>
        </listitem>
        <listitem>
          <para>В файле <filename>shop-persistence.xml</filename>  регистрируются новые классы сущностей.</para>
        </listitem>
        <listitem>
          <para>В файле <filename>shop-metadata.xml</filename>  может быть задано <link linkend="section_extending_funct">замещение</link> стандартных сущностей новыми.</para>
        </listitem>
      </itemizedlist>
      <figure>
        <title>Структура каталогов и файлов проекта</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/ch2_structure.png" contentwidth="55%"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Модуль <structname>core</structname> определяет компоненты <link linkend="section_middleware_id">среднего слоя (Middleware)</link> системы.</para>
      <itemizedlist>
        <listitem>
          <para>Каталог <filename>db</filename> содержит sql-скрипты создания и <link linkend="section_database_update">изменения</link> базы данных в подкаталогах <filename>init</filename> и <filename>update</filename> соответственно.</para>
        </listitem>
        <listitem>
          <para>В пакете <package>com.haulmont.shop.core.app</package> создаются классы реализации <link linkend="section_services_id">сервисов (Services)</link><link linkend="section_middleware_id"> среднего слоя (Middleware)</link>, а также другие компоненты бизнес-логики приложения.</para>
        </listitem>
        <listitem>
          <para>Файл <filename>shop-app.properties</filename> содержит <glossterm linkend="glossary_conf_parameter_id">конфигурационные параметры</glossterm> среднего слоя:</para>
          <para><parameter>cuba.springContextConfig</parameter> − определяет набор конфигурационных файлов <link linkend="text_spring">Spring</link>-фреймворка;</para>
          <para><parameter>cuba.persistenceConfig</parameter> − определяет набор конфигурационных файлов <link linkend="text_additionally_ORM">ORM</link>;</para>
          <para><parameter>cuba.viewsConfig</parameter> − задает набор конфигурационных файлов <link linkend="section_views_id">представлений</link>;</para>
        </listitem>
        <listitem>
          <para>В файле <filename>shop-spring.xml</filename> при необходимости можно подменить реализацию стандартных сервисов или других управляемых фреймворком <link linkend="text_additionally_spring">Spring</link> компонентов, а также зарегистрировать создаваемые <glossterm linkend="glossary_jmx_id">JMX</glossterm>-компоненты.</para>
        </listitem>
        <listitem>
          <para>Файл <filename>shop-views.xml</filename> содержит описание <link linkend="section_views_id">представлений</link>. Механизм представлений  обеспечивает извлечение из БД и передачу клиенту графов сущностей, ограниченных в глубину и/или по атрибутам.</para>
        </listitem>
        <listitem>
          <para>Файл <filename>web\META-INF\context.xml</filename> содержит настройки подключения к базе данных.</para>
        </listitem>
        <listitem>
          <para>Файл <filename>web\WEB-INF\web.xml</filename> − это дескриптор веб-приложения <link linkend="section_middleware_id">среднего слоя (Middleware)</link>. Среди прочего содержит список <glossterm linkend="glossary_app_properties_id">конфигурационных файлов</glossterm> <filename>*-app.properties</filename>, используемых данным приложением.</para>
        </listitem>
      </itemizedlist>
      <para>Модуль <structname>gui</structname> определяет компоненты <link linkend="section_gui_framework">графического пользовательского интерфейса</link>. Этот модуль доступен всем типам клиентов. Модуль <structname>gui</structname> содержит универсальные экраны: классы <glossterm linkend="glossary_controller_id">контроллеров</glossterm>, <glossterm linkend="glossary_xml_descriptor_id">XML-дескрипторы</glossterm> экранов, файлы <glossterm linkend="glossary_localized_folders_id">локализованных сообщений</glossterm>.</para>
      <itemizedlist>
        <listitem>
          <para>В пакете <package>com.haulmont.shop.gui.ui</package> создаются экраны приложения.</para>
        </listitem>
        <listitem>
          <para>В файле <filename>shop-screens.xml</filename> регистрируются экраны приложения.</para>
        </listitem>
      </itemizedlist>
      <para>Модуль <structname>web</structname> определяет компоненты веб-клиента. Зависит от модулей <structname>gui</structname> и <structname>global</structname>. Содержит специфические экраны и/или <glossterm>компаньоны</glossterm> и файлы конфигурации.</para>
      <itemizedlist>
        <listitem>
          <para>Класс  <classname>com.haulmont.shop.App.java</classname> определяет главное окно приложения.</para>
        </listitem>
        <listitem>
          <para>Файл <filename>shop-web-app.properties</filename> содержит конфигурационные параметры веб-клиента:</para>
          <para><parameter>cuba.windowConfig</parameter> − в этом свойстве указывается набор файлов конфигурации экранов приложения;</para>
          <para><parameter>cuba.menuConfig</parameter> содержит список файлов, описывающих меню приложения;</para>
          <para><parameter>cuba.appConfig.messagesPack</parameter>  задает список имен <glossterm linkend="glossary_localized_folders_id">пакетов сообщений</glossterm>, формирующих <glossterm linkend="glossary_main_localized_folder_id">главный пакет</glossterm>, используемый главным меню и другими общими компонентами системы;</para>
        </listitem>
        <listitem>
          <para>Файл <filename>shop-web-menu.xml</filename> содержит описание пунктов главного меню приложения.</para>
        </listitem>
        <listitem>
          <para>В файле <filename>shop-web-screens.xml</filename> регистрируются экраны приложения.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Описание основных gradle tasks</title>
      <para>TODO</para>
    </section>
    <section id="section_middleware_id">
      <title>Архитектура среднего слоя</title>
      <para>На следующем рисунке приведены основные компоненты среднего слоя CUBA-приложения.</para>
      <figure>
        <title>Архитектура среднего слоя</title>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/Middleware.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Компоненты сгруппированы по двум <link linkend="text_modules">модулям</link>: <structname>core</structname> и <structname>global</structname>. В <structname>global</structname> расположены компоненты, доступные как коду <link linkend="section_middleware_id">Middleware</link>, так и <link linkend="section_client_id">клиентскому коду</link>. В <structname>core</structname> расположены компоненты ядра <link linkend="section_middleware_id">Middleware</link>.</para>
      <para>Рассмотрим элементы диаграммы более подробно.</para>
      <para><link linkend="section_services_id">Services</link> – управляемые <glossterm linkend="glossary_conteiner_id">контейнером</glossterm> компоненты, формирующие <glossterm linkend="glossary_app_boundary_id">границу приложения</glossterm> и предоставляющие интерфейс клиентам <link linkend="section_middleware_id">Middleware</link>. Сервисы могут содержать бизнес-логику сами, либо делегировать выполнение <link linkend="section_managed_beans_id">Managed Beans</link>.</para>
      <para><link linkend="section_managed_beans_id">Managed Beans</link> – управляемые <glossterm linkend="glossary_conteiner_id">контейнером</glossterm> компоненты, содержащие бизнес-логику приложения. Вызываются <link linkend="section_services_id">сервисами</link>, другими бинами или через опциональный <glossterm linkend="glossary_jmx_id">JMX</glossterm> интерфейс.</para>
      <para>Entity Classes – классы, моделирующие предметную область приложения.  Представляют собой аннотированные <glossterm linkend="glossary_pojo_id">POJO</glossterm>. Аннотации используются для задания соответствий между столбцами таблицы базы данных и полями объектов с помощью <link linkend="text_additionally_JPA">OpenJPA</link>, а также для формирования метаданных в <link linkend="section_metadata_framework">Metadata Framework</link>.</para>
      <para><emphasis role="bold">Persistence</emphasis> −  центральный интерфейс для доступа к функциональности хранения данных. Позволяет получать ссылки на интерфейсы <classname>EntityManager</classname> и <classname>Transaction</classname>.</para>
      <para><emphasis role="bold">Transaction</emphasis> − интерфейс управления <link linkend="section_transaction_id">транзакциями</link> <link linkend="section_middleware_id">Middleware</link>.</para>
      <para><emphasis role="bold">Entity Manager</emphasis> − интерфейс для работы с данными на уровне <link linkend="section_middleware_id">Middleware</link>. Позволяет извлекать <glossterm linkend="glossary_entity">сущности</glossterm> из базы данных по идентификатору и по запросу, а также сохранять и удалять их.</para>
      <para><link linkend="section_metadata_framework">Metadata Framework</link> позволяет создавать описание предметной области в терминах классов, атрибутов и отношений между классами. Метаданные (модель данных) существенно упрощают создание универсальных механизмов работы с данными. Исходной информацией для построения модели являются аннотированные классы сущностей.</para>
      <para><link linkend="section_infrastructure_interfaces_id">Global Infrastructure Interfaces</link> (интерфейсы инфраструктуры) предоставляют доступ к общей часто используемой функциональности. Реализованы в платформе аналогично <link linkend="section_managed_beans_id">Managed Beans</link>.

Все интерфейсы инфраструктуры имеют соответствующие <firstterm>статические фасады</firstterm> − классы со статическими методами, позволяющие иметь доступ к нужной функциональности из статического контекста (при невозможности использовать <link>dependency injection</link>). Статические фасады имеют имена, заканчивающиеся на <classname>*Provider</classname>.</para>
      <para><link linkend="text_additionally_spring">Spring Framework</link> − основа среднего слоя. Используются следующие возможности <link linkend="text_additionally_spring">Spring</link> Framework: </para>
      <itemizedlist>
        <listitem>
          <para>Инверсия управления (IoC container)</para>
        </listitem>
        <listitem>
          <para>Аспектно-ориентированное программирование (AOP)</para>
        </listitem>
        <listitem>
          <para>Управление транзакциями</para>
        </listitem>
        <listitem>
          <para>Remoting − доступ к сервисам среднего слоя по протоколу HTTP</para>
        </listitem>
        <listitem>
          <para>Реализация веб-сервисов и <link>REST API</link></para>
        </listitem>
      </itemizedlist>
      <para><link linkend="text_additionally_JPA">OpenJPA Framework</link> − реализация <link linkend="text_additionally_ORM">ORM</link> по стандарту JPA. Позволяет работать с таблицами базы данных как с объектами Java и создавать запросы на языке <link>JPQL</link>.</para>
      <section id="section_services_id">
        <title>Сервисы</title>
        <para>Сервисы представляют собой слой  компонентов, формирующих <glossterm linkend="glossary_app_boundary_id">границу приложения</glossterm>. Сервисы определяют множество операций, предоставляемых ими для интерфейсных клиентских слоев кода. Сервисы инкапсулируют бизнес-логику приложения, управляют транзакциями и координируют реакции на действия.</para>
        <para>Основные задачи сервисов:</para>
        <itemizedlist>
          <listitem>
            <para>Обеспечить выполнение каждого метода в отдельной <link linkend="section_transaction_id">транзакции</link>. </para>
          </listitem>
          <listitem>
            <para>Обеспечивать запись исключений в журнал.</para>
          </listitem>
          <listitem>
            <para>Обеспечивать <firstterm>отказоустойчивость</firstterm> (failover) в <link linkend="section_cluster_middleware">кластере</link>  для удаленных клиентов.</para>
          </listitem>
          <listitem>
            <para>В бизнес-методах сервисов могут проверяться права пользователя на доступ к данным</para>
          </listitem>
        </itemizedlist>
        <para>Диаграмма классов, входящих в состав сервиса:</para>
        <figure>
          <title>Диаграмма классов, входящих в состав сервиса</title>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/MiddlewareServices.png" contentwidth="80%"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>Каждый вызов сервиса перехватывается с помощью <link linkend="text_additionally_spring">Spring AOP</link>  и обрамляется вызовом <classname>ServiceInterceptor.aroundInvoke()</classname>.</para>
        <para>Подробная информация о создании сервисов содержится в главе <xref linkend="section_services_realization" xrefstyle="select: labelnumber title"/> </para>
      </section>
      <section id="section_managed_beans_id">
        <title>Управляемые бины</title>
        <para><firstterm>Управляемые бины (Managed Beans)</firstterm> − это программные компоненты, реализующие бизнес-логику приложения и создаваемые в соответствии с принципами <link linkend="text_injection_IoC">Inversion of Control</link>. <glossterm linkend="glossary_conteiner_id">Контейнером</glossterm> для бинов служит <link linkend="text_springFramework">Spring Framework.</link></para>
        <para>Managed Bean представляет собой <firstterm>singleton</firstterm>, то есть всегда используется один экземпляр данного класса. Соответственно, если создаваемый Вами бин содержит изменяемые данные в полях (имеет состояние), то необходимо синхронизировать обращение к таким данным.</para>
        <para>В простейшем случае Managed Bean может быть просто Java-классом, аннотированным как <literal>@ManagedBean</literal>. Однако рекомендуется придерживаться  правил создания бинов, содержащихся в главе <xref linkend="section_managed_beans_realization" xrefstyle="select: labelnumber title"/></para>
      </section>
      <section id="section_MBean_id">
        <title>Мбины</title>
        <para><firstterm>МБин</firstterm> − программный компонент, реализующий бизнес-логику, и имеющий <glossterm linkend="glossary_jmx_id">JMX</glossterm>-интерфейс. Как правило, имеет внутреннее состояние (например, кэш, конфигурационные данные или статистику), к которому нужно обеспечить доступ через JMX.</para>
        <para>МБин является расширенным вариантом <link linkend="section_managed_beans_id">управляемого бина</link>.</para>
        <figure>
          <title/>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/MBeans.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>Как видно из диаграммы, МБин имеет два набора методов, разделенных по интерфейсам <interfacename>...MBean</interfacename> и <interfacename>...API</interfacename>. Первый из них служит для управления через JMX, а второй − для вызова из программного кода.</para>
        <para>Вызовы JMX-интерфейса МБина перехватываются специальным классом − <glossterm linkend="glossary_interceptor_id">интерцептором</glossterm> <methodname>MBeanInterceptor.aroundInvoke()</methodname> (с помощью <link linkend="text_springAOP">Spring AOP</link>), который обеспечивает журналирование неперехваченных исключений и установку правильного контекстного <classname>ClassLoader</classname>.</para>
        <para>Информация о том, как создать Мбин, содержится в главе <xref linkend="section_mbeans_realization" xrefstyle="select: labelnumber title"/></para>
      </section>
      <section id="section_infrastructure_interfaces_id">
        <title>Интерфейсы инфраструктуры</title>
        <para>Интерфейсы инфраструктуры обеспечивают доступ к часто используемой функциональности платформы. Некоторые из этих интерфейсов расположены в модуле <structname>global</structname> и могут быть использованы как из <link linkend="section_middleware_id">среднего слоя (Middleware)</link>, так и из любого клиентского кода, другие доступны только коду среднего слоя.</para>
        <para>Интерфейсы инфраструктуры реализуются управляемыми компонентами <link linkend="text_springFramework">Spring</link>, поэтому зависимости от интерфейсов могут быть <glossterm linkend="glossary_injection_id">внедрены</glossterm> в любые другие управляемые компоненты (<link linkend="section_managed_beans_id">управляемые бины (Managed Beans)</link>, <link linkend="section_services_id">сервисы среднего слоя (MiddlewareServices)</link>, <glossterm linkend="glossary_controller_id">контроллеры</glossterm> экранов (Screen Controllers)).</para>
        <para>Все интерфейсы инфраструктуры имеют соответствующие &quot;статические фасады&quot;, которые называются <firstterm>провайдерами</firstterm>, и могут быть использованы в неуправляемых компонентах (<glossterm linkend="glossary_pojo_id">POJO</glossterm>, вспомогательных классах и так далее).</para>
        <para><emphasis role="bold">Глобальные интерфейсы инфраструктуры</emphasis></para>
        <simpara><emphasis role="bold">TimeSource</emphasis>. Обеспечивает получение текущего времени. Применение <classname>new Date()</classname> и т.п. запрещено. Статический фасад − <classname>TimeProvider</classname>.</simpara>
        <simpara><emphasis role="bold">UuidSource</emphasis>. Обеспечивает получение значений <classname>UUID</classname>, в том числе для идентификаторов сущностей. Статический фасад − <classname>UuidProvider</classname>.</simpara>
        <simpara><emphasis role="bold">UserSessionSource</emphasis>. Обеспечивает получение объекта сессии текущего пользователя. Статический фасад − <classname>UserSessionProvider</classname>.</simpara>
        <simpara><emphasis role="bold">Security</emphasis>. Содержит методы проверки прав текущего пользователя. Не имеет соответствующего статического фасада. При необходимости в статическом контексте можно получить через <classname>UserSessionProvider</classname> объект пользовательской сессии и вызвать соответствующие методы у него.</simpara>
        <simpara><emphasis role="bold">Metadata</emphasis>. Обеспечивает доступ к сессии <link linkend="section_metadata_framework">метаданных</link> и ViewRepository. Статический фасад − <classname>MetadataProvider</classname>.</simpara>
        <simpara><emphasis role="bold">Messages</emphasis>. Интерфейс <interface>Messages</interface> обеспечивает получение локализованных строк сообщений. Статический фасад − <classname>MessageProvider</classname>.</simpara>
        <simpara><emphasis role="bold">Configuration</emphasis>. Является фасадом к фреймворку работы с конфигурационными параметрами. Статический фасад − <classname>ConfigProvider</classname>.</simpara>
        <simpara><emphasis role="bold">Resources</emphasis>. Обеспечивает загрузку ресурсов из конфигурационного каталога приложения или из <code>classpath</code>, а также по явно указанному URL.</simpara>
        <simpara><emphasis role="bold">Scripting</emphasis>. Интерфейс <interface>Scripting</interface> обеспечивает возможность динамической компиляции и выполнения прикладного кода на Groovy и Java. Статический фасад − <interface>ScriptingProvider</interface>.</simpara>
        <para><emphasis role="bold">Интерфейсы инфраструктуры среднего слоя</emphasis></para>
        <simpara><emphasis role="bold">Persistence</emphasis>. Обеспечивает доступ к интерфейсам <interface>Transaction</interface>, <interface>EntityManager</interface>, и некоторые сервисные функции, относящиеся к хранению данных. Статический фасад − <classname>PersistenceProvider</classname>.</simpara>
        <section id="section_scripting">
          <title>Scripting</title>
          <para><interfacename>Scripting</interfacename> − глобальный интерфейс инфраструктуры, решающий следующие задачи:</para>
          <itemizedlist>
            <listitem>
              <para>Выполнение выражений и скриптов Groovy</para>
            </listitem>
            <listitem>
              <para>Компиляция и загрузка классов Groovy</para>
            </listitem>
            <listitem>
              <para>Компиляция и загрузка классов Java, поставляемых в исходниках в каталоге конфигурации приложения conf</para>
            </listitem>
            <listitem>
              <para>Загрузка ресурсов из каталога конфигурации приложения conf или из classpath.</para>
            </listitem>
          </itemizedlist>
          <para>Общий принцип действия таков: если запрашиваемый класс или ресурс имеется в каталоге conf, будет использован он, в противном случае будет произведен поиск по данному пути в classpath. Это дает возможность в production или в процессе разработки динамически подменять и дополнять приложение нужными классами и ресурсами.</para>
          <para><emphasis role="bold">Выполнение выражений (evaluate)</emphasis></para>
          <para><emphasis role="bold">Выполнение скриптов</emphasis><itemizedlist>
              <listitem>
                <para>При инициализации приложения могут быть заданы классы для импорта, автоматически добавляемые всем выражениям.</para>
              </listitem>
              <listitem>
                <para>Скомпилированные выражения сохраняются в кэше, что значительно ускоряет повторное выполнение.</para>
              </listitem>
            </itemizedlist></para>
          <para>Запуск скриптов выполняется методом runGroovyScript(). Имя скрипта должно содержать путь с корнем в conf (каталог конфигурации приложения).</para>
        </section>
      </section>
      <section id="section_orm">
        <title>ORM</title>
        <para>ORM (англ. <firstterm>Object-relational mapping</firstterm>, рус. <firstterm>Объектно-реляционное отображение</firstterm>) − технология программирования, которая связывает базы данных с концепциями объектно-ориентированных языков программирования, создавая «виртуальную объектную базу данных» (<ulink url="http://ru.wikipedia.org/wiki/ORM">http://ru.wikipedia.org/wiki/ORM</ulink>). </para>
        <variablelist>
          <varlistentry>
            <term>Преимущества</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>Позволяет работать с  данными реляционной СУБД, манипулируя простыми объектами Java (<glossterm linkend="glossary_pojo_id">POJO</glossterm>)</para>
                </listitem>
                <listitem>
                  <para>Упрощает программирование, избавляя от рутины написания тривиальных SQL-запросов</para>
                </listitem>
                <listitem>
                  <para>Упрощает программирование, позволяя извлекать и сохранять целые графы объектов одной командой</para>
                </listitem>
                <listitem>
                  <para>Обеспечивает легкое портирование приложения на различные СУБД</para>
                </listitem>
                <listitem>
                  <para>Использует лаконичный язык запросов <glossterm linkend="glossary_jpql">JPQL</glossterm></para>
                </listitem>
                <listitem>
                  <para>Оптимизирует количество выполняемых SQL-запросов на команды insert и update</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Недостатки</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>Требует понимания особенностей работы с ORM</para>
                </listitem>
                <listitem>
                  <para>Не позволяет напрямую оптимизировать SQL или использовать особенности СУБД, что приводит к снижению производительности</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Реализация</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>JPA – Java Persistence API</para>
                </listitem>
                <listitem>
                  <para><link linkend="text_openJPA">OpenJPA</link> – фреймворк, реализующий JPA.  На данный момент в платформе используется версия 2.x.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <title>ORM – основные понятия</title>
          <varlistentry>
            <term>Entity</term>
            <listitem>
              <para><glossterm linkend="glossary_annotation">Аннотированный</glossterm> <glossterm linkend="glossary_pojo_id">POJO</glossterm>. Обычно соответствует таблице СУБД.</para>
            </listitem>
          </varlistentry>
          <varlistentry id="text_entityManager">
            <term>EntityManager</term>
            <listitem>
              <para>Интерфейс для управления <glossterm linkend="glossary_entity">сущностями</glossterm>.
Его можно получить с помощью   вызова метода  <classname>PersistenceProvider.getEntityManager()</classname>.
Экземпляр <classname>EntityManager</classname> всегда привязан к одной <link linkend="section_transaction_id">транзакции</link>. Более того, все вызовы <classname>PersistenceProvider.getEntityManager()</classname> в рамках одной транзакции возвращают один и тот же экземпляр <classname>EntityManager</classname>. После завершения транзакции обращения к данному экземпляру невозможны.
Экземпляр <classname>EntityManager</classname> содержит в себе &quot;персистентный контекст&quot; – набор экземпляров сущностей, загруженных из БД или только что созданных. Персистентный контекст является кэшем данных в рамках данной транзакции.
<classname>EntityManager</classname> автоматически сбрасывает в БД все изменения, сделанные в своем персистентном контексте, в момент коммита транзакции, либо явным вызовом метода  <classname>flush()</classname>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Enhancing</term>
            <listitem>
              <para>Модификация байт-кода классов сущностей для обеспечения возможности работы ORM. 
Производится в момент сборки проекта.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <title>ORM – жизненный цикл сущности</title>
          <varlistentry>
            <term>New</term>
            <listitem>
              <para>Только что созданный экземпляр, например: <classname>Car car = new Car()</classname>;
может быть передан в <methodname>EntityManager.persist()</methodname> для сохранения в БД. При этом переходит в состояние <firstterm>Managed</firstterm></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Managed</term>
            <listitem>
              <para>Загруженный из БД или новый, переданный в <methodname>EntityManager.persist()</methodname>, экземпляр; 
принадлежит некоторому экземпляру <classname>EntityManager</classname>, другими словами, находится в его персистентном контексте;
любые изменения  экземпляра в состоянии <firstterm>Managed</firstterm> будут сохранены в БД в случае коммита транзакции, к которой принадлежит данный <classname>EntityManager</classname></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Detached</term>
            <listitem>
              <para>Экземпляр, загруженный из БД и отсоединенный от своего персистентного контекста (вследствие закрытия транзакции или сериализации);
изменения, вносимые в <firstterm>Detached</firstterm> экземпляр, запоминаются в самом этом экземпляре (с помощью полей, добавленных с помощью Enhancing);
изменения в <firstterm>Detached</firstterm> экземпляре будут сохранены в БД, только если он будет снова переведен в состояние <firstterm>Managed</firstterm> путем передачи в метод <methodname>EntityManager.merge()</methodname>; <methodname>EntityManager.merge()</methodname> выполняет следующее – загружает из БД экземпляр с тем же идентификатором, переносит в него состояние переданного <firstterm>Detached</firstterm> экземпляра и возвращает загруженный <firstterm>Managed</firstterm> экземпляр. Далее надо работать именно с возвращенным <firstterm>Managed</firstterm> экземпляром!</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <itemizedlist>
          <title>ORM – загрузка по требованию</title>
          <listitem>
            <para>Позволяет загружать связанные сущности по требованию, т.е. только в момент первого обращения к их свойствам</para>
          </listitem>
          <listitem>
            <para>Работает только для экземпляра в состоянии <firstterm>Managed</firstterm>, то есть внутри транзакции, загрузившей данный экземпляр</para>
          </listitem>
          <listitem>
            <para>Загрузка по требованию (lazy loading)  в сумме порождает больше запросов к БД, чем <glossterm linkend="glossary_eagerFetching">энергичная загрузка (Eager Fetching)</glossterm>, однако нагрузка при этом растянута во времени</para>
            <itemizedlist>
              <listitem>
                <para>Например, при извлечении списка N экземпляров сущности A, содержащих ссылку на экземпляр сущности B, в случае загрузки по требованию будет выполнено N+1 запросов к БД.</para>
              </listitem>
              <listitem>
                <para>Для минимизации времени отклика и снижения нагрузки необходимо стремиться к меньшему количеству обращений к БД. Для этого  в платформе  используется механизм <glossterm linkend="glossary_view_ru_id">представлений</glossterm>, с помощью которого в вышеописанном случае ORM сформирует один  запрос к БД с объединением таблиц.</para>
              </listitem>
              <listitem>
                <para>Если A содержит коллекцию B, в случае энергичной загрузки  ORM сформирует SQL запрос, возвращающий произведение строк A и B. </para>
              </listitem>
              <listitem>
                <para>Иногда загрузка по требованию с точки зрения производительности предпочтительнее, чем энергичная загрузка. Например, когда работает асинхронный процесс, выполняющий некоторую бизнес-логику, общее время выполнения некритично и желательно распределить во времени  нагрузку на БД.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </section>
      <section id="section_metadata_framework">
        <title>Metadata Framework</title>
        <para>Metadata Framework позволяет создавать описание предметной области в терминах метаданных.</para>
        <figure>
          <title>Структура метаданных</title>
          <mediaobject>
            <imageobject>
              <imagedata align="center" fileref="img/Metadata Framework.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <itemizedlist>
          <title>Назначение метаданных</title>
          <listitem>
            <para>Предоставляют удобный интерфейс для получения информации о <glossterm linkend="glossary_entity">сущностях</glossterm>, атрибутах и отношениях между сущностями; для навигации по ссылкам</para>
          </listitem>
          <listitem>
            <para>Служат более удобной в использовании и более функциональной альтернативой <application>Java Reflection</application></para>
          </listitem>
          <listitem>
            <para>Регламентируют допустимые типы данных и отношений между сущностями</para>
          </listitem>
          <listitem>
            <para>Позволяют создавать универсальные механизмы работы с данными</para>
          </listitem>
        </itemizedlist>
        <para>Основными объектами метаданных являются <classname>MetaClass</classname> и <classname>MetaProperty</classname>.</para>
        <variablelist>
          <varlistentry>
            <term>MetaClass</term>
            <listitem>
              <para><classname>MetaClass</classname> описывает класс сущности. Он имеет уникальное имя и методы для получения списка атрибутов, а также классов предков и наследников.</para>
              <para><classname>MetaClass</classname> всегда ассоциирован с Java-классом, которого он представляет.</para>
              <itemizedlist>
                <listitem>
                  <para><property>name</property> – имя, по соглашению первой частью имени до знака <code>$</code> является <code>namespace</code>, например, <classname>sec$User</classname></para>
                </listitem>
                <listitem>
                  <para><property>properties</property> – список объектов <classname>MetaProperty</classname>, описывающих атрибуты объекта</para>
                </listitem>
                <listitem>
                  <para><property>javaClass</property> – класс сущности, которой соответствует данный <classname>MetaClass</classname></para>
                </listitem>
                <listitem>
                  <para><property>annotations</property> – коллекция аннотаций. <glossterm linkend="glossary_annotation">Аннотация</glossterm> представляет собой произвольный именованный объект, который добавляется в <classname>MetaClass</classname> на этапе развертывания метаданных. Например, с помощью аннотаций в метаданных хранится длина строковых полей.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>MetaProperty</term>
            <listitem>
              <para><classname>MetaProperty</classname> описывает атрибут сущности. Атрибут принадлежит мета-классу, который может быть получен методом <methodname>getDomain()</methodname>.</para>
              <para>Атрибут может быть следующих типов (метод <methodname>getType()</methodname>):</para>
              <itemizedlist>
                <listitem>
                  <para>простой тип: <type>DATATYPE</type></para>
                </listitem>
                <listitem>
                  <para>перечисление: <type>ENUM</type></para>
                </listitem>
                <listitem>
                  <para>ссылочный тип двух видов:</para>
                  <itemizedlist>
                    <listitem>
                      <para><type>ASSOCIATION</type> − простая ссылка на другой объект. Например, отношение инвойса и контрагента − ассоциация.</para>
                    </listitem>
                    <listitem>
                      <para><type>AGGREGATION</type> − ссылка на объект, который не имеет самостоятельного значения. <type>AGGREGATION</type> можно считать &quot;более тесным&quot; отношением, чем <type>ASSOCIATION</type>. Например, отношение инвойса и строки спецификации этого инвойса − <type>AGGREGATION</type>, т.к. строка спецификации не имеет смысла без самого инвойса.</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </itemizedlist>
              <para>Вид ссылочного атрибута <type>ASSOCIATION</type> или <type>AGGREGATION</type> влияет на режим редактирования сущности: в первом случае коммит связанной сущности происходит независимо, а во втором − связанная сущность коммитится в БД только вместе с основной сущностью.</para>
              <itemizedlist>
                <listitem>
                  <para>name – имя свойства, соответствует имени атрибута сущности</para>
                </listitem>
                <listitem>
                  <para>domain – MetaClass, которому принадлежит данное свойство</para>
                </listitem>
                <listitem>
                  <para>type – тип свойства: DATATYPE, ENUM, ASSOCIATION, AGGREGATION</para>
                </listitem>
                <listitem>
                  <para>range – интерфейс к свойствам MetaProperty</para>
                </listitem>
                <listitem>
                  <para>mandatory – true если атрибут сущности должен быть не null</para>
                </listitem>
                <listitem>
                  <para>readOnly – true если атрибут нельзя изменять</para>
                </listitem>
                <listitem>
                  <para>inverse – ссылка на обратную сторону ассоциации между сущностями</para>
                </listitem>
                <listitem>
                  <para>annotatedElement – Field или Method, соответствующие данному атрибуту сущности</para>
                </listitem>
                <listitem>
                  <para>javaType – java-класс атрибута сущности</para>
                </listitem>
                <listitem>
                  <para>declaringClass – java-класс, декларирующий данный атрибут (содержащий данный annotatedElement)</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Range</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>isDatatype – true если MetaProperty.type == DATATYPE</para>
                </listitem>
                <listitem>
                  <para>isEnum – true если MetaProperty.type == DATATYPE</para>
                </listitem>
                <listitem>
                  <para>isClass – true если MetaProperty.type == ASSOCIATION or AGGREGATION</para>
                </listitem>
                <listitem>
                  <para>ordered – true если свойство представляет собой упорядоченную коллекцию (List)</para>
                </listitem>
                <listitem>
                  <para>cardinality – вид отношения, если свойство isClass: ONE_TO_ONE, MANY_TO_ONE, ONE_TO_MANY, MANY_TO_MANY</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section id="section_views_id">
        <title>Представления</title>
        <para>Механизм представлений обеспечивает извлечение из БД и передачу клиенту графов сущностей, ограниченных в глубину и/или по атрибутам.</para>
        <para>Представление всегда должно быть задано при запросе данных у <glossterm linkend="glossary_middleware_id">middleware</glossterm>. Получив выборку данных по представлению, клиентский код может быть уверен, что все запрошенные атрибуты и связанные сущности получены, и их можно использовать без опаски получить <errorname role="italic">NullPointerException</errorname> или исключение типа <errorname role="italic">LazyInitializationException</errorname>. Представление решает и обратную задачу − ненужные атрибуты не извлекаются из БД, что снижает нагрузку в случае &quot;широких&quot; сущностей (содержащих большое число атрибутов).</para>
        <para>Для каждой сущности по умолчанию доступны два типа представления с именами <filename>_local</filename> и <filename>_minimal</filename></para>
        <itemizedlist>
          <listitem>
            <para><filename>_local</filename> определяет все локальные атрибуты сущности (т.е. все, кроме ссылок на другие сущности);</para>
          </listitem>
          <listitem>
            <para><filename>_minimal</filename> определяет атрибуты, входящие в <varname>InstanceName</varname>. Если <varname>InstanceName</varname> не задано, данное представление определяет только системные атрибуты (<varname>id</varname>, <varname>createTs</varname> и пр.).</para>
          </listitem>
        </itemizedlist>
        <para>Представления нужно определять в файле <filename>ext-views.xml</filename> модуля <structname>core</structname>.</para>
        <warning>
          <title>Внимание</title>
          <para>Имя представления должно быть уникально в пределах сущности. При этом рекомендуется давать более  &quot;описательные&quot; имена. Например, не &quot;browse&quot;, а &quot;nameOfEntityBrowse&quot;. Это упрощает поиск XML-описателей представлений по имени. </para>
        </warning>
        <para>Пример представления для сущности <classname>User</classname>, которое должно выбирать все простые поля и ссылку на группу:</para>
        <programlisting>&lt;view entity=&quot;sec$User&quot; name=&quot;user.browse&quot; extends=&quot;_local&quot;&gt;
     &lt;property name=&quot;group&quot; view=&quot;_local&quot;/&gt;
&lt;/view&gt;</programlisting>
      </section>
      <section id="section_transaction_id">
        <title>Транзакции</title>
        <para>Транзакция Middleware напрямую отображается на транзакцию БД.</para>
        <para>Управление транзакциями производится только  на уровне сервисов или ниже. 
</para>
        <para>Любой клиент, вызывая методы сервиса, должен понимать, что каждый метод будет выполняться в отдельной транзакции.
Используется только ручное (не декларативное) управление транзакциями.</para>
        <para>Управление транзакциями является частью бизнес-логики.
При использовании ORM изменения в БД производятся при коммите транзакции, который в случае декларативного управления происходит за рамками прикладного кода (в интерцепторах контейнера), что крайне неудобно при отладке приложения.</para>
        <para>При использовании ORM доменные объекты ведут себя принципиально по-разному внутри и вне транзакции</para>
        <para>Рекомендации по управлению транзакциями содержатся в главе <xref linkend="section_transactions_realization" xrefstyle="select: labelnumber title"/></para>
      </section>
      <section id="section_cluster_middleware">
        <title id="section_cluster_middleware">Кластер среднего слоя</title>
        <para>TODO</para>
        <section>
          <title>Совместимость кластера</title>
        </section>
      </section>
    </section>
    <section id="section_client_id">
      <title>Архитектура клиента</title>
      <figure>
        <title/>
        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="img/ClientStructure.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>TODO</para>
    </section>
    <section>
      <title>Свойства приложения</title>
      <para wordsize="20"><emphasis role="bold">Основные понятия</emphasis></para>
      <para>Свойства приложения − именованные данные различных типов, определяющие всевозможные аспекты конфигурации и функционирования приложения.</para>
      <para>По назначению свойства приложения можно классифицировать следующим образом:</para>
      <itemizedlist>
        <listitem>
          <para>Конфигурационные параметры: определяют наборы конфигурационных файлов и некоторые параметры пользовательского интерфейса. Например: <parameter>cuba.springContextConfig</parameter>, <parameter>cuba.web.useLightHeader</parameter>.</para>
        </listitem>
        <listitem>
          <para>Параметры развертывания: различные URL для соединения <glossterm linkend="glossary_app_tiers">уровней</glossterm> приложения, тип используемой БД, настройки подсистемы безопасности и т.д. Например: <parameter>cuba.connectionUrl</parameter>, <parameter>cuba.dbmsType,</parameter> <parameter>cuba.userSessionExpirationTimeoutSec</parameter>.</para>
        </listitem>
        <listitem>
          <para>Параметры времени выполнения: активность аудита, параметры отсылки email и т.д. Например, <parameter>cuba.security.EntityLog.enabled</parameter>, <parameter>cuba.email.smtpHost</parameter>.</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Работа со свойствами приложения</emphasis></para>
      <formalpara>
        <title>Программный доступ к свойствам</title>
        <para>Основной способ доступа к свойствам приложения из программного кода − использование Java-интерфейсов механизма <glossterm linkend="glossary_conf_parameter_id">Configuration Parameters</glossterm>. Кроме того, все свойства конфигурации и развертывания доступны через методы класса <classname>com.haulmont.cuba.core.sys.AppContext</classname>.</para>
      </formalpara>
      <formalpara>
        <title>Принадлежность уровням</title>
        <para>Как правило, некоторое свойство принадлежит только одному или нескольким <glossterm linkend="glossary_app_tiers">уровням приложения</glossterm>. Например, <parameter>cuba.persistenceConfig</parameter> имеет смысл только для <glossterm linkend="text_middleware_id">Middleware</glossterm>,  <parameter>cuba.web.useLightHeader</parameter> − только для <glossterm linkend="glossary_app_tiers">Web Client</glossterm>, а <parameter>cuba.springContextConfig </parameter>− для всех уровней. </para>
        <para>Принадлежность к уровню означает, что если Вы хотите задать значение некоторому свойству, это необходимо сделать на всех уровнях, которым данное свойство принадлежит (смотрите <link linkend="glossary_saving_properties">Хранение значений свойств</link>).</para>
        <para>Принадлежность можно выяснить следующими способами:<itemizedlist>
            <listitem>
              <para>Из документации</para>
            </listitem>
            <listitem>
              <para>Проследив использование свойства в коде приложения</para>
            </listitem>
            <listitem>
              <para>Если к свойству есть доступ через Java-интерфейс, то по принадлежности интерфейса модулю проекта. Ниже приведено соответствие модуля объявления интерфейса и принадлежности свойства <glossterm linkend="glossary_app_tiers">уровням приложения</glossterm>:</para>
              <itemizedlist>
                <listitem>
                  <para><structname>global</structname> − свойство принадлежит всем <glossterm linkend="glossary_app_tiers">уровням</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>core</structname> − <glossterm>Middleware</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>client</structname> − <glossterm linkend="text_webclient_id">Web Client</glossterm>, <glossterm linkend="text_portal_id">Web Portal</glossterm>, <glossterm linkend="text_desktop_id">Desktop Client</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>web</structname> − <glossterm linkend="text_webclient_id">Web Client</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>web-portal</structname> − <glossterm linkend="text_portal_id">Web Portal</glossterm></para>
                </listitem>
                <listitem>
                  <para><structname>desktop</structname> − <glossterm linkend="text_desktop_id">Desktop Client</glossterm></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist></para>
      </formalpara>
      <formalpara>
        <title>JMX-интерфейс</title>
        <para>Некоторые <glossterm linkend="glossary_app_tiers">уровни приложения</glossterm> определяют JMX-интерфейсы для доступа к свойствам приложения. В частности, на уровне <glossterm linkend="text_middleware_id">Middleware</glossterm> имеется JMX-интерфейс <classname>ConfigStorageMBean</classname> с именем <classname>app-core.cuba:service=ConfigStorage</classname>, а на уровне <glossterm linkend="text_webclient_id">Web Client</glossterm> − <classname>ConfigurationMBean</classname> с именем <classname>app.cuba:service=Configuration</classname>. Методы этих интерфейсов работают по отдельности со свойствами конфигурации и развертывания (<parameter>*AppProperties</parameter>) и со свойствами времени выполнения (<parameter>*DbProperties</parameter>). Это обусловлено различием механизмов <link linkend="glossary_saving_properties">хранения</link> этих категорий свойств.</para>
      </formalpara>
      <para id="glossary_saving_properties_1"><emphasis role="bold">Хранение значений свойств</emphasis></para>
      <formalpara id="text_properties_files_1">
        <title>Файлы свойств</title>
        <para>Свойства, определяющие конфигурацию и параметры развертывания, задаются в специальных файлах свойств, имеющих имя вида <filename>*-app.properties</filename>. Каждый <glossterm linkend="glossary_app_tiers">уровень приложения</glossterm> имеет набор таких файлов, включающий в себя файлы из базовых проектов платформы и файл текущего приложения. Набор файлов свойств различен для разных уровней приложения и определяется следующим образом:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>Для уровней, являющихся веб-приложениями (<glossterm linkend="text_middleware_id">Middleware</glossterm>, <glossterm linkend="text_webclient_id">Web Client</glossterm>, <glossterm linkend="text_portal_id">Web Portal</glossterm>) набор файлов свойств задается в <filename>web.xml</filename> в параметре <parameter>appPropertiesConfig</parameter>.</para>
        </listitem>
        <listitem>
          <para>Для уровня <glossterm linkend="text_desktop_id">Desktop Client</glossterm> основной способ задания набора файлов свойств − переопределение в приложении метода <methodname>getDefaultAppPropertiesConfig</methodname> в классе-наследнике <classname>com.haulmont.cuba.desktop.App</classname>.</para>
        </listitem>
      </itemizedlist>
      <para>Например, набор файлов свойств уровня <glossterm linkend="text_middleware_id">Middleware</glossterm> проекта <application>shop</application> − <filename>web.xml</filename> − выглядит следующим образом:</para>
      <programlisting>classpath:cuba-app.properties
classpath:shop-app.properties
file:${catalina.home}/conf/app-core/local.app.properties</programlisting>
      <para>Здесь префикс <classname>classpath:</classname> означает, что данный файл нужно искать в Java classpath, префикс <classname>file:</classname> − в файловой системе. Возможно использование системных свойств Java, в данном случае это <classname>catalina.home</classname> − путь к корню <application>Tomcat</application>.</para>
      <para>Порядок перечисления файлов важен, так как значения, указанные в каждом последующем файле заменяют значения одноименных свойств, заданные в предыдущих файлах. Этим достигается переопределение свойств платформы в конкретном приложении.</para>
      <para id="glossary_local_properties_1">Последний файл в приведенном наборе − <filename>local.app.properties</filename>. Подробнее об этом файле можно узнать в определении <link linkend="glossary_local_properties">Local Application Properties</link>.</para>
      <para id="glossary_local_properties_2"><emphasis role="bold">Синтаксис</emphasis></para>
      <para><warning>
          <para>Обратите внимание на синтаксис ключей и значений в *.properties файлах.</para>
          <itemizedlist>
            <listitem>
              <para>Ключ состоит из латинских букв и цифр, разделенных точкой</para>
            </listitem>
            <listitem>
              <para>Значение пишется после знака равно (=)</para>
            </listitem>
            <listitem>
              <para>Значение <emphasis role="bold">никогда</emphasis> не берется к кавычки &quot;&quot; или &apos;&apos;</para>
            </listitem>
            <listitem>
              <para>Файловые пути записываются либо в UNIX виде (/opt/haulmont/), либо в Windows виде (c:\\haulmont\\)</para>
            </listitem>
            <listitem>
              <para>Для различных спецсимволов используются коды (\n \t \r). \  является зарезервированным символом, для вставки в значение экранируется сам собой (\\). 
Подробнее: <ulink url="http://docs.oracle.com/javase/tutorial/java/data/characters.html">http://docs.oracle.com/javase/tutorial/java/data/characters.html</ulink></para>
            </listitem>
            <listitem>
              <para>В значениях могут присутствовать спецсимволы (пробелы, табуляции).     Внимательно проверяйте значения, скопированные в файл из других программ</para>
            </listitem>
          </itemizedlist>
        </warning></para>
      <formalpara>
        <title>Таблица базы данных</title>
        <para>Параметры времени выполнения хранятся в БД в таблице <database>SYS_CONFIG</database>. Хранящиеся в БД свойства кэшируются на уровне <glossterm linkend="text_middleware_id">Middleware</glossterm>. Очистить кэш можно через JMX-интерфейсы <classname>app-core.cuba:service=ConfigStorage</classname> методом <methodname>clearCache</methodname> или <classname>app-core.cuba:service=CachingFacade</classname> методом <methodname>clearConfigStorageCache</methodname>.</para>
      </formalpara>
      <para><emphasis role="bold">Значения по умолчанию</emphasis></para>
      <para>Если обращение к свойству производится через Java-интерфейс механизма <glossterm linkend="glossary_conf_parameter_id">Configuration Parameters</glossterm> и если значение свойства не задано в месте его хранения (файлы <filename>*-app.properties</filename> или БД), то будет возвращено значение по умолчанию, если оно задано в аннотации соответствующего метода Java-интерфейса.</para>
      <para>Подробное описание свойств подсистемы безопасности содержится в <link linkend="appendix_security_properties">Приложении А</link>.</para>
    </section>
    <section id="section_gui_framework">
      <title>Графический интерфейс пользователя</title>
      <section>
        <title>Библиотека визуальных компонентов</title>
        <section>
          <title>Компоненты</title>
          <figure>
            <title>Диаграмма компонентов</title>
            <mediaobject>
              <imageobject>
                <imagedata align="center" fileref="img/components/Components_new.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para><classname>Component</classname> − предок всех визуальных компонентов. Он содержит базовые атрибуты, позволяющие идентифицировать компонент и располагать его на экране.</para>
          <itemizedlist>
            <listitem>
              <para><link linkend="section_button">Button</link> − простая кнопка</para>
              <para><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="img/components/Button.png"/>
                  </imageobject>
                </inlinemediaobject></para>
              <itemizedlist>
                <listitem>
                  <para><link linkend="section_popupButton">PopupButton</link> − кнопка с выпадающим списком действий</para>
                  <para><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="img/components/PopupButton.png"/>
                      </imageobject>
                    </inlinemediaobject></para>
                </listitem>
                <listitem>
                  <para><link linkend="section_linkButton">LinkButton</link> − кнопка, выглядящая как html-гиперссылка</para>
                  <para><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="img/components/LinkButton.png"/>
                      </imageobject>
                    </inlinemediaobject></para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>DatasourceComponent − базовый интерфейс компонентов, предназначенных для работы с данными одного экземпляра сущности. Имеет методы для установки источника данных и указания атрибута сущности, из которого брать значение</para>
              <itemizedlist>
                <listitem>
                  <para><link linkend="section_label">Label</link> − надпись, предназначена для отображения статической строки либо значения атрибута сущности</para>
                  <para><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="img/components/Label.png"/>
                      </imageobject>
                    </inlinemediaobject></para>
                </listitem>
                <listitem>
                  <para>Field − базовый интерфейс компонентов, предназначенных для отображения и редактирования атрибута сущности</para>
                  <itemizedlist>
                    <listitem>
                      <para><link linkend="section_textField">TextField</link> − поле ввода простого текста, может состоять из нескольких строк</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/TextField.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para><link linkend="section_gui_textArea">TextArea</link> − поле ввода форматированного текста</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/TextArea.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para><link linkend="section_dateField">DateField</link> − поле ввода даты и времени</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/DateField.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para>TimeField − поле ввода  времени</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/TimeField.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para><link linkend="section_checkBox">CheckBox</link> − переключатель</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/CheckBox.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para><link linkend="section_pickerField">PickerField</link> − поле ввода с дополнительными кнопками действий</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/PickerField.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para>OptionsField − базовый класс компонентов, позволяющих выбрать значение из некоторого списка. Имеет методы для задания списка опций − через CollectionDatasource, List или Map</para>
                      <itemizedlist>
                        <listitem>
                          <para><link linkend="section_gui_optionsGroup">OptionsGroup</link> − переключатель либо набор флажков.</para>
                          <para><inlinemediaobject>
                              <imageobject>
                                <imagedata fileref="img/components/OptionsGroup.png"/>
                              </imageobject>
                            </inlinemediaobject></para>
                        </listitem>
                        <listitem>
                          <para><link linkend="section_lookupField">LookupField</link> − выпадающий список с расширенной функциональностью</para>
                          <para><inlinemediaobject>
                              <imageobject>
                                <imagedata fileref="img/components/LookupField.png"/>
                              </imageobject>
                            </inlinemediaobject></para>
                          <itemizedlist>
                            <listitem>
                              <para><link linkend="section_lookupPickerField">LookupPickerField</link> − поле ввода с возможностью выбора из выпадающего списка и вызова дополнительных действий по встроенным кнопкам</para>
                              <para><inlinemediaobject>
                                  <imageobject>
                                    <imagedata fileref="img/components/LookupPickerField.png"/>
                                  </imageobject>
                                </inlinemediaobject></para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                        <listitem>
                          <para><link linkend="section_twinColumn">TwinColumn</link> − компонент выбора на основе двух списков</para>
                          <para><inlinemediaobject>
                              <imageobject>
                                <imagedata fileref="img/components/TwinColumn.png"/>
                              </imageobject>
                            </inlinemediaobject></para>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>Embedded − компонент для внедрения в экран внешнего содержимого</para>
            </listitem>
            <listitem>
              <para><link linkend="section_upload">FileUploadField</link> − компонент для загрузки файлов</para>
              <para><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="img/components/Upload.png"/>
                  </imageobject>
                </inlinemediaobject></para>
            </listitem>
            <listitem>
              <para>List − базовый интерфейс компонентов, предназначенных для работы с коллекциями сущностей</para>
              <itemizedlist>
                <listitem>
                  <para><link linkend="section_gui_table">Table</link> − таблица</para>
                  <para><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="img/components/Table.png"/>
                      </imageobject>
                    </inlinemediaobject></para>
                  <itemizedlist>
                    <listitem>
                      <para><link linkend="section_gui_treetable">TreeTable</link> − таблица, отображающая иерархическую сущность</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref=""/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                    <listitem>
                      <para><link linkend="section_gui_groupTable">GroupTable</link> − таблица с возможностью динамической группировки по любому полю</para>
                      <para><inlinemediaobject>
                          <imageobject>
                            <imagedata fileref="img/components/GroupTable.png"/>
                          </imageobject>
                        </inlinemediaobject></para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para><link linkend="section_gui_tree">Tree</link> − дерево</para>
                  <para><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="img/components/Tree.png"/>
                      </imageobject>
                    </inlinemediaobject></para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><link linkend="section_gui_fieldGroup">FieldGroup</link> − компонент для автоматического отображения и редактирования набора атрибутов сущности с помощью соответствующих визуальных компонентов, располагаемых внутри GroupBoxLayout</para>
              <para><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="img/components/FieldGroup.png"/>
                  </imageobject>
                </inlinemediaobject></para>
            </listitem>
            <listitem>
              <para>TokenList − специфический компонент для выбора и отображения коллекции сущностей в виде коротких меток</para>
            </listitem>
          </itemizedlist>
          <section id="section_button">
            <title>Button</title>
            <para>Button − кнопка</para>
            <para>XML-имя компонента: <classname>button</classname></para>
            <para>Атрибуты button:</para>
            <itemizedlist role="test">
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_icon">icon</link></para>
              </listitem>
              <listitem>
                <para>action − полное имя Action, соответствующего данной кнопке.</para>
              </listitem>
              <listitem>
                <para>invoke − имя вызываемого метода контроллера. Метод должен быть <classname>public</classname>, не возвращать результата, и либо не иметь аргументов, либо иметь один аргумент типа <classname>Component</classname>. Если метод имеет аргумент <classname>Component</classname>, то при вызове в него будет передан экземпляр вызвавшей кнопки. Данный атрибут игнорируется, если для кнопки задан атрибут <parameter>action</parameter>.</para>
              </listitem>
            </itemizedlist>
            <example>
              <title/>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/button/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
            </example>
          </section>
          <section id="section_popupButton">
            <title>PopupButton</title>
            <para>Кнопка с выпадающим списком действий.</para>
            <para>XML-имя компонента: popupButton.</para>
            <para>Атрибуты popupButton:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_icon">icon</link></para>
              </listitem>
              <listitem>
                <para>action − полное имя Action, соответствующего данной кнопке.</para>
              </listitem>
              <listitem>
                <para>invoke − имя вызываемого метода контроллера. Метод должен быть <classname>public</classname>, не возвращать результата, и либо не иметь аргументов, либо иметь один аргумент типа <classname>Component</classname>. Если метод имеет аргумент <classname>Component</classname>, то при вызове в него будет передан экземпляр вызвавшей кнопки. Данный атрибут игнорируется, если для кнопки задан атрибут <parameter>action</parameter>.</para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_linkButton">
            <title>LinkButton</title>
            <para>Кнопка, выглядящая как html-гиперссылка.</para>
            <para>XML-имя компонента: linkButton</para>
            <para>Атрибуты button:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_icon">icon</link></para>
              </listitem>
              <listitem>
                <para>action − полное имя Action, соответствующего данной кнопке.</para>
              </listitem>
              <listitem>
                <para>invoke − имя вызываемого метода контроллера. Метод должен быть <classname>public</classname>, не возвращать результата, и либо не иметь аргументов, либо иметь один аргумент типа <classname>Component</classname>. Если метод имеет аргумент <classname>Component</classname>, то при вызове в него будет передан экземпляр вызвавшей кнопки. Данный атрибут игнорируется, если для кнопки задан атрибут <parameter>action</parameter>.</para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_label">
            <title>Label</title>
            <para>Надпись, сообщение</para>
            <para>XML-имя компонента: label</para>
            <para>Атрибуты label:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para>value − текст надписьи, обычно задается ключом пакета сообщений: value=&quot;msg://infoLabel&quot;</para>
              </listitem>
            </itemizedlist>
            <para>Элементы label:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="element_formatter">formatter</link></para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_textField">
            <title>TextField</title>
            <para>Поле для редактирования текста.</para>
            <para>XML-имя компонента: textField</para>
            <para>Атрибуты textField:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para>cols − количество колонок текста</para>
              </listitem>
              <listitem>
                <para>rows − количество строк текста</para>
              </listitem>
              <listitem>
                <para>maxLength − максимальная длина вводимого текста. Устанавливается по умолчанию на основании длины строкового атрибута сущности, если этот параметр указан в <glossterm linkend="glossary_annotation">аннотации</glossterm> <glossterm linkend="glossary_entity">сущности</glossterm>. Значение &quot;-1&quot; означает отсутствие ограничения.</para>
              </listitem>
              <listitem>
                <para>secret − если установлен в true, значение поля будет замаскировано (например для ввода пароля).</para>
              </listitem>
              <listitem>
                <para>datatype − используется для форматирования значения поля, если поле не связано с данными (не указан атрибут <link linkend="attr_datasource">datasource</link>. Должен содержать имя типа данных, с которым он зарегистрирован в объекте <interfacename>Datatypes</interfacename> (смотрите главу <link linkend="section_metadata_framework">Metadata Framework</link>, а также классы, реализующие интерфейс <interfacename>Datatype</interfacename>).</para>
              </listitem>
              <listitem>
                <para>trim − отсекать ли пробелы в начале и в конце значения. По-умолчанию true.</para>
              </listitem>
            </itemizedlist>
            <para>Элементы textField:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
              <listitem>
                <para><link linkend="element_formatter">formatter</link></para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_gui_textArea">
            <title>TextArea</title>
            <para>Поле для редактирования rich-текста. Содержит элементы управления для форматирования текста.</para>
            <para>XML-имя компонента: textArea</para>
            <para>Атрибуты textArea:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para>cols − количество колонок текста</para>
              </listitem>
              <listitem>
                <para>rows − количество строк текста</para>
              </listitem>
            </itemizedlist>
            <para>Элементы textArea:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_buttonsPanel">
            <title>ButtonsPanel</title>
            <para>Унифицирует использование и размещение кнопок для управления данными в таблице.</para>
            <para>XML-имя компонента: <parameter>buttonsPanel</parameter>.</para>
            <para>Атрибуты <parameter>buttonsPanel</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para>id</para>
              </listitem>
              <listitem>
                <para>visible</para>
              </listitem>
              <listitem>
                <para>align</para>
              </listitem>
              <listitem>
                <para>expandable</para>
              </listitem>
              <listitem>
                <para>width</para>
              </listitem>
              <listitem>
                <para>height</para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_checkBox">
            <title>CheckBox</title>
            <para>CheckBox − переключатель для ввода булевского значения.</para>
            <para>XML-имя компонента: checkBox.</para>
            <para>Атрибуты checkBox:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
            </itemizedlist>
            <para>Элементы checkBox:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_dateField">
            <title>DateField</title>
            <para>Поле для редактирования даты и времени.</para>
            <para>XML-имя компонента: <parameter>dateField</parameter>.</para>
            <para>Атрибуты <parameter>dateField</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para><property>dateFormat</property> − формат представления даты/времени по правилам <ulink url="http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html">SimpleDateFormat</ulink>. Значением атрибута может быть либо строка формата, либо ключ в <glossterm linkend="glossary_localized_folders_id">пакете сообщений</glossterm> (если строка начинается с msg://)</para>
              </listitem>
              <listitem>
                <para><property>resolution</property> − точность представления даты/времени (день, час и т.д.). Значение атрибута должно соответствовать перечислению <classname>DateField.Resolution</classname> − <classname>MSEC</classname>, <classname>SEC</classname>, <classname>MIN</classname>, <classname>HOUR</classname>, <classname>DAY</classname>, <classname>MONTH</classname>, <classname>YEAR</classname>. По умолчанию точность определяется по аннотации <literal>javax.persistence.Temporal</literal> соответствующего атрибута сущности.</para>
                <para>Если <property>resolution=&quot;DAY&quot;</property> и не указан атрибут <property>dateFormat</property>, то в качестве формата будет взят формат, указанный в главном пакете сообщений с ключом <property>dateFormat</property>.</para>
                <para>Если <property>resolution=&quot;MIN&quot;</property> и не указан атрибут <property>dateFormat</property>, то в качестве формата будет взят формат, указанный в главном пакете сообщений с ключом <property>dateTimeFormat</property>.</para>
              </listitem>
            </itemizedlist>
            <para>Элементы <parameter>dateField</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="section_lookupField">
            <title>LookupField</title>
            <para>Компонент, реализующий выпадающий список. Он реализует фильтрацию значений в реальном времени (по мере ввода имени опции пользователем) и постраничный вывод доступных опций.</para>
            <para>XML-имя компонента: <parameter>lookupField</parameter>.</para>
            <para>Атрибуты <parameter>lookupField</parameter>: </para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_optionsDatasource">optionsDatasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_captionProperty">captionProperty</link></para>
              </listitem>
              <listitem>
                <para><property>nullName</property> − идентификатор опции, выбор которой будет равносилен установке значения в <property>null</property>.</para>
              </listitem>
              <listitem>
                <para><property>filterMode</property> − тип фильтрации опций:</para>
                <itemizedlist>
                  <listitem>
                    <para><property>NO</property> − нет фильтрации.</para>
                  </listitem>
                  <listitem>
                    <para><property>STARTS_WITH</property> − по началу фразы.</para>
                  </listitem>
                  <listitem>
                    <para><property>CONTAINS</property> − по любому вхождению.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>validator</para>
              </listitem>
            </itemizedlist>
            <para>Пример использования компонента в <glossterm linkend="glossary_xml_descriptor_id">XML-дескрипторе</glossterm>:</para>
            <para><programlisting>&lt;lookupField id=&quot;docClass&quot; datasource=&quot;docType&quot; property=&quot;docClass&quot;
             optionsDatasource=&quot;docClasses&quot; captionProperty=&quot;name&quot;
             required=&quot;true&quot; width=&quot;300px&quot;/&gt;</programlisting></para>
          </section>
          <section>
            <title>PickerField</title>
            <para><parameter>PickerField</parameter> позволяет отображать экземпляр <glossterm linkend="glossary_entity">сущности</glossterm> в текстовом поле и выполнять действия нажатием на кнопки справа.</para>
            <para>XML-имя компонента: <parameter>pickerField</parameter>.</para>
            <para>Атрибуты и элементы <parameter>pickerField</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem id="section_pickerField">
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para><property>captionProperty</property> − при отображении экземпляра сущности задает имя атрибута, значение которого выводится в текстовом поле. Если данный атрибут не задан, компонент будет содержать <classname>Instance Name</classname> экземпляра.</para>
              </listitem>
              <listitem>
                <para><property>metaClass</property> − если не установлен атрибут <property>datasource</property>, задает тип сущности, с которой будет работать компонент.</para>
              </listitem>
              <listitem>
                <para><property>actions</property> − необязательный элемент, определяющий набор действий (кнопок справа)</para>
                <itemizedlist>
                  <listitem>
                    <para><property>action</property> − элемент, определяющий действие. Кроме описания произвольного действия возможно использование стандартных действий, определяемых перечислением <classname>PickerField.ActionType</classname>: <classname>lookup</classname>, <classname>clear</classname>, <classname>open</classname>.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para>Если при объявлении компонента никаких действий не задано, загрузчик XML определит для него действия <classname>lookup</classname> и <classname>clear</classname>.</para>
            <para>Пример использования компонента в <glossterm linkend="glossary_xml_descriptor_id">XML-дескрипторе</glossterm>:</para>
            <para><programlisting>&lt;pickerField id=&quot;pickerField1&quot; datasource=&quot;carDs&quot; 
             property=&quot;model&quot;  width=&quot;250px&quot;&gt;
    &lt;actions&gt;
        &lt;action id=&quot;clear&quot;/&gt;
        &lt;action id=&quot;pickerAction1&quot; 
                caption=&quot;&quot; 
                icon=&quot;pickerfield/img/lookup-btn.png&quot; 
                invoke=&quot;someActionMethod1&quot;/&gt;
        &lt;action id=&quot;pickerAction2&quot; 
                caption=&quot;&quot; 
                icon=&quot;pickerfield/img/lookup-btn.png&quot; 
                invoke=&quot;someActionMethod2&quot;/&gt;
    &lt;/actions&gt;
&lt;/pickerField&gt;</programlisting></para>
          </section>
          <section id="section_lookupPickerField">
            <title>LookupPickerField</title>
            <para><classname>LookupPickerField</classname> позволяет отображать экземпляр сущности в текстовом поле, выбирать экземпляр в выпадающем списке и выполнять действия нажатием на кнопки справа.</para>
            <para>XML-имя компонента: lookupPickerField.</para>
            <para>Атрибуты и элементы lookupPickerField:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem id="section_pickerField_1">
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_optionsDatasource">optionsDatasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_captionProperty">captionProperty</link></para>
              </listitem>
              <listitem>
                <para>nullName − идентификатор опции, выбор которой будет равносилен установке значения в null.</para>
              </listitem>
              <listitem>
                <para><property>filterMode</property> − тип фильтрации опций:</para>
                <itemizedlist>
                  <listitem>
                    <para><property>NO</property> − нет фильтрации.</para>
                  </listitem>
                  <listitem>
                    <para><property>STARTS_WITH</property> − по началу фразы.</para>
                  </listitem>
                  <listitem>
                    <para><property>CONTAINS</property> − по любому вхождению.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
              <listitem>
                <para><property>metaClass</property> − если не установлен атрибут <property>datasource</property> или <link linkend="attr_optionsDatasource">optionsDatasource</link>, задает тип сущности, с которой будет работать компонент.</para>
              </listitem>
              <listitem>
                <para><property>actions</property> − необязательный элемент, определяющий набор действий (кнопок справа)</para>
                <itemizedlist>
                  <listitem>
                    <para><property>action</property> − элемент, определяющий действие. Кроме описания произвольного действия возможно использование стандартных действий, определяемых перечислением <classname>PickerField.ActionType</classname>: <classname>lookup</classname>, <classname>clear</classname>, <classname>open</classname>.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para>Если при объявлении компонента никаких действий не задано, загрузчик XML определит для него действия lookup и open.</para>
            <programlisting>&lt;lookupPickerField id=&quot;lookupPickerField1&quot; optionsDatasource=&quot;coloursDs&quot; width=&quot;250px&quot;&gt;
    &lt;actions&gt;
        &lt;action id=&quot;lookup&quot;/&gt;
        &lt;action id=&quot;open&quot;/&gt;
        &lt;action id=&quot;pickerAction1&quot; caption=&quot;&quot; icon=&quot;pickerfield/img/lookup-btn.png&quot; invoke=&quot;someActionMethod1&quot;/&gt;
        &lt;action id=&quot;pickerAction2&quot; caption=&quot;&quot; icon=&quot;pickerfield/img/lookup-btn.png&quot; invoke=&quot;someActionMethod2&quot;/&gt;
    &lt;/actions&gt;
&lt;/lookupPickerField&gt;</programlisting>
          </section>
          <section id="section_gui_optionsGroup">
            <title>OptionsGroup</title>
            <para>Переключатель, либо группа флажков.</para>
            <para>XML-имя компонента: optionsGroup.</para>
            <para>Атрибуты optionsGroup:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_optionsDatasource">optionsDatasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_captionProperty">captionProperty</link></para>
              </listitem>
              <listitem>
                <para>multiselect − поддержка выбора нескольких значений. Если &quot;multiselect=false&quot;, то компонент будет представлен как radio-button, иначе - как группа checkbox.</para>
              </listitem>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
              <listitem>
                <para>orientation − расположение элементов группы. По умолчанию распологаются по вертикали. Значение &quot;horizontal&quot; - для горизонтального расположения.</para>
              </listitem>
            </itemizedlist>
            <para>Пример XML-дескриптора:</para>
            <programlisting> &lt;optionsGroup id=&quot;docFields&quot; optionsDatasource=&quot;docFields&quot; captionProperty=&quot;name&quot;
                              datasource=&quot;docType&quot;
                              property=&quot;docFields&quot; multiselect=&quot;true&quot;/&gt;</programlisting>
          </section>
          <section id="section_twinColumn">
            <title>TwinColumn</title>
            <para>TwinColumn  представляет собой два списка: доступных и выбранных опций. Изменение выбранного значения производится путем переноса опций из одного списка в другой. Для каждой опции можно задать уникальный стиль отображения и пиктограмму.</para>
            <para>XML-имя компонента: twinColumn.</para>
            <para>Атрибуты twinColumn:</para>
            <itemizedlist spacing="compact" wordsize="9">
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem id="section_pickerField_2">
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_datasource">datasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_property">property</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_required">required</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_requiredMessage">requiredMessage</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_optionsDatasource">optionsDatasource</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_captionProperty">captionProperty</link></para>
              </listitem>
              <listitem>
                <para>nullName − идентификатор опции, выбор которой будет равносилен установке значения в null.</para>
              </listitem>
              <listitem>
                <para>columns − количество колонок текста в списке.</para>
              </listitem>
              <listitem>
                <para>rows − количество строк текста в спике.</para>
              </listitem>
              <listitem>
                <para><link linkend="element_validator">validator</link></para>
              </listitem>
            </itemizedlist>
            <para>Пример XML-дескриптора:</para>
            <programlisting>&lt;twinColumn id=&quot;twinColGroups&quot; optionsDatasource=&quot;groups&quot; captionProperty=&quot;name&quot;
                    expandable=&quot;false&quot; rows=&quot;10&quot; columns=&quot;15&quot;/&gt;</programlisting>
            <para>Для задания внешнего вида опций нужно реализовать интерфейс <interfacename>com.haulmont.cuba.gui.components.StyleProvider</interfacename> как показано в следующем примере:</para>
            <programlisting>TwinColumn twinColumn = getComponent(&quot;groups&quot;);
        twinColumn.setStyleProvider(new TwinColumn.StyleProvider() {
            public String getStyleName(Entity item, Object property, boolean selected) {
                if (((Group) item).getName().equals(&quot;Company&quot;)) {
                    return &quot;companyStyle&quot;;
                } else {
                    return null;
                }
            }

            public String getItemIcon(Entity item, boolean selected) {
                if (((Group) item).getName().equals(&quot;Company&quot;)) {
                    return &quot;theme:icons/company.png&quot;;
                } else {
                    return null;
                }
            }
        });</programlisting>
          </section>
          <section>
            <title>ProgressBar</title>
            <para>ProgressBar − индикатор прогресса какой-то задачи. Может отображать конкретное значение прогресса, например, 30%, а может отображать неопределенное состояние (indeterminate).</para>
            <para>XML-имя компонента: progressBar</para>
            <para>Атрибуты progressBar:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">stylename</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem id="section_pickerField_3">
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_enable">enable</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_align">align</link></para>
              </listitem>
              <listitem>
                <para>indeterminate − если true, то отображает неопределенное состояние</para>
              </listitem>
            </itemizedlist>
            <para>Значения прогресса задачи для <classname>ProgressBar</classname> следует передавать во <type>float</type> значениях в диапазоне от 0.0 до 1.0.</para>
          </section>
          <section id="section_upload">
            <title>FileUploadField</title>
            <para>Компонент загрузки файлов.</para>
            <para>XML-имя компонента: upload.</para>
            <para>Атрибуты компонента:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_description">description</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem id="section_pickerField_4">
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_caption">caption</link></para>
              </listitem>
            </itemizedlist>
            <para>Пример обработчика загрузки файла:</para>
            <programlisting>FileUploadField uploadField;
                    ...
        uploadField.addListener(new FileUploadField.Listener() {
            public void uploadStarted(Event event) {
                //код обработки начала загрузки
            }

            public void uploadFinished(Event event) {
                //код обработки окончания загрузки
            }

            public void uploadSucceeded(Event event) {
                //код обработки успешной загрузки
            }

            public void uploadFailed(Event event) {
                //код обработки ошибок загрузки
            }

            public void updateProgress(long readBytes, long contentLength) {
                //отслеживание процесса загрузки, например тут можно организовать обновление состояния индикатора загрузки
            }
        });</programlisting>
          </section>
          <section id="section_gui_table">
            <title>Table</title>
            <para>Служит для отображения данных в табличном виде.</para>
            <para>Возможности:</para>
            <itemizedlist>
              <listitem>
                <para>Выделение и множественное выделение строк в таблице.</para>
              </listitem>
              <listitem>
                <para>Сортировка по одной из колонок.</para>
              </listitem>
              <listitem>
                <para>Задание уникального стиля отображения для каждой ячейки.</para>
              </listitem>
              <listitem>
                <para>Применение <link linkend="element_formatter">форматирования</link> для колонок.</para>
              </listitem>
              <listitem>
                <para>Использование для колонок функций агрегирования без модификации datasource.</para>
              </listitem>
              <listitem>
                <para>Возможность скрывать/показывать колонки таблицы.</para>
              </listitem>
              <listitem>
                <para>Возможность изменять порядок отображения колонок в таблице.</para>
              </listitem>
              <listitem>
                <para>Возможность самостоятельно задавать представление данных в ячейке.</para>
              </listitem>
              <listitem>
                <para>Возможность управлять настройками отображения посредством механизма представлений.</para>
              </listitem>
            </itemizedlist>
            <para>XML-имя компонента: <parameter>table</parameter>.</para>
            <para>Атрибуты <parameter>table</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">styleName</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_width">width</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_height">height</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_editable">editable</link></para>
              </listitem>
              <listitem>
                <para>presentations − необязательный атрибут, включение/выключение поддержки механизма представлений.</para>
              </listitem>
              <listitem>
                <para>sortable −  необязательный атрибут, разрешает/запрещает сортировку в таблице. По умолчанию имеет значение true.</para>
              </listitem>
              <listitem>
                <para>aggregatable − необязательный атрибут, разрешает/запрещает агрегацию в таблице. По умолчанию имеет значение false.</para>
              </listitem>
              <listitem>
                <para>showTotalAggregation − необязательный атрибут, разрешает/запрещает отображение строки итоговой агрегации в таблице. По умолчанию имеет значение true.</para>
              </listitem>
              <listitem>
                <para>multiselect − необязательный атрибут, разрешает/запрещает множественное выделение. По умолчанию имеет значение false.</para>
              </listitem>
              <listitem>
                <para>actions − необязательный элемент, определяющий набор действий (кнопок справа)</para>
                <itemizedlist>
                  <listitem>
                    <para>action − элемент, определяющий действие</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para><link linkend="section_buttonsPanel">buttonsPanel</link></para>
              </listitem>
              <listitem>
                <para>rowsCount − необязательный элемент, создающий для таблицы компонент <classname>RowsCount</classname>, который позволяет загружать в таблицу данные постранично.</para>
              </listitem>
              <listitem>
                <para>columns − обязательный элемент, определяет набор колонок таблицы.</para>
                <itemizedlist>
                  <listitem>
                    <para>column − элемент, задающий опции для колонки таблицы. Может содержать следующие атрибуты:</para>
                    <itemizedlist>
                      <listitem>
                        <para>id − обязательный атрибут, содержит название атрибута сущности, выводимого в колонке.</para>
                      </listitem>
                      <listitem>
                        <para>collapsed − необязательный атрибут, скрывает/показывает колонку. По умолчанию имеет значение false.</para>
                      </listitem>
                      <listitem>
                        <para>caption − необязательный атрибут, содержит заголовок колонки.</para>
                      </listitem>
                      <listitem>
                        <para>width − необязательный атрибут, отвечает за изначальную ширину колонки.</para>
                      </listitem>
                      <listitem>
                        <para>calculatable − необязательный атрибут, используется только в редактируемой таблице. Означает, что значения в данной колонке являются вычислимыми и зависят от значений других колонок.</para>
                      </listitem>
                      <listitem>
                        <para>clickAction − необязательный атрибут; содержит описание действия, которое будет выполнено при клике в ячейке.</para>
                      </listitem>
                      <listitem>
                        <para>editable − необязательный атрибут, разрешает/запрещает редактирование данного атрибута в редактируемой таблице.</para>
                      </listitem>
                      <listitem>
                        <para>formatter</para>
                      </listitem>
                      <listitem>
                        <para>aggregation</para>
                      </listitem>
                      <listitem>
                        <para>validator</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>rows −  обязательный элемент, декларирует иcпользуемый datasource, его атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para>datasource attribute</para>
                  </listitem>
                  <listitem>
                    <para>headerMode − необязательный атрибут, вариант отображения заголовков рядов:</para>
                    <itemizedlist>
                      <listitem>
                        <para>NONE - нет заголовков</para>
                      </listitem>
                      <listitem>
                        <para>ICON - пиктограмма</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para>Пример использования компонента в <glossterm linkend="glossary_xml_descriptor_id">XML-дескрипторе</glossterm>:</para>
            <para><programlisting>&lt;table id=&quot;users&quot; editable=&quot;false&quot;&gt;
    &lt;columns&gt;
        &lt;column id=&quot;login&quot; caption=&quot;msg://login&quot; clickAction=&quot;open:sec$User.edit&quot;/&gt;
        &lt;column id=&quot;name&quot; caption=&quot;msg://name&quot;/&gt;
        &lt;column id=&quot;position&quot; caption=&quot;msg://position&quot;/&gt;
        &lt;column id=&quot;group&quot; caption=&quot;msg://group&quot;/&gt;
        &lt;column id=&quot;email&quot; caption=&quot;msg://email&quot;/&gt;
        &lt;column id=&quot;active&quot; caption=&quot;msg://active&quot;/&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;users&quot;/&gt;
&lt;/table&gt;</programlisting></para>
          </section>
          <section id="section_gui_treetable">
            <title>TreeTable</title>
            <para>Таблица, отображающая иерархию сущностей.</para>
            <para>XML-имя компонента: treeTable.</para>
            <para>Для правильного функционирования <classname>TreeTable</classname> должна быть соединена с HierarchicalDatasource (см. Datasources).</para>
            <para>Пример использования:</para>
            <programlisting>&lt;treeTable id=&quot;budgetCodes&quot; editable=&quot;false&quot;&gt;
    &lt;columns&gt;
        &lt;column id=&quot;code&quot; caption=&quot;msg://budgetCode.code&quot;/&gt;
        &lt;column id=&quot;name&quot; caption=&quot;msg://budgetCode.name&quot;/&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;budgetCodes&quot;/&gt;
&lt;/treeTable&gt;</programlisting>
          </section>
          <section id="section_gui_groupTable">
            <title>GroupTable</title>
            <para>Таблица с возможностью динамической группировки по любому полю.</para>
            <para>XML-имя компонента: groupTable.</para>
            <para>Атрибуты groupTable:</para>
            <itemizedlist>
              <listitem>
                <para>group - необязательный элемент, может в единственном экземпляре находиться внутри columns. Содержит набор элементов column, по которым будет выполняться первоначальная группировка.</para>
              </listitem>
            </itemizedlist>
            <para>Для правильного функционирования <classname>GroupTable</classname> должна быть соединена с GroupDatasource (см. Datasources).</para>
            <para>Пример использования:</para>
            <programlisting>&lt;groupTable id=&quot;customers&quot; &gt;
    &lt;columns&gt;
        &lt;group&gt;
            &lt;column id=&quot;firstName&quot;  /&gt;
        &lt;/group&gt;
        &lt;column id=&quot;birthDate&quot; width=&quot;300&quot; /&gt;
        &lt;column id=&quot;lastName&quot; /&gt;
        &lt;column id=&quot;address&quot; /&gt;
    &lt;/columns&gt;
    &lt;rows datasource=&quot;customers&quot;/&gt;
&lt;/groupTable&gt;</programlisting>
          </section>
          <section id="section_gui_tree">
            <title>Tree</title>
            <para>Обычное дерево.</para>
            <para>XML-имя компонента: tree.</para>
            <para>Атрибуты tree:</para>
            <itemizedlist>
              <listitem>
                <para><link linkend="attr_id">id</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_visible">visible</link></para>
              </listitem>
              <listitem>
                <para><link linkend="attr_stylename">styleName</link></para>
              </listitem>
              <listitem>
                <para>multiselect − необязательный атрибут, разрешает/запрещает множественное выделание.</para>
              </listitem>
              <listitem>
                <para>treechildren − обязательный элемент, декларирует используемый <glossterm linkend="glossary_datasource_id">datasource</glossterm> и его атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para><link linkend="attr_datasource">datasource</link></para>
                  </listitem>
                  <listitem>
                    <para><link linkend="attr_captionProperty">captionProperty</link></para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>actions − необязательный элемент, определяющий набор действий</para>
                <itemizedlist>
                  <listitem>
                    <para><link linkend="section_gui_action">action</link> − элемент, определяющий действие. Кроме описания произвольного действия возможно использование стандартных действий, определяемых перечислением ListActionType: create, edit, remove, refresh, add, exclude, excel.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para>Пример XML-дескриптора:</para>
            <programlisting>&lt;tree id=&quot;permissions-tree&quot;&gt;
    &lt;treechildren datasource=&quot;entities&quot; captionProperty=&quot;caption&quot;/&gt;
&lt;/tree&gt;</programlisting>
          </section>
          <section id="section_gui_fieldGroup">
            <title>FieldGroup</title>
            <para><classname>FieldGroup</classname> генерализует представление атрибутов одного или более <glossterm linkend="glossary_datasource_eng_id">Datasource</glossterm>.</para>
          </section>
        </section>
        <section>
          <title>Размещение компонентов внутри контейнера</title>
          <section>
            <title>BoxLayout</title>
            <para><classname>BoxLayout</classname> представляет собой контейнер с последовательным размещением компонентов.</para>
            <para>Существует 3 типа <classname>BoxLayout</classname>, определяемых именем XML-элемента:</para>
            <itemizedlist>
              <listitem>
                <para>hbox − горизонтальное расположение компонентов</para>
              </listitem>
              <listitem>
                <para>vbox − вертикальное расположение компонентов. vbox имеет 100% ширину по-умолчанию</para>
              </listitem>
              <listitem>
                <para>flowbox − горизонтальное расположение компонентов с переносом вниз. При недостатке места по горизонтали неумещающиеся компоненты будут перенесены &quot;на следующую строку&quot; (поведение аналогично Swing FlowLayout)</para>
              </listitem>
            </itemizedlist>
            <para>Могут быть использованы следующие XML-атрибуты:</para>
            <itemizedlist>
              <listitem>
                <para>id</para>
              </listitem>
              <listitem>
                <para>stylename</para>
              </listitem>
              <listitem>
                <para>enable</para>
              </listitem>
              <listitem>
                <para>visible</para>
              </listitem>
              <listitem>
                <para>width</para>
              </listitem>
              <listitem>
                <para>height</para>
              </listitem>
              <listitem>
                <para>align</para>
              </listitem>
              <listitem>
                <para>margin</para>
              </listitem>
              <listitem>
                <para>spacing</para>
              </listitem>
              <listitem>
                <para>expand</para>
              </listitem>
              <listitem>
                <para>expandable</para>
              </listitem>
            </itemizedlist>
            <para>Пример использования:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/boxLayout/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
          </section>
          <section>
            <title>GroupBox</title>
            <para>Контейнер, позволяющий выделить рамкой группу объектов, задать им общий заголовок и описание. Кроме того, он умеет сворачивать свое содержимое.</para>
            <para>XML-имя компонента: <parameter>groupBox</parameter>.</para>
            <para>Атрибуты <parameter>groupBox</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><property>id</property></para>
              </listitem>
              <listitem>
                <para><property>stylename</property></para>
              </listitem>
              <listitem>
                <para><property>height</property></para>
              </listitem>
              <listitem>
                <para><property>width</property></para>
              </listitem>
              <listitem>
                <para><property>visible</property></para>
              </listitem>
              <listitem>
                <para><property>enable</property></para>
              </listitem>
              <listitem>
                <para><property>expandable</property></para>
              </listitem>
              <listitem>
                <para><property>collapsable</property> − необязательный атрибут. Может принимать значение <property>true</property>, в этом случае компонент может сворачивать свое содержимое, или значение <property>false</property>.</para>
              </listitem>
              <listitem>
                <para><property>collapsed</property> − необязательный атрибут, принимающий значение <property>true</property> или <property>false</property>. В значении <property>true</property> компонент будет свернут по умолчанию.</para>
              </listitem>
            </itemizedlist>
            <para>Элементы <parameter>groupBox</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><property>caption</property> − необязательный элемент, его атрибут <property>label</property> содержит заголовок компонента.</para>
              </listitem>
              <listitem>
                <para><property>description</property> − необязательный элемент, его атрибут <property>label</property> содержит описание.</para>
              </listitem>
              <listitem>
                <para>обязательный элемент − контейнер, содержащий вложенные компоненты (vbox, hbox, grid, flowbox).</para>
              </listitem>
            </itemizedlist>
            <para>Пример использование компонента в <glossterm linkend="glossary_xml_descriptor_id">XML-дескрипторе</glossterm>:</para>
            <para><programlisting>&lt;groupBox collapsable=&quot;true&quot; stylename=&quot;edit-area&quot;&gt;
   &lt;caption label=&quot;msg://Caption&quot;/&gt;
   &lt;description label=&quot;msg://Description&quot;/&gt;
   &lt;vbox expandable=&quot;false&quot;&gt;
       &lt;twinColumn id=&quot;twinColGroups&quot; optionsDatasource=&quot;groups&quot; captionProperty=&quot;name&quot;
                   expandable=&quot;false&quot; rows=&quot;10&quot; columns=&quot;15&quot;/&gt;
       &lt;button enable=&quot;false&quot; caption=&quot;msg://Button&quot;/&gt;
   &lt;/vbox&gt;
&lt;/groupBox&gt;</programlisting></para>
          </section>
          <section>
            <title>GridLayout</title>
            <para>Контейнер, располагающий компоненты по сетке.</para>
            <para>XML-имя компонента: <parameter>grid</parameter>.</para>
            <para>Атрибуты <parameter>grid</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para><property>id</property></para>
              </listitem>
              <listitem>
                <para><property>visible</property></para>
              </listitem>
              <listitem>
                <para><property>spacing</property></para>
              </listitem>
              <listitem>
                <para><property>margin</property></para>
              </listitem>
              <listitem>
                <para><property>width</property></para>
              </listitem>
              <listitem>
                <para><property>height</property></para>
              </listitem>
              <listitem>
                <para><property>expandable</property></para>
              </listitem>
              <listitem>
                <para><property>align</property></para>
              </listitem>
              <listitem>
                <para><property>column</property> − необязательный элемент, декларирует атрибуты колонок сетки. Атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para><property>flex</property> − необязательный атрибут, задает соотношение ширин колонок.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para><property>columns</property> − обязательный элемент, содержит последовательность <property>column</property>. Атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para><property>count</property> − необязательный атрибут, задает количество колонок, если не заданы элементы <property>column</property>.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para><property>rows</property> − обязательный элемент, содержит последовательность <property>row</property>.</para>
              </listitem>
              <listitem>
                <para><property>row</property> − обязательный элемент, контейнер для содержимого ряда.</para>
                <itemizedlist>
                  <listitem>
                    <para><property>flex</property> − необязательный атрибут, задает соотношение высот рядов сетки.</para>
                  </listitem>
                  <listitem>
                    <para><property>visible</property></para>
                  </listitem>
                  <listitem>
                    <para><property>spacing</property></para>
                  </listitem>
                  <listitem>
                    <para><property>align</property></para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para>Пример использования компонента в <glossterm linkend="glossary_xml_descriptor_id">XML-дескрипторе</glossterm>:</para>
            <para><programlisting>&lt;grid spacing=&quot;true&quot; expandable=&quot;false&quot;&gt;
   &lt;columns&gt;
       &lt;column flex=&quot;1&quot;/&gt;
       &lt;column flex=&quot;1&quot;/&gt;
   &lt;/columns&gt;
   &lt;rows&gt;
       &lt;row&gt;
           &lt;label value=&quot;msg://name&quot;/&gt;
           &lt;textField id=&quot;name&quot; datasource=&quot;fileDs&quot; 
                      property=&quot;name&quot;
                      width=&quot;200px&quot;/&gt;
       &lt;/row&gt;
       &lt;row&gt;
           &lt;label value=&quot;msg://extension&quot;/&gt;
           &lt;label id=&quot;extension&quot; datasource=&quot;fileDs&quot; 
                  property=&quot;extension&quot;/&gt;
       &lt;/row&gt;
   &lt;/rows&gt;
&lt;/grid&gt;</programlisting></para>
          </section>
          <section>
            <title>Tabsheet</title>
            <para>Контейнер, содержащий закладки (<parameter>tabs</parameter>).</para>
            <para>XML-имя компонента: <parameter>tabsheet</parameter>.</para>
            <para>Атрибуты <parameter>tabsheet</parameter>:</para>
            <itemizedlist>
              <listitem>
                <para>id</para>
              </listitem>
              <listitem>
                <para>stylename</para>
              </listitem>
              <listitem>
                <para>height</para>
              </listitem>
              <listitem>
                <para>width</para>
              </listitem>
              <listitem>
                <para>visible</para>
              </listitem>
              <listitem>
                <para>expandable</para>
              </listitem>
            </itemizedlist>
            <para><parameter>tabsheet</parameter> должен содержать элементы <parameter>tab</parameter>, определяющие содержимое закладок. Каждый элемент <parameter>tab</parameter> может содержать следующие атрибуты:</para>
            <itemizedlist>
              <listitem>
                <para><property>id</property> − идентификатор закладки. Следует отметить, что закладка не является компонентом, и данный идентификатор используется только в рамках <parameter>Tabsheet</parameter>.</para>
              </listitem>
              <listitem>
                <para><property>caption</property> − заголовок закладки. Атрибут должен содержать ключ сообщения в <glossterm linkend="glossary_localized_folders_id">локализованном пакете сообщений</glossterm>.</para>
              </listitem>
              <listitem>
                <para><property>enable</property>. Это состояние закладки. Может иметь значение <property>true</property> (доступна) или <property>false</property> (недоступна). По умолчанию <property>enable = &quot;true&quot;</property>.</para>
              </listitem>
              <listitem>
                <para><property>lazy</property>. Задает отложенную загрузку содержимого закладки. Может иметь значение <property>true</property> или <property>false</property>. При отображении экрана lazy-закладки не загружают свое содержимого, что приводит к созданию меньшего количества компонентов в памяти и  к меньшему количеству запросов к БД. Компоненты закладки загружаются только в тот момент, когда пользователь выбирает данную закладку.
Если компоненты lazy-закладки требуют инициализации, проводить ее нужно не напрямую в методе <methodname>init()</methodname> <glossterm linkend="glossary_controller_id">контроллера</glossterm>, а в слушателе на переключение закладок <classname>Tabsheet.TabChangeListener</classname>.</para>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section>
          <title>Разное</title>
          <section>
            <title>AccessControl</title>
            <para>Компонент <classname>accessControl</classname> предназначен для декларативного управления доступом к частям экрана. Он представляет собой контейнер, который никак не отображает себя на экране, а только управляет атрибутами <parameter>visible</parameter> и <parameter>editable</parameter> входящих в него компонентов.</para>
            <para>Состояние управляемых компонентов определяется на основе двух элементов, вложенных в <classname>accessControl</classname>: <parameter>visible</parameter> и <parameter>editable</parameter>.</para>
            <para>Соответствующее значение принимается либо из скрипта, возвращающего <type>boolean</type>, либо из свойства объекта <classname>AccessData</classname>, связанного с компонентом (см. ниже). 
Скрипт задается либо атрибутом <parameter>script</parameter>, либо in-place в тексте элемента. 
Свойство объекта <classname>AccessData</classname> задается атрибутом <parameter>property</parameter> и имеет больший приоритет, чем скрипт.</para>
            <warning>
              <para>В случае <parameter>visible=false</parameter> вложенные компоненты вообще не создаются, поэтому будьте осторожны при обращении к ним из контроллера.</para>
            </warning>
            <example>
              <title>Пример</title>
              <programlisting>&lt;tab id=&quot;mainTab&quot; caption=&quot;msg://mainTab&quot;&gt;
&lt;accessControl data=&quot;workflow.client.web.ui.card.CardAccessData&quot; param=&quot;accessData&quot;&gt;
&lt;editable property=&quot;notStarted&quot;/&gt;

&lt;vbox margin=&quot;true&quot; expand=&quot;attachmentsPane&quot;&gt;
                ...</programlisting>
            </example>
            <section>
              <title>Объект AccessData</title>
              <para>В связи с тем, что одни и те же параметры доступа могут многократно потребоваться в разных частях экрана и в коде контроллера, компонент <classname>accessControl</classname> может быть связан с объектом Java|Groovy, вычисляющим и хранящим эти параметры. Т.о. дорогостоящая инициализация параметра доступа производится только один раз, и затем доступна на протяжении жизни экрана.</para>
              <para>Для связи компонента с данными доступа создайте класс, унаследованный от <classname>AbstractAccessData</classname> и задайте следующие атрибуты компонента <classname>accessControl</classname>:</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis role="bold">data</emphasis> − имя класса <classname>AccessData</classname></para>
                </listitem>
                <listitem>
                  <para><emphasis role="bold">param</emphasis> − имя параметра экрана, в котором будет сохранен объект <classname>AccessData</classname></para>
                </listitem>
              </itemizedlist>
              <para>В момент создания экрана загрузчик компонента <classname>accessControl</classname> проверяет наличие экземпляра <classname>AccessData</classname> в указанном параметре, и если его там нет, создает новый экземпляр.</para>
              <para>В дальнейшем в коде контроллера можно получить экземпляр <classname>AccessData</classname> из параметров экрана, например:</para>
              <programlisting>AbstractWfAccessData accessData = getContext().getParamValue(&quot;accessData&quot;);</programlisting>
              <para>При создании класса <classname>AccessData</classname> следует иметь в виду, что в параметры экрана-редактора всегда передается параметр <parameter>param$item</parameter>, содержащий текущий редактируемый экземпляр сущности. Однако этот экземпляр загружен по view вызывающего экрана, а не по view редактора.</para>
              <para>Свойства <classname>AccessData</classname>, на которые можно ссылаться из компонента <classname>accessControl</classname>, должны быть реализованы по стандарту JavaBeans: методами с сигнатурой boolean <methodname>getXxx()</methodname></para>
              <example>
                <title>Пример реализации AccessData</title>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/CardAccessData.java" encoding="UTF-8" parse="text"/></programlisting>
              </example>
            </section>
          </section>
          <section id="section_gui_action">
            <title>Action</title>
            <para><interfacename>Action</interfacename> − интерфейс, абстрагирующий действие от визуального компонента.</para>
            <para>Визуальный компонент, содержащий одно действие, реализует интерфейс <interface>Component.ActionOwner</interface>. Это, например, <classname>Button</classname>.</para>
            <para>Визуальный компонент, содержащий несколько действий, реализует интерфейс <interface>Component.ActionsHolder</interface>. Это <classname>Window</classname>, <classname>IFrame</classname>, <classname>Table</classname> и ее наследники, <classname>Tree</classname>, <classname>PopupButton</classname>, <classname>PickerField</classname>, <classname>LookupPickerField</classname>.</para>
            <section>
              <title>Декларативное создание действий</title>
              <para>В дескрипторе экрана может быть задан набор действий для некоторого <classname>ActionsHolder</classname>.</para>
              <itemizedlist>
                <title>Доступные атрибуты действия</title>
                <listitem>
                  <para><parameter>id</parameter> − идентификатор, должен быть уникален в рамках данного <classname>ActionsHolder</classname></para>
                </listitem>
                <listitem>
                  <para>caption</para>
                </listitem>
                <listitem>
                  <para>icon</para>
                </listitem>
                <listitem>
                  <para>enable</para>
                </listitem>
                <listitem>
                  <para>visible − в отличие от компонентов Groovy-выражения не поддерживаются</para>
                </listitem>
                <listitem>
                  <para><parameter>invoke</parameter> − имя вызываемого метода контроллера. Метод должен быть <classname>public</classname>, не возвращать результата, и либо не иметь аргументов, либо иметь один аргумент типа <classname>Component</classname>. Если метод имеет аргумент <classname>Component</classname>, то при вызове в него будет передан экземпляр визуального компонента, запустившего данное действие.</para>
                </listitem>
                <listitem>
                  <para><parameter>shortcut</parameter> − доступен только для действий, задаваемых в окне или фрейме. Задает комбинацию клавиш для вызова.</para>
                </listitem>
              </itemizedlist>
              <para>Примеры:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example2.txt" encoding="UTF-8" parse="text"/></programlisting>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example3.txt" encoding="UTF-8" parse="text"/></programlisting>
            </section>
            <section>
              <title>Использование в кнопках</title>
              <para>Действия, заданные для некоторого <classname>ActionsHolder</classname>, могут быть использованы в компонентах <classname>ActionOwner</classname>, например в <classname>Button</classname>. Для этого достаточно указать полное имя действия в соотв. атрибуте. Например:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example4.txt" encoding="UTF-8" parse="text"/></programlisting>
              <para>При этом Button возьмет значения атрибутов caption, icon, enable, visible из назначенного действия.</para>
            </section>
            <section>
              <title>Стандартные действия</title>
              <para>Для наследников ListComponent (это Table и Tree) существут набор стандартных действий, определяемых перечислением ListActionType. Для таких действий не нужно определять никаких атрибутов, кроме идентификатора. Например:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example5.txt" encoding="UTF-8" parse="text"/></programlisting>
              <para>Для компонентов PickerField и LookupPickerField существут набор стандартных действий, определяемых перечислением PickerField.ActionType. Для таких действий не нужно определять никаких атрибутов, кроме идентификатора. Например:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example6.txt" encoding="UTF-8" parse="text"/></programlisting>
            </section>
            <section>
              <title>Программное создание и управление действиями</title>
              <para>Базовым классом реализации действий является <classname>AbstractAction</classname>. Пример использования:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example7.txt" encoding="UTF-8" parse="text"/></programlisting>
              <para>При выполнении метода <methodname>addAction()</methodname> реализация <classname>ActionsHolder</classname> проверяет, нет ли уже в нем действия с таким же идентификатором. Если есть, то имеющееся действие будет заменено на новое переданное. Поэтому можно безопасно например декларировать стандартное действие в дескрипторе экрана, а затем в контроллере создать новое с переопределенными методами, и добавить в <classname>ActionsHolder</classname>.</para>
              <para>Кроме создания наследников <classname>AbstractAction</classname> или стандартных действий, возможно конфигурирование декларативно созданных действий путем получения их в контроллере и установки атрибутов. Например:</para>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/action/example8.txt" encoding="UTF-8" parse="text"/></programlisting>
              <para>При этом во всех визуальных компонентах, связанных с данным действием, значение соответствующего атрибута также изменится.</para>
            </section>
          </section>
          <section>
            <title>Aggregation</title>
            <para>Механизм задания аггрегаций для колонок в Table.</para>
            <itemizedlist>
              <title>Атрибуты aggregation</title>
              <listitem>
                <para>type −  функция аггрегирования:</para>
                <itemizedlist>
                  <listitem>
                    <para>SUM − сумма</para>
                  </listitem>
                  <listitem>
                    <para>AVG − среднее значение</para>
                  </listitem>
                  <listitem>
                    <para>COUNT − количество</para>
                  </listitem>
                  <listitem>
                    <para>MIN − минимальное значение</para>
                  </listitem>
                  <listitem>
                    <para>MAX − максимальное значение</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>formatter − задает формат вывода аггрегированного значения.</para>
              </listitem>
            </itemizedlist>
            <para>Логика применения форматирования к аггрегированному значению следующая: если в элементе <classname>aggregation</classname> указан <parameter>formatter</parameter>, то применяется он; иначе применяется <parameter>formatter</parameter> соответствующего аггрегированному значению <parameter>datatype</parameter>.</para>
            <example>
              <title>Пример использования</title>
              <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/aggregation/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
            </example>
          </section>
          <section>
            <title>Атрибуты</title>
            <section>
              <title>Align</title>
              <para>align − атрибут, задающий расположение компонента относительно вышестоящего контейнера.</para>
              <para>Возможные значения:</para>
              <itemizedlist>
                <listitem>
                  <para>TOP_RIGHT</para>
                </listitem>
                <listitem>
                  <para>TOP_LEFT</para>
                </listitem>
                <listitem>
                  <para>TOP_CENTER</para>
                </listitem>
                <listitem>
                  <para>MIDDLE_RIGHT</para>
                </listitem>
                <listitem>
                  <para>MIDDLE_LEFT</para>
                </listitem>
                <listitem>
                  <para>MIDDLE_CENTER</para>
                </listitem>
                <listitem>
                  <para>BOTTOM_RIGHT</para>
                </listitem>
                <listitem>
                  <para>BOTTOM_LEFT</para>
                </listitem>
                <listitem>
                  <para>BOTTOM_CENTER</para>
                </listitem>
              </itemizedlist>
            </section>
            <section>
              <title>Caption</title>
              <para>caption − XML-атрибут, устанавливающий заголовок для визуального компонента.</para>
              <para>Значением атрибута должна быть либо собственно строка сообщения, либо ключ в пакете сообщений. В случае ключа значение должно начинаться с префикса <parameter>msg://</parameter></para>
              <para>Способы задания ключа:</para>
              <itemizedlist>
                <listitem>
                  <para>Короткий ключ − при этом сообщение ищется в пакете, заданном для данного экрана:</para>
                  <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/caption/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
                </listitem>
                <listitem>
                  <para>Полный ключ, с заданием пакета:</para>
                  <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_gui/caption/example2.txt" encoding="UTF-8" parse="text"/></programlisting>
                </listitem>
              </itemizedlist>
            </section>
            <section>
              <title>CaptionProperty </title>
              <para>captionProperty − XML-атрибут визуального компонента, реализующего интерфейс OptionsField.</para>
              <para>Задает имя атрибута сущности, которую содержит источник данных, используемый для формирования списка опций (optionsDatasource).</para>
              <para>Если данный атрибут не задан, список опций будет содержать Instance Name экземпляров, содержащихся в списке.</para>
            </section>
          </section>
        </section>
        <section>
          <title>Атрибуты</title>
          <variablelist>
            <varlistentry>
              <term>align</term>
              <listitem>
                <para>Атрибут, задающий расположение компонента относительно вышестоящего контейнера.</para>
                <para>Возможные значения:</para>
                <itemizedlist>
                  <listitem>
                    <para>TOP_RIGHT</para>
                  </listitem>
                  <listitem>
                    <para>TOP_LEFT</para>
                  </listitem>
                  <listitem>
                    <para>TOP_CENTER</para>
                  </listitem>
                  <listitem>
                    <para>MIDDLE_RIGHT</para>
                  </listitem>
                  <listitem>
                    <para>MIDDLE_LEFT</para>
                  </listitem>
                  <listitem>
                    <para>MIDDLE_CENTER</para>
                  </listitem>
                  <listitem>
                    <para>BOTTOM_RIGHT</para>
                  </listitem>
                  <listitem>
                    <para>BOTTOM_LEFT</para>
                  </listitem>
                  <listitem>
                    <para id="attr_align">BOTTOM_CENTER</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_caption">
              <term>caption</term>
              <listitem>
                <para>XML-атрибут, устанавливающий заголовок для визуального компонента.</para>
                <para>Значением атрибута должна быть либо собственно строка сообщения, либо ключ в пакете сообщений. В случае ключа значение должно начинаться с префикса msg://</para>
                <para>Спсобы задания ключа:</para>
                <itemizedlist>
                  <listitem>
                    <para>Короткий ключ − при этом сообщение ищется в пакете, заданном для данного экрана:</para>
                    <programlisting>caption=&quot;msg://infoFieldCaption&quot;</programlisting>
                  </listitem>
                  <listitem>
                    <para>Полный ключ, с заданием пакета:</para>
                    <programlisting>caption=&quot;msg://com.haulmont.refapp.gui.app/infoFieldCaption&quot;</programlisting>
                  </listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_captionProperty">
              <term>captionProperty</term>
              <listitem>
                <para>XML-атрибут визуального компонента, реализующего интерфейс <interfacename>OptionsField</interfacename>.</para>
                <para>Задает имя атрибута сущности, которую содержит <glossterm linkend="glossary_datasource_id">источник данных</glossterm>, используемый для формирования списка опций (<link linkend="attr_optionsDatasource">optionsDatasource</link>).</para>
                <para>Если данный атрибут не задан, список опций будет содержать Instance Name экземпляров, содержащихся в списке.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_datasource">
              <term>datasource</term>
              <listitem>
                <para>XML-атрибут компонента, реализующего интерфейс <interfacename>DatasourceComponent</interfacename>.</para>
                <para>Предназначен для задания <link linkend="glossary_datasource_id">источника данных</link> и должен содержать имя источника данных, описанного в секции <parameter>dsContext</parameter> <link linkend="glossary_xml_descriptor_id">дескриптора</link> экрана.</para>
                <para>Смотрите также атрибут property.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_description">
              <term>description</term>
              <listitem>
                <para>Атрибут, задающий текст подсказки для компонента.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_editable">
              <term>editable</term>
              <listitem>
                <para>XML-атрибут, указывающий на возможность редактирования содержимого (не путать с <link linkend="attr_enable">enable</link>).</para>
                <para>Возможные значения - true, false. По умолчанию true.</para>
              </listitem>
              <listitem>На возможность редактирования содержимого для компонента, связанного с данными (наследника DatasourceComponent или List), влияет также Security. Если по данным security данный компонент должен быть недоступен для редактирования, значение атрибута editable не принимается во внимание.</listitem>
            </varlistentry>
            <varlistentry id="attr_enable">
              <term>enable</term>
              <listitem>
                <para>Атрибут компонента, устанавливающий его состояние &quot;enabled/disabled&quot; − доступен/недоступен.</para>
                <para>Если компонент недоступен, то он не принимает фокус ввода. Недоступность контейнера приводит к тому, что все его компоненты также становятся недоступными.

Возможные значения − true, false.

По умолчанию у всех компонентов enable = true.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_height">
              <term>height</term>
              <listitem>
                <para>Атрибут, устанавливающий высоту компонента.</para>
                <para>Может быть задана в пикселях либо в процентах от высоты вышестоящего контейнера. Например: 100px, 100%, 50. Если единица измерения не указана, подразумевается высота в пикселях.</para>
                <para>Простановка значения в % означает, что компонент по высоте займет соотвествующую часть пространства, предоставляемого контейнером более высокого уровня.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_icon">
              <term>icon</term>
              <listitem>
                <para>XML-атрибут, устанавливающий пиктограмму для визуального компонента.</para>
                <para>Значением атрибута должен быть путь к файлу пиктограммы относительно каталога темы. Например:</para>
                <programlisting>icon=&quot;icons/create.png&quot;</programlisting>
                <para>Если пиктограмма должна быть выбрана в зависимости от языка пользователя, можно указать путь к ней в пакете сообщений, а в атрибуте icon − ключ сообщения, например:</para>
                <programlisting>icon=&quot;msg://addIcon&quot;</programlisting>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_id">
              <term>id</term>
              <listitem>
                <para>Идентификатор компонента.</para>
                <para>Возможное значение − любой допустимый Java-идентификатор. Рекомендуется использовать только camelСase, например, <classname>userGrid</classname>, <classname>filterPanel</classname>.

Может быть указан для любого компонента и должен быть уникальным в пределах экрана.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_optionsDatasource">
              <term>optionsDatasource</term>
              <listitem>
                <para>XML-атрибут визуального компонента, реализующего интерфейс <interfacename>OptionsField</interfacename>.</para>
                <para>Задает имя <glossterm linkend="glossary_datasource_id">источника данных</glossterm>, используемого для формирования списка опций.</para>
                <para>Совместно с optionsDatasource может использоваться атрибут <link linkend="attr_captionProperty">captionProperty</link>.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_property">
              <term>property</term>
              <listitem>
                <para>XML-атрибут компонента, реализующего интерфейс <interfacename>DatasourceComponent</interfacename>.</para>
                <para>Предназначен для задания имени атрибута сущности, значение которого будет отображаться/редактироваться данным визуальным компонентом.</para>
                <para>Используется всегда совместно с атрибутом <link linkend="attr_datasource">datasource</link>.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_required">
              <term>required</term>
              <listitem>
                <para>XML-атрибут визуального компонента, реализующего интерфейс Field. Указывает, что в данное поле обязательно должно быть введено значение.</para>
                <para>Возможные значения атрибута - true, false. По умолчанию false.</para>
                <para>Совместно с required может использоваться атрибут requiredMessage.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_requiredMessage">
              <term>requiredMessage</term>
              <listitem>
                <para>XML-атрибут, используемый совместно с атрибутом <link linkend="attr_required">required</link>. Позволяет установить сообщение, выводимое пользователю в случае нарушения требования <link linkend="attr_required">required</link>.</para>
                <para>Атрибут должен содержать ключ сообщения в пакете, например: requiredMessage=&quot;msg://infoTextField.requiredMessage&quot;</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_stylename">
              <term>stylename</term>
              <listitem>
                <para>Атрибут, задающий имя стиля компонента.</para>
                <para>Для веб-клиента стиль задается в CSS.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_visible">
              <term>visible</term>
              <listitem>
                <para>Атрибут   либо элемент видимости компонента.</para>
                <para>Возможные значения − true, false, либо выражение Groovy с boolean-результатом. Если выражение длинное, имеет смысл использовать не атрибут, а элемент visible внутри текущего компонента - эффект тот же. Если контейнер невидим, не видны и все его компоненты. По умолчанию все компоненты видимы.</para>
              </listitem>
            </varlistentry>
            <varlistentry id="attr_width">
              <term>width</term>
              <listitem>
                <para>Атрибут, устанавливающий ширину компонента.</para>
                <para>Значение может быть задано в пикселях или в процентах от ширины вышестоящего контейнера. Например: 100px, 100%, 50. Если единица измерения не указана, подразумевается ширина в пикселях. Простановка значения в % означает, что компонент по ширине займет соотвествующую часть пространства, предоставляемого контейнером более высокого уровня.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section>
          <title>Элементы</title>
          <variablelist>
            <varlistentry id="element_formatter">
              <term>formatter</term>
              <listitem>
                <para>XML-элемент formatter задает класс, который будет применен для преобразования значения в строку.</para>
                <para>Атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para>class − имя класса, реализующего интерфейс <classname>com.haulmont.cuba.gui.components.Formatter</classname></para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            <varlistentry id="element_validator">
              <term>validator</term>
              <listitem>
                <para>XML-элемент для задания механизма валидации значений, введенных в визуальном компоненте.</para>
                <para>Атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para>script − путь к скрипту Groovy, осуществляющему валидацию</para>
                  </listitem>
                  <listitem>
                    <para>class − имя класса Java, реализующего интерфейс <interfacename>Field.Validator</interfacename></para>
                  </listitem>
                  <listitem>
                    <para>message − сообщение, выводимое пользователю в случае ошибки валидации. Атрибут должен содержать ключ сообщения в пакете, например, message=&quot;msg://infoTextField.validationMsg&quot;</para>
                  </listitem>
                </itemizedlist>
                <para>Выбор механизма валидации осуществляется следующим образом:</para>
                <itemizedlist>
                  <listitem>
                    <para>Если не указано значение атрибута script, и сам элемент validator не содержит текста выражения Groovy, то в качестве валидатора используется класс, указанный в атрибуте class.</para>
                  </listitem>
                  <listitem>
                    <para>Если элемент validator содержит текст, то он будет использован как выражение Groovy и выполнен с помощью <link linkend="section_scripting">Scripting</link>.</para>
                  </listitem>
                  <listitem>
                    <para>В противном случае с помощью <link linkend="section_scripting">Scripting</link> будет выполнен скрипт Groovy, указанный в атрибуте script.</para>
                  </listitem>
                </itemizedlist>
                <para>В выражение или скрипт Groovy будет передана одна переменная value, содержащая значение, введенное в визуальном компоненте.</para>
                <para>Выражение или скрипт должны вернуть boolean значение: true - valid, false - not valid.</para>
                <para>CUBA уже содержит несколько реализаций наиболее часто используемых валидаторов (см. пакет <package>com.haulmont.cuba.gui.components.validators</package>), которые можно применять в своих проектах:</para>
                <itemizedlist>
                  <listitem>
                    <para><classname>DateValidator</classname></para>
                  </listitem>
                  <listitem>
                    <para><classname>DoubleValidator</classname></para>
                  </listitem>
                  <listitem>
                    <para><classname>EmailValidator</classname></para>
                  </listitem>
                  <listitem>
                    <para><classname>IntegerValidator</classname></para>
                  </listitem>
                  <listitem>
                    <para><classname>LongValidator</classname></para>
                  </listitem>
                  <listitem>
                    <para><classname>PatternValidator</classname></para>
                  </listitem>
                  <listitem>
                    <para><classname>ScriptValidator</classname></para>
                  </listitem>
                </itemizedlist>
                <para>Примеры использования:</para>
                <programlisting>&lt;field id=&quot;imei&quot;&gt;
    &lt;validator class=&quot;com.haulmont.cuba.gui.components.validators.PatternValidator&quot;
               pattern=&quot;\d{15}&quot;
               message=&quot;msg://general.imeiValidationFailed&quot;/&gt;
&lt;/field&gt;
                                    
&lt;field id=&quot;maxCountOfVisits&quot;&gt;
    &lt;validator class=&quot;com.haulmont.cuba.gui.components.validators.IntegerValidator&quot;/&gt;
&lt;/field&gt;</programlisting>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
      <section id="section_datasource">
        <title>Источники данных</title>
        <para>Предназначен для реализации связанных с данными компонентов.</para>
        <para>Существуют следующие интерфейсы источников данных:</para>
        <itemizedlist>
          <listitem>
            <para><interfacename>Datasource</interfacename> − предназначен для работы с одним экземпляром сущности.</para>
            <itemizedlist>
              <listitem>
                <para><interfacename>RuntimePropsDatasource</interfacename> − предназначен для работы с динамическими свойствами сущностей.</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para><interfacename>CollectionDatasource</interfacename> − предназначен для работы с коллекцией сущностей</para>
            <itemizedlist>
              <listitem>
                <para><interfacename>HierarchicalDatasource</interfacename> − предназначен для работы с компонентами <classname>Tree</classname>, <classname>TreeTable</classname>.</para>
              </listitem>
              <listitem>
                <para><interfacename>GroupDatasource</interfacename> − предназначен для работы с компонентом <classname>GroupTable</classname>.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
        <para>Как правило, источники данных объявляются декларативно в секции <parameter>dsContext</parameter> <glossterm linkend="glossary_xml_descriptor_id">дескриптора экрана</glossterm>.</para>
      </section>
      <section id="section_localization">
        <title>Пакеты локализованных сообщений</title>
        <para>Содержит файлы локализованных сообщений  для задания названий сущностей, атрибутов сущностей, папок, заголовков закладок и так далее. Правила создания файлов локализованных сообщений:</para>
        <itemizedlist>
          <listitem>
            <para>Файл по умолчанию имеет имя <filename>messages.properties</filename>, для конкретного языка − <filename>messages_ru.properties</filename> и т.д. При отсутствии файла конкретного языка или при отсутствии искомого ключа в файле конкретного языка будет использовано сообщение из файла по умолчанию.</para>
          </listitem>
          <listitem>
            <para>Кодировка <code>UTF-8</code>.</para>
          </listitem>
          <listitem>
            <para>Можно включать другие файлы сообщений с помощью ключа <literal>@include</literal>. При этом если некоторый ключ встречается и во включаемом файле, и в текущем, будет использовано сообщение из текущего (переопределение). Пример включения файла:<programlisting>@include=com.haulmont.cuba.web

actions.Create=Create
actions.Edit=Edit
...</programlisting></para>
          </listitem>
          <listitem>
            <para>Полным именем пакета сообщений считается имя Java-пакета, содержащего языковые файлы. Например, именем пакета сообщений, расположенного в <filename>/com/haulmont/cuba/web/app/ui/security/user/messages.properties</filename> является строка <package>com.haulmont.cuba.web.app.ui.security.user</package></para>
          </listitem>
        </itemizedlist>
      </section>
      <section id="section_appFolders">
        <title>Панель папок</title>
        <para>Папки поиска</para>
        <para>Папки данной категории могут быть созданы и настроены пользователем (за
исключением подкатегории &quot;Системные&quot;). Подкатегория &quot;Системные&quot; содержит
предустановленные папки поиска, которые доступны всем
пользователям системы.</para>
        <para>Папки поиска обладают следующими особенностями:</para>
        <itemizedlist>
          <listitem>
            <para>отображают экраны с <glossterm linkend="glossary_filter_id">generic-фильтром</glossterm>;</para>
          </listitem>
          <listitem>
            <para>создаются пользователем из любого отображенного экрана с generic-фильтром;</para>
          </listitem>
          <listitem>
            <para>пользователь может изменить иерархию, название, либо переопределить фильтр поиска. </para>
          </listitem>
        </itemizedlist>
        <para>Папки приложения</para>
        <para>Папки данной категории содержат задачи, по которым требуются
действия пользователя.</para>
        <para>Обладают следующими особенностями:</para>
        <itemizedlist>
          <listitem>
            <para>отображают предопределенные экраны с <glossterm linkend="glossary_filter_id">фильтром</glossterm> или без;</para>
          </listitem>
          <listitem>
            <para>набор папок зависит от ролей пользователя; </para>
          </listitem>
          <listitem>
            <para>пользователь не может изменить настройки папок;</para>
          </listitem>
          <listitem>
            <para>в заголовке папки может отображаться текущее количество входящих в нее записей;</para>
          </listitem>
          <listitem>
            <para>периодически обновляются по таймеру.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section id="section_backgroundtasks">
        <title>Фоновые задачи</title>
        <para><emphasis role="bold">Предназначение</emphasis></para>
        <para>Фоновые задачи используются на клиентском уровне для выполнения длительных процессов без заморозки пользовательского интерфейса. </para>
        <para>В платформе реализован объект <classname>BackgroundWorker</classname>, который предоставляется окружением и управляет фоновыми задачами</para>
        <programlisting>BackgroundWorker backgroundWorker = AppConfig.getBackgroundWorker();</programlisting>
        <para><emphasis role="bold">Использование</emphasis></para>
        <orderedlist>
          <listitem>
            <para>Задача описывается как наследник абстрактного класса <classname>BackgroundTask</classname>. Для нее необходимо задать окно, которому принадлежит задача и описать главный метод <methodname>run()</methodname>.</para>
          </listitem>
          <listitem>
            <para>Создается объект управления задачей − <classname>BackgroundTaskHandler</classname>. Для этого задачу необходимо передать классу <classname>BackgroundWorker</classname>.</para>
          </listitem>
          <listitem>
            <para>Выполняется запуск задачи</para>
            <programlisting>// Задача с ограничением 10 секунд и с текущим окном в качестве родителя
final BackgroundTask&lt;Integer, Void&gt; progressIndicator = new BackgroundTask&lt;Integer, Void&gt;(10, this) {
    @Override
    public Void run(TaskLifeCycle&lt;T&gt; taskLifeCycle) {
        // 1 2 3 4 5 :-)
        for (int i = 0; i &lt; 5; i++) {
            Long res;
            try {
                TimeUnit.SECONDS.sleep(1);
            } catch (InterruptedException ignored) {
                return null;
            }
            // Оглашаем прогресс 
            taskLifeCycle.publish(i);
        }
        return null;
    }

    @Override
    public void canceled() {
        // отменено
    }

    @Override
    public void done(Void result) {
        // завершено
    }

    @Override
    public void progress(List&lt;Integer&gt; changes) {
        // индикация прогресса
    }
    
    @Override
    public Map&lt;String, Object&gt; getParams() {
        // передаём параметры
        return Collections.emptyMap();
    }
};

// Получение управляющего объекта и запуск
BackgroundTaskHandler taskHandler = backgroundWorker.handle(progressIndicator);
taskHandler.execute();</programlisting>
          </listitem>
        </orderedlist>
        <para><emphasis role="bold">Объект задачи</emphasis></para>
        <para><classname>BackgroundTask&lt;T, V&gt;</classname> − параметризованный класс:</para>
        <itemizedlist>
          <listitem>
            <para><classname>T</classname> − тип объектов, показывающих прогресс задачи. Они передаются в метод <methodname>progress()</methodname> при вызове <methodname>publish()</methodname> в рабочем потоке</para>
          </listitem>
          <listitem>
            <para><classname>V</classname> − тип результата задачи, его можно получить после выполнения задачи или вызвать синхронно <methodname>getResult()</methodname> для ожидания.</para>
          </listitem>
        </itemizedlist>
        <para>Метод <methodname>canceled()</methodname> вызывается только в случае управляемой отмены задачи (то есть при вызове <methodname>cancel()</methodname> у <classname>TaskHandler</classname>).</para>
        <para>Если у задачи истек таймаут, или было закрыто окно, в котором она исполнялась, то задача будет завершена без уведомлений.</para>
        <warning>
          <para>Следует помнить, что в Java невозможно прервать поток, если он не использует операций, выбрасывающих <errorname>InterrruptedException</errorname>. Никогда не перехватывайте это исключение или все исключения с целью тихо завершить операцию. Хорошим тоном является проверка флага <classname>isInterrupted()</classname> у объекта <classname>TaskLifeCycle</classname> в различных циклических операциях, для того чтобы вовремя отменить выполнение при прерывании задачи.</para>
        </warning>
        <para>Объекты <classname>BackgroundTask</classname> не имеют состояния. Если придерживаться этого подхода и не заводить полей для хранения промежуточных данных, то можно использовать множество параллельно работающих задач, используя всего один объект задачи.</para>
        <para>Объект <classname>BackgroundHandler</classname> можно запускать всего один раз; если требуется частый перезапуск задач, то используйте <classname>BackgroundTaskWrapper</classname></para>
        <para><emphasis role="bold">Отображение фоновых действий для пользователя</emphasis></para>
        <para>Иногда необходимо показывать пользователю окно с прогрессом и кнопкой <guibutton>Отмена</guibutton>. Для этого есть <classname>BackgroundWorkWindow&lt;T,V&gt;</classname> с набором статических методов.
В окне можно отображать статус задачи и разрешать/запрещать отмену фонового процесса.</para>
        <para><emphasis role="bold">Отслеживание исполнения задач</emphasis></para>
        <para>Если Вы хотите использовать параметры из UI компонентов, то необходимо переопределить метод <methodname>Map&lt;String, Object&gt; getParams()</methodname> . Он выполняется один раз при запуске задачи в потоке UI. В методе <methodname>run</methodname> они доступны в объекте <classname>TaskLifeCycle</classname>, аксессор − <methodname>getParams()</methodname>.</para>
        <para>При возникновении исключительных ситуаций вызывается метод <methodname>handleException</methodname>, в котором можно отобразить ошибку на UI.</para>
        <para>Для отмены и удаления зависших задач предусмотрены следующие меры:</para>
        <orderedlist>
          <listitem>
            <para><classname>WatchDog</classname> − поток, постоянно проверяющий задачи на истечение таймаута. Зависшие задачи прерываются и удаляются из обработки</para>
          </listitem>
          <listitem>
            <para>При закрытии родительского окна задачи она прерывается</para>
          </listitem>
          <listitem>
            <para>По истечению сессии пользователя все его задачи прерываются.
Для этого в <filename>web.xml</filename> указать:</para>
            <programlisting>&lt;listener&gt;
    &lt;listener-class&gt;com.haulmont.cuba.web.gui.utils.BackgroundWorkerListener&lt;/listener-class&gt;
&lt;/listener&gt;</programlisting>
          </listitem>
        </orderedlist>
        <para><emphasis role="bold">Объявление WatchDog</emphasis></para>
        <para>В <filename>app-web-spring.xml</filename> и <filename>app-desktop-spring.xml</filename> добавить объявление задачи по расписанию:</para>
        <programlisting>&lt;bean id=&quot;backgroundWorkerScheduler&quot; class=&quot;org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler&quot;&gt;
    &lt;property name=&quot;daemon&quot; value=&quot;true&quot;/&gt;
    &lt;property name=&quot;poolSize&quot; value=&quot;1&quot;/&gt;
&lt;/bean&gt;

&lt;task:scheduled-tasks scheduler=&quot;backgroundWorkerScheduler&quot;&gt;
    &lt;task:scheduled ref=&quot;cuba_BackgroundWorker_WatchDog&quot; method=&quot;cleanupTasks&quot; fixed-delay=&quot;2000&quot;/&gt;
&lt;/task:scheduled-tasks&gt; </programlisting>
        <para><emphasis role="bold">Настройки</emphasis></para>
        <para>Для Web слоя в WebConfig настраивается частота проверки изменений на стороне клиента (браузера): <parameter>cuba.backgroundWorker.uiCheckInterval</parameter> ( По умолчанию 2000 мс )</para>
      </section>
      <section>
        <title>Создание экранов</title>
        <section id="section_controller">
          <title>Контроллер экрана</title>
          <para><classname>Java</classname> или <classname>Groovy</classname> класс,  в котором можно реализовывать бизнес-логику и управлять поведением компонентов, описанных в <glossterm linkend="glossary_xml_descriptor_id">xml-дескрипторе</glossterm>, с помощью различных событий. Контроллер должен быть унаследован от одного из следующих базовых классов:</para>
          <itemizedlist>
            <listitem>
              <para><classname>AbstractFrame</classname> − реализует интерфейс <interfacename>IFrame</interfacename> и предназначен для реализации фреймов − многократно используемых компонентов экранов.</para>
            </listitem>
            <listitem>
              <para><classname>AbstractWindow</classname> − реализует интерфейc <interfacename>Window</interfacename> и предназначен для реализации любых экранов.</para>
            </listitem>
            <listitem>
              <para><classname>AbstractLookup</classname> − реализует интерфейс <interfacename>Lookup</interfacename> и предназначен для реализации <glossterm linkend="glossary_browser_id">браузеров</glossterm> с возможностью выбора элемента списка для использования его в вызывающем экране.</para>
            </listitem>
            <listitem>
              <para><classname>AbstractEditor</classname> − реализует интерфейс <interfacename>Editor</interfacename> и предназначен для реализации экранов редактирования экземпляра сущности.</para>
            </listitem>
          </itemizedlist>
          <para>Основной метод контроллера − <methodname>init()</methodname>. Этот метод вызывается после создания класса окна и всего дерева компонентов, описанного XML-дескриптором. Контроллер может в этом методе произвести инициализацию экрана перед его открытием (например, создать обработчики нажатий на кнопки и пр.).</para>
          <para>В метод <methodname>init()</methodname> из вызывающего кода передается коллекция параметров, состоящая из пар «ключ − значение». Вызывающим кодом может быть как контроллер другого экрана, так и пункт главного меню, либо прямая ссылка на экран извне приложения. Каждый параметр передается в коллекции в двух экземплярах − с простым именем и с тем же именем с префиксом param$.</para>
          <para>Класс контроллера должен быть зарегистрирован в XML-дескрипторе экрана в атрибуте <parameter>class</parameter> корневого элемента.</para>
          <section id="section_AbstractEditor">
            <title>AbstractEditor</title>
            <para><classname>AbstractEditor</classname> − базовый класс контроллеров экранов редактирования экземпляра сущности.</para>
            <para>При создании конкретного класса контроллера рекомендуется параметризовать <classname>AbstractEditor</classname> типом редактируемой сущности. При этом методы <methodname>getItem</methodname> и <methodname>initItem</methodname> будут работать с конкретным типом сущности и прикладному коду не потребуется дополнительных приведений типов. Например:</para>
            <programlisting>public class UserEditor extends AbstractEditor&lt;User&gt; {
...
    @Override
    protected void initItem(User item) {
    ...</programlisting>
            <para>Помимо общего для всех <glossterm linkend="glossary_controller_id">контроллеров</glossterm> метода <methodname>init</methodname> в контроллере экрана редактирования можно переопределить следующие:</para>
            <itemizedlist>
              <listitem>
                <para>Методы инициализации:</para>
                <itemizedlist>
                  <listitem>
                    <para><methodname>initItem</methodname></para>
                  </listitem>
                  <listitem>
                    <para><methodname>postInit</methodname></para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Методы завершения:</para>
                <itemizedlist>
                  <listitem>
                    <para><methodname>postValidate</methodname></para>
                  </listitem>
                  <listitem>
                    <para><methodname>preCommit</methodname></para>
                  </listitem>
                  <listitem>
                    <para><methodname>postCommit</methodname></para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para><emphasis role="bold">Диаграммы последовательностей</emphasis></para>
            <figure>
              <title>Инициализация экрана</title>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/EditorInit.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <figure>
              <title>Коммит и закрытие экрана с фреймом editWindowActions</title>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/EditorCommit.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <figure>
              <title>Коммит экрана с фреймом extendedEditWindowActions</title>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/ExtendedEditorCommit.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <figure>
              <title>Коммит и закрытие экрана с фреймом extendedEditWindowActions</title>
              <mediaobject>
                <imageobject>
                  <imagedata align="center" fileref="img/ExtendedEditorCommitAndClose.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
        </section>
        <section>
          <title>XML-дескриптор</title>
          <para>Описывает <glossterm linkend="glossary_datasource_id">источники данных</glossterm> и расположение визуальных компонентов экрана.</para>
          <para>XML-дескриптор содержит следующие элементы:</para>
          <itemizedlist>
            <listitem>
              <para><parameter>window</parameter> − корневой элемент. Атрибуты:</para>
              <orderedlist>
                <listitem>
                  <para><property>xmlns</property>=&quot;http://www.haulmont.com/schema/cuba/gui/window.xsd&quot; − схема XML</para>
                </listitem>
                <listitem>
                  <para><property>class</property> − имя класса <glossterm linkend="glossary_controller_id">контроллера</glossterm></para>
                </listitem>
                <listitem>
                  <para><property>messagesPack</property> − имя <glossterm linkend="glossary_localized_folders_id">пакета сообщений</glossterm>. Фактически это имя Java-пакета, содержащего файл  <filename>messages.properties</filename></para>
                </listitem>
                <listitem>
                  <para><property>caption</property> − заголовок экрана, должен содержать ссылку на сообщение из вышеуказанного пакета, например, <programlisting>caption=&quot;msg://caption&quot;</programlisting></para>
                </listitem>
                <listitem>
                  <para><property>focusComponent</property> − идентификатор компонента, который получит фокус ввода при отображениее экрана (необязательно).</para>
                </listitem>
              </orderedlist>
            </listitem>
            <listitem>
              <para><parameter>metadataContext</parameter> − опциональный элемент для инициализации <glossterm linkend="glossary_view_ru_id">представлений</glossterm> (views). Предпочтительным является определение всех представлений в одном общем файле <filename>ext-views.xml</filename>  модуля <structname>core</structname>. </para>
            </listitem>
            <listitem>
              <para><parameter>dsContext</parameter> − элемент, определяющий <glossterm linkend="glossary_datasource_id">источники данных</glossterm> данного экрана. Источники данных предназначены для реализации связанных с данными  компонентов.</para>
            </listitem>
            <listitem>
              <para><parameter>layout</parameter> − элемент, определяющий компоновку экрана.</para>
            </listitem>
          </itemizedlist>
        </section>
        <section id="section_registration_screens">
          <title>Регистрация экранов</title>
          <para>Все экраны, доступные в приложении, регистрируются в  файлах <filename>*-screens.xml</filename>.</para>
          <para>Набор файлов <filename>*-screens.xml</filename> конкретного проекта указывается в <glossterm linkend="glossary_app_properties_id">свойстве приложения</glossterm> <parameter>cuba.windowConfig</parameter>.</para>
          <itemizedlist>
            <title>Элементы XML</title>
            <listitem>
              <para><emphasis role="bold">screen-config</emphasis> − корневой элемент</para>
            </listitem>
            <listitem>
              <para><emphasis role="bold">include</emphasis> − включение другого <filename>*-screens.xml</filename>. Вместо включения рекомендуется использовать комбинацию файлов в <glossterm linkend="glossary_app_properties_id">свойстве приложения</glossterm> <parameter>cuba.windowConfig</parameter>. Атрибуты:</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis role="bold">file</emphasis> − путь к файлу, начиная от каталога конфигурации приложения <filename>WEB-INF/conf</filename></para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><emphasis role="bold">screen</emphasis> − регистрация экрана. Атрибуты:</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis role="bold">id</emphasis> − идентификатор  экрана, по которому   производится обращение</para>
                </listitem>
                <listitem>
                  <para><emphasis role="bold">template</emphasis> − путь к <glossterm linkend="glossary_xml_descriptor_id">дескриптору</glossterm> экрана. Сначала будет произведена попытка найти дескриптор в каталоге конфигурации приложения <filename>WEB-INF/conf</filename>. Если его там нет, то будет произведен поиск в <filename>classpath</filename>.</para>
                </listitem>
                <listitem>
                  <para><emphasis role="bold">class</emphasis> − имя класса. Элемент может быть использован вместо <emphasis role="bold">template</emphasis>. Класс должен реализовывать либо интерфейс <interface>Callable</interface>, либо интерфейс <interface>Runnable</interface>. В случае реализации интерфейса <interface>Callable</interface> метод <methodname>call()</methodname> должен возвращать экземпляр созданного <classname>Window</classname>, который будет возвращен как результат вызова <methodname>WindowManager.openWindow()</methodname>. Класс может содержать конструктор с параметрами для передачи ему строковых значений, заданных атрибутом <emphasis role="bold">param</emphasis>.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><emphasis role="bold">params</emphasis> − задает параметры вызова экрана. Элемент используется внутри элемента <emphasis role="bold">screen</emphasis>. Параметры вызова позволяют задать несколько идентификаторов одному дескриптору экрана. Параметры будут переданы <glossterm linkend="glossary_controller_id">контроллеру</glossterm> экрана в мапе на входе <methodname>init()</methodname>, либо в конструктор класса, если задан <emphasis role="bold">class</emphasis>.</para>
            </listitem>
            <listitem>
              <para><emphasis role="bold">param</emphasis> − задает параметр внутри элемента <emphasis role="bold">params</emphasis>. Атрибуты:</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis role="bold">name</emphasis> − имя параметра</para>
                </listitem>
                <listitem>
                  <para><emphasis role="bold">value</emphasis> − значение параметра. Если значение содержит строку &quot;true&quot; или &quot;false&quot;, в параметры экрана будет передано соответствующее значение типа <classname>Boolean</classname>.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </section>
    <section>
      <title>Механизмы платформы</title>
      <section id="section_extending_funct">
        <title>Механизмы расширения функциональности</title>
        <para>TODO</para>
      </section>
      <section id="section_fts">
        <title>Механизм полнотекстового поиска</title>
        <para>Полнотекстовый поиск предоставляет возможность неструктурированного поиска по всем атрибутам <glossterm linkend="glossary_entity">сущностей</glossterm> и по содержимому вложенных файлов.</para>
        <para>FTS содержит два взаимосвязанных механизма − индексирование и  поиск.</para>
        <para><emphasis role="bold">Индексирование</emphasis>. Изменения сущностей отслеживаются на уровне <glossterm linkend="glossary_entityManager_id">EntityManager</glossterm>&apos;а. Если изменился атрибут сущности, подлежащий индексированию, информация о сущности записывается в таблицу <database>SYS_FTS_QUEUE</database> с помощью <classname>FtsSenderBean</classname>. Отдельный асинхронный процесс извлекает ссылки на изменившиеся сущности из очереди, загружает сущности и индексирует их. </para>
        <para>Под индексируемыми атрибутами понимаются атрибуты данной сущности и  ссылающихся на нее сущностей, объявленные в <glossterm linkend="glossary_descriptor_fts_id">дескрипторе FTS</glossterm>.</para>
        <para><emphasis role="bold">Поиск</emphasis>. Поиск ведется по совпадению искомой строки с началом слов индексированных данных.

При включенном FTS главное окно приложения содержит поле поиска. Поиск производится с помощью <classname>FtsServiceBean</classname> и результаты отображаются в окне <filename>search-results.xml</filename>.

</para>
        <para>Дескриптор <glossterm linkend="glossary_fts_id">FTS</glossterm> представляет собой XML файл, содержащий настройки механизма полнотекстового поиска. Элементы дескриптора:</para>
        <itemizedlist>
          <listitem>
            <para><parameter>include</parameter>. Включение содержимого другого дескриптора. Атрибут <property>file</property> − путь к включаемому файлу относительно каталога конфигурации.</para>
          </listitem>
          <listitem>
            <para><parameter>entities</parameter>. Список сущностей, подлежащих индексированию и поиску.</para>
            <itemizedlist>
              <listitem>
                <para><parameter>entity</parameter>. Описание индексируемой сущности. 
Атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para><property>class</property> − java класс <glossterm linkend="glossary_entity">сущности</glossterm>;</para>
                  </listitem>
                  <listitem>
                    <para><property>show</property> (true/false) − должна ли данная сущность показываться в результатах поиска самостоятельно. False используется для сущностей-связей, которые нужны, например, для связи  файлов и карточек;</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para><parameter>include</parameter> − включить атрибут сущности в индекс. 
Атрибуты:</para>
                <itemizedlist>
                  <listitem>
                    <para><property>re</property> − регулярное выражение для отбора атрибутов по имени. Отбираются только атрибуты следующих типов: строка, число, дата, перечисление;</para>
                  </listitem>
                  <listitem>
                    <para><property>name</property> − имя атрибута, может быть путем по ссылочным атрибутам. Тип не проверяется, однако если имя является путем, то конечный атрибут должен быть сущностью, а не простым типом (атрибут простого типа не имеет здесь смысла, он должен индексироваться в своей сущности);</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para><parameter>exclude</parameter> − исключить ранее включенный атрибут. Возможные атрибуты такие же как в элементе <parameter>include</parameter>;</para>
              </listitem>
              <listitem>
                <para><parameter>searchables</parameter> − <classname>Groovy</classname>-скрипт для добавления в очередь на индексирование произвольных сущностей, связанных с измененной. Скрипт оперирует двумя переменными:</para>
                <para><varname>searchables</varname> − список сущностей;</para>
                <para><varname>entity</varname> − текущая сущность, помещаемая в очередь автоматически;</para>
              </listitem>
              <listitem>
                <para><parameter>searchableIf</parameter> − <classname>Groovy</classname>-скрипт для ограничения помещения в очередь некоторых экземпляров индексируемой сущности. 
Скрипт оперирует переменной <varname>entity</varname> (текущая сущность, которую нужно проверить).</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
        <para>Пример дескриптора:</para>
        <para><programlisting>&lt;fts-config&gt;
  &lt;include file=&quot;cuba/fts-config.xml&quot;/&gt;
  &lt;entities&gt;
    &lt;entity class=&quot;com.haulmont.workflow.core.entity.CardAttachment&quot; show=&quot;false&quot;&gt;
      &lt;include re=&quot;.*&quot;/&gt;
      &lt;exclude name=&quot;card&quot;/&gt;
      &lt;searchables&gt;
        searchables.add(entity.card)
      &lt;/searchables&gt;
    &lt;/entity&gt;

    &lt;entity class=&quot;com.haulmont.workflow.core.entity.AssignmentAttachment&quot; show=&quot;false&quot;&gt;
      &lt;include re=&quot;.*&quot;/&gt;
      &lt;exclude name=&quot;assignment&quot;/&gt;
      &lt;searchables&gt;
        searchables.add(entity.assignment.card)
      &lt;/searchables&gt;
    &lt;/entity&gt;

    &lt;entity class=&quot;com.haulmont.taskman.core.entity.ProjectGroup&quot;&gt;
      &lt;include name=&quot;name&quot;/&gt;
    &lt;/entity&gt;

    &lt;entity class=&quot;com.haulmont.taskman.core.entity.Project&quot;&gt;
      &lt;include re=&quot;.*&quot;/&gt;
    &lt;/entity&gt;

    &lt;entity class=&quot;com.haulmont.taskman.core.entity.Task&quot;&gt;
      &lt;include re=&quot;.*&quot;/&gt;
      &lt;include name=&quot;attachments.file&quot;/&gt;
      &lt;include name=&quot;assignments.attachments.file&quot;/&gt;
      &lt;exclude name=&quot;parentCard&quot;/&gt;
      &lt;exclude name=&quot;subCards&quot;/&gt;
      &lt;exclude name=&quot;timeUnit&quot;/&gt;
    &lt;/entity&gt;

    &lt;entity class=&quot;com.haulmont.docflow.core.entity.Contract&quot;&gt;
      &lt;include re=&quot;.*&quot;/&gt;
      &lt;include name=&quot;attachments.file&quot;/&gt;
      &lt;include name=&quot;assignments.attachments.file&quot;/&gt;
      &lt;exclude name=&quot;parentCard&quot;/&gt;
      &lt;exclude name=&quot;subCards&quot;/&gt;
      &lt;searchableIf&gt;
        entity.versionOf == null
      &lt;/searchableIf&gt;
    &lt;/entity&gt;
  &lt;/entities&gt;
&lt;/fts-config&gt;</programlisting></para>
      </section>
      <section id="section_database_update">
        <title>Механизм автоматического обновления базы данных</title>
        <para>TODO</para>
      </section>
      <section id="section_charts">
        <title>Механизм отображения диаграмм</title>
        <para>TODO</para>
      </section>
      <section id="section_scheduled_tasks">
        <title>Механизм реализации назначенных заданий</title>
        <para>TODO</para>
      </section>
      <section id="section_runtime_properties">
        <title>Динамические атрибуты</title>
        <para>TODO</para>
      </section>
      <section id="section_objects_cache">
        <title>Механизм организации кэшей данных</title>
        <para>TODO</para>
      </section>
      <section id="section_audit">
        <title>Механизм ведения журнала аудита изменений сущностей и сохранения версий</title>
        <para>TODO</para>
      </section>
    </section>
    <section id="section_restapi">
      <title>Интеграция со сторонними приложениями</title>
      <para>TODO</para>
    </section>
    <section>
      <title>Подсистема работы с конфигурационными параметрами</title>
      <para>Подсистема работы с конфигурационными параметрами позволяет сохранять/извлекать пары имя-значение с помощью стандартных Java-интерфейсов. При этом хранилищем параметров может быть база данных, системные свойства Java, и свойства приложения, задаваемые в файлах app.properties.</para>
      <para>Рекомендуется использовать только для хранения системных настроек, доступных администратору системы. Для хранения настроек пользователя лучше создавать отдельную сущность для их хранения и использовать стандартный эдитор для редактирования.</para>
      <para><emphasis role="bold">Использование</emphasis></para>
      <para>Для создания конфигурационного параметра необходимо:</para>
      <itemizedlist>
        <listitem>
          <para>Создать интерфейс, унаследованный от <interface>com.haulmont.cuba.core.config.Config</interface></para>
        </listitem>
        <listitem>
          <para>Создать методы доступа к параметру (getXXX/setXXX). Возможный тип параметра обсуждается ниже.</para>
        </listitem>
        <listitem>
          <para>Добавить интерфейсу аннотацию <literal>@Prefix</literal> для указания префикса имен входящих в интрефейс параметров</para>
        </listitem>
        <listitem>
          <para>Добавить интерфейсу и/или параметру аннотацию <literal>@Source</literal> для указания источника (места хранения) параметров</para>
        </listitem>
      </itemizedlist>
      <para>Например:</para>
      <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example1.txt" encoding="UTF-8" parse="text"/></programlisting>
      <para>Реализовывать интерфейс не нужно.</para>
      <para>Для получения доступа к параметрам используется интерфейс инфраструктуры <interface>Configuration</interface> или его статический фасад <interface>ConfigProvider</interface>.</para>
      <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example2.txt" encoding="UTF-8" parse="text"/></programlisting>
      <para>Стандартный UI для доступа к параметрам, хранящимся в базе данных, предоставляет МБин haulmont.cuba:service=ConfigStorage. Он содержит следующие методы:</para>
      <itemizedlist>
        <listitem>
          <para>setProperty(p1, p2) - установить параметр с именем p1 в значение p2</para>
        </listitem>
        <listitem>
          <para>getProperty(p1) - показать параметр с именем p1</para>
        </listitem>
        <listitem>
          <para>removeProperty(p1) - удалить параметр с именем p1</para>
        </listitem>
        <listitem>
          <para>printProperties(p1) - показать все параметры с фильтром на имя p1 по правилам SQL like</para>
        </listitem>
        <listitem>
          <para>printProperties - показать все параметры</para>
        </listitem>
        <listitem>
          <para>loadSystemProperties - загрузить в System.properties параметры из файла conf/system.properties</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Возможности</emphasis></para>
      <para><emphasis role="bold">Имена параметров</emphasis></para>
      <para>Имя параметра в БД или в app.properties формируется по следующему принципу:</para>
      <itemizedlist>
        <listitem>
          <para>Если на параметре есть аннотация <literal>@Property</literal>, то берется ее значение</para>
        </listitem>
        <listitem>
          <para>Иначе:</para>
          <itemizedlist>
            <listitem>
              <para>Если есть аннотация <literal>@Prefix</literal>, берется ее значение</para>
            </listitem>
            <listitem>
              <para>Если нет аннотации <literal>@Prefix</literal>, то</para>
              <itemizedlist>
                <listitem>
                  <para>Если интерфейс является внутренним, то берется полное имя включающего класса и добавляется &quot;.&quot;</para>
                </listitem>
                <listitem>
                  <para>Иначе берется полное имя пакета и добавляется &quot;.&quot;</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>Добавляется декапитализированное имя метода доступа без get/set/is (см. комментарии к методу <methodname>com.haulmont.cuba.core.config.ConfigUtil#extendedUncapitalize</methodname>)</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Источники параметров</emphasis></para>
      <para>В соответствии со значениями <classname>com.haulmont.cuba.core.config.SourceType</classname> на данный момент возможны 3 источника параметров: app.propperties, System.properties или база данных.</para>
      <para>В случае базы данных параметры хранятся в таблице <database>SYS_CONFIG</database>.</para>
      <para>Аннотация <literal>@Source</literal> может быть задана как на весь интерфейс, так и на отдельный параметр. В первом случае она определяет источник всех параметров данного интерфейса. Во втором случае она переопределяет источник для данного параметра, если он отличен от указанного для интерфейса.</para>
      <para><emphasis role="bold">Типы параметров</emphasis></para>
      <para>Без дополнительных усилий параметр может быть любого простого типа либо его объектного аналога (String, int, Integer, etc.) либо сущностью, реализующей интерфейс Entity.</para>
      <para>Для произвольного типа необходимо реализовать классы TypeStringify и TypeFactory для пребразования значения в строку и из нее, и указать эти классы для параметра с помощью аннотаций @Stringify и @Factory.</para>
      <para>Рассмотрим этот процесс на примере типа UUID.</para>
      <itemizedlist>
        <listitem>
          <para>Создаем класс com.haulmont.cuba.core.config.type.UuidTypeFactory унаследованный от com.haulmont.cuba.core.config.type.TypeFactory и реализуем в нем метод:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example3.txt" encoding="UTF-8" parse="text"/></programlisting>
        </listitem>
        <listitem>
          <para>TypeStringify создавать не нужно, т.к. по умолчанию будет использован Object.toString() - в данном случае он нам подходит.</para>
        </listitem>
        <listitem>
          <para>Аннотируем параметр:</para>
          <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example4.txt" encoding="UTF-8" parse="text"/></programlisting>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Значения по-умолчанию</emphasis></para>
      <para>Для параметров могут быть заданы значения по-умолчанию. Эти значения будут возвращаться если данный параметр не задан (не существует в БД или в app.properties).</para>
      <para>Дефолтное значение может быть задано в виде строки с помощью аннотации @com.haulmont.cuba.core.config.defaults.Default, либо в виде конкретного типа с помощью других аннотаций пакета com.haulmont.cuba.core.config.defaults.</para>
      <para>Для сущностей дефолтное значение задается в виде имя_сущности-id-имя_представления, например</para>
      <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/section_architecture/configurationParameters/example5.txt" encoding="UTF-8" parse="text"/></programlisting>
      <para>имя представления необязательно.</para>
    </section>
    <section>
      <title>Описание конфигурационных файлов</title>
      <variablelist>
        <varlistentry id="text_context_xml">
          <term>context.xml</term>
          <listitem>
            <para>В данном конфигурационном файле задается <link linkend="section_dbms_types">тип используемой СУБД</link>, а также использование <classname>PersistenceManager</classname>.</para>
            <para>Пример файла <filename>context.xml</filename> для приложения <link linkend="section_quick_start_data_model">Магазин</link>:</para>
            <programlisting language="xml"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/context.xml" encoding="UTF-8" parse="text"/></programlisting>
          </listitem>
        </varlistentry>
        <varlistentry id="text_web_xml_core">
          <term>web.xml</term>
          <listitem>
            <para>Файл <filename>web.xml</filename> модуля <structname>core</structname> приложения <link linkend="section_quick_start_data_model">Магазин</link>:</para>
            <programlisting language="xml"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/web.xml" encoding="UTF-8" parse="text"/></programlisting>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>TODO</para>
    </section>
    <section id="section_dbms_types">
      <title>Поддерживаемые СУБД</title>
      <para>Тип используемой СУБД определяется <glossterm linkend="glossary_app_properties_id">параметром</glossterm> <link linkend="section_middleware_id">среднего слоя</link> <parameter>cuba.dbmsType</parameter> и настройкой источника данных в <application>Tomcat</application>.</para>
      <variablelist>
        <varlistentry>
          <term>PostgreSQL</term>
          <listitem>
            <para>Поддерживается всеми проектами платформы: CUBA, Workflow, FTS, Charts, CCPayments, RefApp.</para>
            <para><emphasis role="bold">Настройка</emphasis></para>
            <para>Параметр среднего слоя:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/cuba_dbmstype_postgres.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Источник данных в <link linkend="text_context_xml">context.xml</link>:</para>
            <programlisting language="xml"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/context_postgres.xml" encoding="UTF-8" parse="text"/></programlisting>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Microsoft SQL Server</term>
          <listitem>
            <para>Поддерживается проектами: CUBA, Workflow, FTS, RefApp.</para>
            <para><emphasis role="bold">Настройка</emphasis></para>
            <para>Параметр среднего слоя:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/cuba_dbmstype_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Источник данных в <link linkend="text_context_xml">context.xml</link>:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/context_mssql.xml" encoding="UTF-8" parse="text"/></programlisting>
            <para>В настройках MS SQL надо включить возможность логина для пользователя sa и задать для него пароль из context.xml. Это можно сделать из MS SQL Management Studio, в окне Object Explorer.

Instance - ваш SQL Server.</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/instance_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Включить сетевую аутентификацию:</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/instance1_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
            <para>Разрешить доступ по TCP/IP можно из Sql Server Configuration Manager</para>
            <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/instance2_mssql.txt" encoding="UTF-8" parse="text"/></programlisting>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="chapter3.xml" encoding="UTF-8"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="chapter4.xml" encoding="UTF-8"/>
  <appendix>
    <title>Часто задаваемые вопросы</title>
    <para>TODO</para>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="qanda.xml" encoding="UTF-8"/>
  </appendix>
  <appendix>
    <title>Схема базы данных</title>
    <figure>
      <title>Схема базы данных</title>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="img/dbStructure.png"/>
        </imageobject>
      </mediaobject>
    </figure>
  </appendix>
  <appendix id="appendix_security_properties">
    <title>Описание конфигурационных свойств</title>
    <itemizedlist>
      <listitem>
        <para id="property_available_locales"><parameter>cuba.availableLocales</parameter>. Список поддерживаемых языков интерфейса. Формат свойства: <code>&lt;Название языка&gt;|&lt;Языковой код&gt;</code>. Значения разных языков между собой разделяются точкой с запятой. Пример: <programlisting>cuba.availableLocales=French|fr;English|en</programlisting></para>
        <para><code>&lt;Название языка&gt;</code> −  это название, которое будет отображаться в списках доступных языков. Например, в окне входа в систему, в экране редактирования пользователя. <code>&lt;Языковой код</code>&gt; − это суффикс для формирования <glossterm linkend="glossary_localized_folders_id">файлов локализации</glossterm>. Например, <filename>messages_fr.properties.</filename></para>
        <para>Следует иметь в виду, что язык, который указан первым в списке языков  свойства <parameter>cuba.availableLocales</parameter>, будет отображаться первым в списке доступных языков в том случае, если среди языков данного свойства не будет найден текущий язык системы. В противном случае первым будет отображаться язык системы. </para>
        <para>Если для языка,  указанного в свойстве, отсутствует файл для его локализации, то по умолчанию берется локализация из файла без суффикса − <filename>messages.properties</filename>.</para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.availableLocales=English|en;Russian|ru</parameter></para>
        <para>Интерфейс: <classname>GlobalConfig</classname></para>
        <para>Уровень: свойство принадлежит всем <glossterm linkend="glossary_app_tiers">уровням</glossterm>.</para>
      </listitem>
      <listitem id="parameter_locale_visible">
        <para><parameter>cuba.web.localeSelectVisible</parameter>. Включает или отключает возможность пользователя выбирать язык
интерфейса при входе в систему. </para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.web.localeSelectVisible=true</parameter></para>
        <para>Интерфейс: <classname>GlobalConfig</classname></para>
        <para>Уровень: свойство принадлежит всем <glossterm linkend="glossary_app_tiers">уровням</glossterm>.</para>
      </listitem>
      <listitem>
        <para><parameter>cuba.trustedClientPassword</parameter>. Пароль, используемый методом <methodname>LoginService.loginTrusted()</methodname>. Доверенный клиент может зайти в систему, не вводя пользовательский пароль. Это свойство используется при интеграции с <application>Active Directory</application>.</para>
        <para>Интерфейсы: <classname>GlobalConfig</classname>, <classname>ServerConfig</classname></para>
        <para>Уровень: свойство принадлежит всем <glossterm linkend="glossary_app_tiers">уровням</glossterm>.</para>
      </listitem>
      <listitem id="property_sessionExpirTime">
        <para><parameter>cuba.userSessionExpirationTimeoutSec</parameter> задает  таймаут неактивности сессии пользователя
 в секундах.</para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.userSessionExpirationTimeoutSec=1800</parameter></para>
        <para>Интерфейс: <classname>ServerConfig</classname></para>
        <para>Уровень: <glossterm linkend="text_middleware_id">Middleware</glossterm>.</para>
        <caution>
          <title>Совет</title>
          <para>В большинстве случаев рекомендуется выставлять параметры <parameter>cuba.userSessionExpirationTimeoutSec</parameter> и  <link linkend="property_httpExpirTime">cuba.httpSessionExpirationTimeoutSec</link>  в одинаковое значение.</para>
        </caution>
      </listitem>
      <listitem id="property_httpExpirTime">
        <para><parameter>cuba.httpSessionExpirationTimeoutSec</parameter> задает  таймаут бездействия HTTP-сессии
 в секундах.</para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.httpSessionExpirationTimeoutSec=1800</parameter></para>
        <para>Интерфейс: <classname>WebConfig</classname></para>
        <para>Уровень:  <glossterm linkend="text_webclient_id">Web Client</glossterm>.</para>
        <caution>
          <title>Совет</title>
          <para>В большинстве случаев рекомендуется выставлять параметры <link linkend="property_sessionExpirTime">cuba.userSessionExpirationTimeoutSec</link> и  <parameter>cuba.httpSessionExpirationTimeoutSec</parameter>  в одинаковое значение.</para>
        </caution>
      </listitem>
      <listitem id="property_passwPolicyEnabled">
        <para><parameter>cuba.passwordPolicyEnabled</parameter> определяет, нужно ли применять политику проверки пароля. Если свойство имеет значение <code>true</code>, то все новые пароли будут проверены в соответствии со свойством cuba.passwordPolicyRegExp.</para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.passwordPolicyEnabled=false</parameter></para>
        <para>Интерфейс: <classname>ClientConfig</classname></para>
        <para>Уровни:   <glossterm linkend="text_webclient_id">Web Client</glossterm>, <glossterm linkend="text_portal_id">Web Portal</glossterm>, <glossterm linkend="text_desktop_id">Desktop Client</glossterm>.</para>
      </listitem>
      <listitem id="property_passwPolicyRegExp">
        <para><parameter>cuba.passwordPolicyRegExp</parameter>. В данном свойстве задается регулярное выражение, которое используется в политике проверки пароля.</para>
        <para>Значение по умолчанию:</para>
        <para><prompt>cuba.passwordPolicyRegExp=((?=.*\\d)(?=.*\\p{javaLowerCase}) (?=.*\\p{javaUpperCase}).{6,20})</prompt></para>
        <para>Это означает, что в пароль должен содержать от 6 до 20 символов, в нем можно использоваться цифры, символы и буквы латинского алфавита. При этом обязательно в пароле должна  быть хотя бы одна цифра, одна буква в нижнем регистре и одна буква в верхнем регистре. Более подробная информация о синтаксисе регулярных выражений можно найти на сайтах: <ulink url="http://ru.wikipedia.org/wiki/%D0%A0%D0%B5%D0%B3%D1%83%D0%BB%D1%8F%D1%80%D0%BD%D1%8B%D0%B5_%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F">http://ru.wikipedia.org/wiki/Регулярные_выражения</ulink> и <ulink url="http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html">http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html</ulink></para>
        <para>Интерфейс: <classname>ClientConfig</classname></para>
        <para>Уровни:   <glossterm linkend="text_webclient_id">Web Client</glossterm>, <glossterm linkend="text_portal_id">Web Portal</glossterm>, <glossterm linkend="text_desktop_id">Desktop Client</glossterm>.</para>
      </listitem>
      <listitem>
        <para><parameter>cuba.web.loginDialogDefaultUser</parameter> задает имя пользователя по умолчанию. Оно будет автоматически указываться в экране входа в систему. Если в качестве значения свойства указать
&lt;disabled&gt;, то при входе в систему пользователь сам будет вводить имя.</para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.web.loginDialogDefaultUser=admin</parameter></para>
        <para>Интерфейс: <classname>WebConfig</classname></para>
        <para>Уровень:  <glossterm linkend="text_webclient_id">Web Client</glossterm>.</para>
      </listitem>
      <listitem>
        <para><parameter>cuba.web.loginDialogDefaultPassword</parameter> задает имя пользователя по умолчанию. Оно будет автоматически указываться в экране входа в систему. Если в качестве значения свойства указать
&lt;disabled&gt;, то при входе в систему пользователь сам будет вводить пароль.</para>
        <para>Значение по умолчанию:</para>
        <para><parameter>cuba.web.loginDialogDefaultPassword=admin</parameter></para>
        <para>Интерфейс: <classname>WebConfig</classname></para>
        <para>Уровень:  <glossterm linkend="text_webclient_id">Web Client</glossterm>.</para>
      </listitem>
      <listitem id="property_fullNamePattern">
        <para><parameter>cuba.user.fullNamePattern</parameter> задает шаблон формирования полного имени пользователя. </para>
        <para>Значение по умолчанию</para>
        <para><parameter>cuba.user.fullNamePattern={LL| }{F|. }{M|.}</parameter></para>
        <para>Таким образом, можно сформировать полное имя по  шаблону из имени, отчества и фамилии  пользователя. В шаблоне  используются следующие правила:</para>
        <itemizedlist>
          <listitem>
            <para>Фигурными скобками {} разделяются части шаблона между собой</para>
          </listitem>
          <listitem>
            <para>Правила формирования шаблона внутри фигурных скобок: один из следующих символов и далее, без пробела, символ   |.</para>
            <para><code>LL</code> означает фамилию пользователя, написанную в полном варианте (Иванов)</para>
            <para><code>L</code> означает фамилию пользователя, написанную в кратком варианте (И)</para>
            <para><code>FF</code> означает имя пользователя, написанного в полном варианте (Петр)</para>
            <para><code>F</code> означает фамилию пользователя, написанную в кратком варианте (П)</para>
            <para><code>MM</code> означает отчество пользователя, написанное в полном варианте (Сергеевич)</para>
            <para><code>M</code> означает отчество пользователя, написанное в кратком варианте (С)</para>
          </listitem>
          <listitem>
            <para>После символа | могут идти любые символы, в том числе, и пробел.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </appendix>
  <appendix id="appendix_shop_conf_files">
    <title>Конфигурационные файлы приложения Магазин</title>
    <variablelist>
      <varlistentry>
        <term>Модуль core</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>context.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/core/context.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-app.properties</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/core/shop-app.properties" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-scheduling-spring.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/core/shop-scheduling-spring.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-spring.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/core/shop-spring.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-views.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/core/shop-views.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>web.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/core/web.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Модуль global</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>shop-metadata.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/global/shop-metadata.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-persistence.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/global/shop-persistence.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Модуль gui</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>shop-screens.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/gui/shop-screens.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Модуль web</term>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>context.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/context.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-web-app.properties</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/shop-web-app.properties" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-web-menu.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/shop-web-menu.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-web-permissions.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/shop-web-permissions.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-web-screens.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/shop-web-screens.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>shop-web-spring.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/shop-web-spring.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>web.xml</term>
              <listitem>
                <programlisting><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="source/conf_files_shop/web/web.xml" encoding="UTF-8" parse="text"/></programlisting>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>
    </variablelist>
  </appendix>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="glossary.xml" encoding="UTF-8"/>
  <index type="А" lang="ru">
    <para>TODO</para>
  </index>
</book>
